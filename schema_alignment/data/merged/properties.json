{
  "dateSent": {
    "title": "dateSent",
    "classes": [
      "Message"
    ],
    "description": "The date/time at which the message was sent.",
    "types": [
      "DateTime"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "paymentStatus": {
    "title": "paymentStatus",
    "classes": [
      "Invoice"
    ],
    "description": "The status of payment; whether the invoice has been paid or not.",
    "types": [
      "PaymentStatusType",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "isPlanForApartment": {
    "title": "isPlanForApartment",
    "classes": [
      "FloorPlan"
    ],
    "description": "Indicates some accommodation that this floor plan describes.",
    "types": [
      "Accommodation"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "countryOfOrigin": {
    "title": "countryOfOrigin",
    "classes": [
      "CreativeWork",
      "TVSeries",
      "Product",
      "Movie",
      "TVSeason",
      "TVEpisode",
      "N91edcb56477541399179f4c45319f898"
    ],
    "description": "The country of origin of something, including products as well as creative  works such as movie and TV content.\n\nIn the case of TV and movie, this would be the country of the principle offices of the production company or individual responsible for the movie. For other kinds of [[CreativeWork]] it is difficult to provide fully general guidance, and properties such as [[contentLocation]] and [[locationCreated]] may be more applicable.\n\nIn the case of products, the country of origin of the product. The exact interpretation of this may vary by context and product type, and cannot be fully enumerated here.\nThe country of the principal offices of the production company or individual responsible for the movie or program.",
    "types": [
      "Country"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "permittedUsage": {
    "title": "permittedUsage",
    "classes": [
      "Accommodation"
    ],
    "description": "Indications regarding the permitted usage of the accommodation.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "scheduledTime": {
    "title": "scheduledTime",
    "classes": [
      "PlanAction"
    ],
    "description": "The time the object is scheduled to.",
    "types": [
      "Date",
      "DateTime"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "itinerary": {
    "title": "itinerary",
    "classes": [
      "Trip"
    ],
    "description": "Destination(s) ( [[Place]] ) that make up a trip. For a trip where destination order is important use [[ItemList]] to specify that order (see examples).",
    "types": [
      "Place",
      "ItemList"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "uploadDate": {
    "title": "uploadDate",
    "classes": [
      "MediaObject"
    ],
    "description": "Date (including time if available) when this media object was uploaded to this site.",
    "types": [
      "DateTime",
      "Date"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "floorLimit": {
    "title": "floorLimit",
    "classes": [
      "PaymentCard"
    ],
    "description": "A floor limit is the amount of money above which credit card transactions must be authorized.",
    "types": [
      "MonetaryAmount"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "addressCountry": {
    "title": "addressCountry",
    "classes": [
      "GeoCoordinates",
      "DefinedRegion",
      "PostalAddress",
      "GeoShape"
    ],
    "description": "The country. For example, USA. You can also provide the two-letter [ISO 3166-1 alpha-2 country code](http://en.wikipedia.org/wiki/ISO_3166-1).",
    "types": [
      "Country",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "broadcastSignalModulation": {
    "title": "broadcastSignalModulation",
    "classes": [
      "BroadcastFrequencySpecification"
    ],
    "description": "The modulation (e.g. FM, AM, etc) used by a particular broadcast service.",
    "types": [
      "QualitativeValue",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "issn": {
    "title": "issn",
    "classes": [
      "Blog",
      "WebSite",
      "Dataset",
      "CreativeWorkSeries",
      "PeriodicalLiterature"
    ],
    "description": "The International Standard Serial Number (ISSN) that identifies this serial publication. You can repeat this property to identify different formats of, or the linking ISSN (ISSN-L) for, this serial publication.\nInternational Standard Serial Number (ISSN)",
    "types": [
      "Text",
      "XMLSchema#string"
    ],
    "subPropertyOf": [
      "identifier"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia",
      "YAGO"
    ]
  },
  "deathDate": {
    "title": "deathDate",
    "classes": [
      "Person"
    ],
    "description": "Date of death.",
    "types": [
      "Date",
      "XMLSchema#date",
      "N1beadfa8a4c14a0b94585259e0ec6ca1"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia",
      "YAGO"
    ]
  },
  "cvdNumVentUse": {
    "title": "cvdNumVentUse",
    "classes": [
      "CDCPMDRecord"
    ],
    "description": "numventuse - MECHANICAL VENTILATORS IN USE: Total number of ventilators in use.",
    "types": [
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "isVariantOf": {
    "title": "isVariantOf",
    "classes": [
      "Product",
      "ProductModel"
    ],
    "description": "Indicates the kind of product that this is a variant of. In the case of [[ProductModel]], this is a pointer (from a ProductModel) to a base product from which this product is a variant. It is safe to infer that the variant inherits all product features from the base model, unless defined locally. This is not transitive. In the case of a [[ProductGroup]], the group description also serves as a template, representing a set of Products that vary on explicitly defined, specific dimensions only (so it defines both a set of variants, as well as which values distinguish amongst those variants). When used with [[ProductGroup]], this property can apply to any [[Product]] included in the group.",
    "types": [
      "ProductModel",
      "ProductGroup"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "proprietaryName": {
    "title": "proprietaryName",
    "classes": [
      "Drug",
      "DietarySupplement"
    ],
    "description": "Proprietary name given to the diet plan, typically by its originator or creator.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "seatRow": {
    "title": "seatRow",
    "classes": [
      "Seat"
    ],
    "description": "The row location of the reserved seat (e.g., B).",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "error": {
    "title": "error",
    "classes": [
      "Action"
    ],
    "description": "For failed actions, more information on the cause of the failure.",
    "types": [
      "Thing"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "supply": {
    "title": "supply",
    "classes": [
      "HowToDirection",
      "HowTo",
      "Place"
    ],
    "description": "A sub-property of instrument. A supply consumed when performing instructions or a direction.",
    "types": [
      "Text",
      "HowToSupply",
      "Place"
    ],
    "subPropertyOf": [
      "instrument"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ]
  },
  "totalPaymentDue": {
    "title": "totalPaymentDue",
    "classes": [
      "Invoice"
    ],
    "description": "The total amount due.",
    "types": [
      "PriceSpecification",
      "MonetaryAmount"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "cvdNumICUBedsOcc": {
    "title": "cvdNumICUBedsOcc",
    "classes": [
      "CDCPMDRecord"
    ],
    "description": "numicubedsocc - ICU BED OCCUPANCY: Total number of staffed inpatient ICU beds that are occupied.",
    "types": [
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "replacer": {
    "title": "replacer",
    "classes": [
      "ReplaceAction"
    ],
    "description": "A sub property of object. The object that replaces.",
    "types": [
      "Thing"
    ],
    "subPropertyOf": [
      "object"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "taxID": {
    "title": "taxID",
    "classes": [
      "Organization",
      "Person"
    ],
    "description": "The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.",
    "types": [
      "Text"
    ],
    "subPropertyOf": [
      "identifier"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "doseSchedule": {
    "title": "doseSchedule",
    "classes": [
      "Drug",
      "TherapeuticProcedure"
    ],
    "description": "A dosing schedule for the drug for a given population, either observed, recommended, or maximum dose based on the type used.",
    "types": [
      "DoseSchedule"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "restPeriods": {
    "title": "restPeriods",
    "classes": [
      "ExercisePlan"
    ],
    "description": "How often one should break from the activity.",
    "types": [
      "QuantitativeValue",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "softwareAddOn": {
    "title": "softwareAddOn",
    "classes": [
      "SoftwareApplication"
    ],
    "description": "Additional content for a software application.",
    "types": [
      "SoftwareApplication"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "inChIKey": {
    "title": "inChIKey",
    "classes": [
      "MolecularEntity"
    ],
    "description": "InChIKey is a hashed version of the full InChI (using the SHA-256 algorithm).",
    "types": [
      "Text",
      "XMLSchema#string"
    ],
    "subPropertyOf": [
      "hasRepresentation"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "cvdNumC19OFMechVentPats": {
    "title": "cvdNumC19OFMechVentPats",
    "classes": [
      "CDCPMDRecord"
    ],
    "description": "numc19ofmechventpats - ED/OVERFLOW and VENTILATED: Patients with suspected or confirmed COVID-19 who are in the ED or any overflow location awaiting an inpatient bed and on a mechanical ventilator.",
    "types": [
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "greater": {
    "title": "greater",
    "classes": [
      "QualitativeValue"
    ],
    "description": "This ordering relation for qualitative values indicates that the subject is greater than the object.",
    "types": [
      "QualitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "educationalRole": {
    "title": "educationalRole",
    "classes": [
      "EducationalAudience"
    ],
    "description": "An educationalRole of an EducationalAudience.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "articleSection": {
    "title": "articleSection",
    "classes": [
      "Article"
    ],
    "description": "Articles may belong to one or more 'sections' in a magazine or newspaper, such as Sports, Lifestyle, etc.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "diagnosis": {
    "title": "diagnosis",
    "classes": [
      "DDxElement",
      "Patient"
    ],
    "description": "One or more alternative conditions considered in the differential diagnosis process as output of a diagnosis process.",
    "types": [
      "MedicalCondition"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "encodingFormat": {
    "title": "encodingFormat",
    "classes": [
      "MediaObject",
      "CreativeWork"
    ],
    "description": "Media type typically expressed using a MIME format (see [IANA site](http://www.iana.org/assignments/media-types/media-types.xhtml) and [MDN reference](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types)), e.g. application/zip for a SoftwareApplication binary, audio/mpeg for .mp3 etc.\n\nIn cases where a [[CreativeWork]] has several media type representations, [[encoding]] can be used to indicate each [[MediaObject]] alongside particular [[encodingFormat]] information.\n\nUnregistered or niche encoding and file formats can be indicated instead via the most appropriate URL, e.g. defining Web page or a Wikipedia/Wikidata entry.\nMedia type typically expressed using a MIME format (see <a href=\"http://www.iana.org/assignments/media-types/media-types.xhtml\">IANA site</a> and <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types\">MDN reference</a>) e.g. application/zip for a SoftwareApplication binary, audio/mpeg for .mp3 etc.).<br/><br/>\n\nIn cases where a <a class=\"localLink\" href=\"http://schema.org/CreativeWork\">CreativeWork</a> has several media type representations, <a class=\"localLink\" href=\"http://schema.org/encoding\">encoding</a> can be used to indicate each <a class=\"localLink\" href=\"http://schema.org/MediaObject\">MediaObject</a> alongside particular <a class=\"localLink\" href=\"http://schema.org/encodingFormat\">encodingFormat</a> information.<br/><br/>\n\nUnregistered or niche encoding and file formats can be indicated instead via the most appropriate URL, e.g. defining Web page or a Wikipedia/Wikidata entry.",
    "types": [
      "URL",
      "Text",
      "XMLSchema#string"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "datePublished": {
    "title": "datePublished",
    "classes": [
      "CreativeWork",
      "Certification"
    ],
    "description": "Date of first publication or broadcast. For example the date a [[CreativeWork]] was broadcast or a [[Certification]] was issued.\nDate of first broadcast/publication.",
    "types": [
      "DateTime",
      "Date",
      "N4b071eec479d4e51a5395fdf0808d5dc"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "hasBroadcastChannel": {
    "title": "hasBroadcastChannel",
    "classes": [
      "BroadcastService"
    ],
    "description": "A broadcast channel of a broadcast service.",
    "types": [
      "BroadcastChannel"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "producer": {
    "title": "producer",
    "classes": [
      "CreativeWork",
      "Work"
    ],
    "description": "The person or organization who produced the work (e.g. music album, movie, TV/radio series etc.).\nThe producer of the creative work.\nThe person or organization who produced the work (e.g. music album, movie, tv/radio series etc.).",
    "types": [
      "Organization",
      "Person",
      "Agent",
      "N9a8230fcf10a431eb7ddb6fe4d8d6d32"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia",
      "YAGO"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ]
  },
  "validUntil": {
    "title": "validUntil",
    "classes": [
      "Permit"
    ],
    "description": "The date when the item is no longer valid.",
    "types": [
      "Date"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "amountOfThisGood": {
    "title": "amountOfThisGood",
    "classes": [
      "TypeAndQuantityNode"
    ],
    "description": "The quantity of the goods included in the offer.",
    "types": [
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "inverseOf": {
    "title": "inverseOf",
    "classes": [
      "Property"
    ],
    "description": "Relates a property to a property that is its inverse. Inverse properties relate the same pairs of items to each other, but in reversed direction. For example, the 'alumni' and 'alumniOf' properties are inverseOf each other. Some properties don't have explicit inverses; in these situations RDFa and JSON-LD syntax for reverse properties can be used.",
    "types": [
      "Property"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "participant": {
    "title": "participant",
    "classes": [
      "Action",
      "Event"
    ],
    "description": "Other co-agents that participated in the action indirectly. E.g. John wrote a book with *Steve*.",
    "types": [
      "Organization",
      "Person",
      "XMLSchema#string"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ]
  },
  "diseasePreventionInfo": {
    "title": "diseasePreventionInfo",
    "classes": [
      "SpecialAnnouncement"
    ],
    "description": "Information about disease prevention.",
    "types": [
      "WebContent",
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "skills": {
    "title": "skills",
    "classes": [
      "Occupation",
      "JobPosting"
    ],
    "description": "A statement of knowledge, skill, ability, task or any other assertion expressing a competency that is desired or required to fulfill this role or to work in this occupation.",
    "types": [
      "Text",
      "DefinedTerm"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "ethicsPolicy": {
    "title": "ethicsPolicy",
    "classes": [
      "NewsMediaOrganization",
      "Organization"
    ],
    "description": "Statement about ethics policy, e.g. of a [[NewsMediaOrganization]] regarding journalistic and publishing practices, or of a [[Restaurant]], a page describing food source policies. In the case of a [[NewsMediaOrganization]], an ethicsPolicy is typically a statement describing the personal, organizational, and corporate standards of behavior expected by the organization.",
    "types": [
      "CreativeWork",
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "associatedMedia": {
    "title": "associatedMedia",
    "classes": [
      "HyperTocEntry",
      "HyperToc",
      "CreativeWork"
    ],
    "description": "A media object that encodes this CreativeWork. This property is a synonym for encoding.",
    "types": [
      "MediaObject"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "constraintProperty": {
    "title": "constraintProperty",
    "classes": [
      "ConstraintNode"
    ],
    "description": "Indicates a property used as a constraint. For example, in the definition of a [[StatisticalVariable]]. The value is a property, either from within Schema.org or from other compatible (e.g. RDF) systems such as DataCommons.org or Wikidata.org. ",
    "types": [
      "Property",
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "signDetected": {
    "title": "signDetected",
    "classes": [
      "MedicalTest"
    ],
    "description": "A sign detected by the test.",
    "types": [
      "MedicalSign"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "valueReference": {
    "title": "valueReference",
    "classes": [
      "QualitativeValue",
      "PropertyValue",
      "QuantitativeValue"
    ],
    "description": "A secondary value that provides additional information on the original value, e.g. a reference temperature or a type of measurement.",
    "types": [
      "StructuredValue",
      "QuantitativeValue",
      "MeasurementTypeEnumeration",
      "QualitativeValue",
      "Enumeration",
      "PropertyValue",
      "Text",
      "DefinedTerm"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "monthsOfExperience": {
    "title": "monthsOfExperience",
    "classes": [
      "OccupationalExperienceRequirements"
    ],
    "description": "Indicates the minimal number of months of experience required for a position.",
    "types": [
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "programPrerequisites": {
    "title": "programPrerequisites",
    "classes": [
      "EducationalOccupationalProgram"
    ],
    "description": "Prerequisites for enrolling in the program.",
    "types": [
      "EducationalOccupationalCredential",
      "Text",
      "AlignmentObject",
      "Course"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "honorificPrefix": {
    "title": "honorificPrefix",
    "classes": [
      "Person"
    ],
    "description": "An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.",
    "types": [
      "Text",
      "Thing"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "rsvpResponse": {
    "title": "rsvpResponse",
    "classes": [
      "RsvpAction"
    ],
    "description": "The response (yes, no, maybe) to the RSVP.",
    "types": [
      "RsvpResponseType"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "unnamedSourcesPolicy": {
    "title": "unnamedSourcesPolicy",
    "classes": [
      "Organization",
      "NewsMediaOrganization"
    ],
    "description": "For an [[Organization]] (typically a [[NewsMediaOrganization]]), a statement about policy on use of unnamed sources and the decision process required.",
    "types": [
      "CreativeWork",
      "URL"
    ],
    "subPropertyOf": [
      "publishingPrinciples"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "genre": {
    "title": "genre",
    "classes": [
      "MusicGroup",
      "BroadcastChannel",
      "CreativeWork",
      "Nd5b6585232db432b948d6459ec0bb977"
    ],
    "description": "Genre of the creative work, broadcast channel or group.",
    "types": [
      "URL",
      "Text",
      "Thing"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "polygon": {
    "title": "polygon",
    "classes": [
      "GeoShape"
    ],
    "description": "A polygon is the area enclosed by a point-to-point path for which the starting and ending points are the same. A polygon is expressed as a series of four or more space delimited points where the first and final points are identical.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "downloadUrl": {
    "title": "downloadUrl",
    "classes": [
      "SoftwareApplication"
    ],
    "description": "If the file can be downloaded, URL to download the binary.",
    "types": [
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "alumni": {
    "title": "alumni",
    "classes": [
      "EducationalOrganization",
      "Organization",
      "EducationalInstitution"
    ],
    "description": "Alumni of an organization.",
    "types": [
      "Person"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ]
  },
  "priceComponent": {
    "title": "priceComponent",
    "classes": [
      "CompoundPriceSpecification"
    ],
    "description": "This property links to all [[UnitPriceSpecification]] nodes that apply in parallel for the [[CompoundPriceSpecification]] node.",
    "types": [
      "UnitPriceSpecification"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "returnPolicySeasonalOverride": {
    "title": "returnPolicySeasonalOverride",
    "classes": [
      "MerchantReturnPolicy"
    ],
    "description": "Seasonal override of a return policy.",
    "types": [
      "MerchantReturnPolicySeasonalOverride"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "defaultValue": {
    "title": "defaultValue",
    "classes": [
      "PropertyValueSpecification"
    ],
    "description": "The default value of the input.  For properties that expect a literal, the default is a literal value, for properties that expect an object, it's an ID reference to one of the current values.",
    "types": [
      "Text",
      "Thing"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "transFatContent": {
    "title": "transFatContent",
    "classes": [
      "NutritionInformation"
    ],
    "description": "The number of grams of trans fat.",
    "types": [
      "Mass"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "warranty": {
    "title": "warranty",
    "classes": [
      "Demand",
      "Offer"
    ],
    "description": "The warranty promise(s) included in the offer.",
    "types": [
      "WarrantyPromise"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "interactionStatistic": {
    "title": "interactionStatistic",
    "classes": [
      "Organization",
      "CreativeWork",
      "Person"
    ],
    "description": "The number of interactions for the CreativeWork using the WebSite or SoftwareApplication. The most specific child type of InteractionCounter should be used.",
    "types": [
      "InteractionCounter"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "parentItem": {
    "title": "parentItem",
    "classes": [
      "Comment",
      "Answer",
      "Question"
    ],
    "description": "The parent of a question, answer or item in general. Typically used for Q/A discussion threads e.g. a chain of comments with the first comment being an [[Article]] or other [[CreativeWork]]. See also [[comment]] which points from something to a comment about it.",
    "types": [
      "CreativeWork",
      "Comment"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "codeValue": {
    "title": "codeValue",
    "classes": [
      "MedicalCode",
      "CategoryCode"
    ],
    "description": "A short textual code that uniquely identifies the value.",
    "types": [
      "Text"
    ],
    "subPropertyOf": [
      "termCode"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "broadcastDisplayName": {
    "title": "broadcastDisplayName",
    "classes": [
      "BroadcastService"
    ],
    "description": "The name displayed in the channel guide. For many US affiliates, it is the network name.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "legislationIdentifier": {
    "title": "legislationIdentifier",
    "classes": [
      "Legislation"
    ],
    "description": "An identifier for the legislation. This can be either a string-based identifier, like the CELEX at EU level or the NOR in France, or a web-based, URL/URI identifier, like an ELI (European Legislation Identifier) or an URN-Lex.",
    "types": [
      "URL",
      "Text"
    ],
    "subPropertyOf": [
      "identifier"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "syllabusSections": {
    "title": "syllabusSections",
    "classes": [
      "Course"
    ],
    "description": "Indicates (typically several) Syllabus entities that lay out what each section of the overall course will cover.",
    "types": [
      "Syllabus"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "isFamilyFriendly": {
    "title": "isFamilyFriendly",
    "classes": [
      "CreativeWork",
      "Product",
      "Offer"
    ],
    "description": "Indicates whether this content is family friendly.",
    "types": [
      "Boolean"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "discountCode": {
    "title": "discountCode",
    "classes": [
      "Order"
    ],
    "description": "Code used to redeem a discount.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "percentile75": {
    "title": "percentile75",
    "classes": [
      "QuantitativeValueDistribution"
    ],
    "description": "The 75th percentile value.",
    "types": [
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "acquiredFrom": {
    "title": "acquiredFrom",
    "classes": [
      "OwnershipInfo"
    ],
    "description": "The organization or person from which the product was acquired.",
    "types": [
      "Person",
      "Organization"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "endorsee": {
    "title": "endorsee",
    "classes": [
      "EndorseAction"
    ],
    "description": "A sub property of participant. The person/organization being supported.",
    "types": [
      "Organization",
      "Person"
    ],
    "subPropertyOf": [
      "participant"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "broadcastSubChannel": {
    "title": "broadcastSubChannel",
    "classes": [
      "BroadcastFrequencySpecification"
    ],
    "description": "The subchannel used for the broadcast.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "archivedAt": {
    "title": "archivedAt",
    "classes": [
      "CreativeWork"
    ],
    "description": "Indicates a page or other link involved in archival of a [[CreativeWork]]. In the case of [[MediaReview]], the items in a [[MediaReviewItem]] may often become inaccessible, but be archived by archival, journalistic, activist, or law enforcement organizations. In such cases, the referenced page may not directly publish the content.",
    "types": [
      "WebPage",
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "stageAsNumber": {
    "title": "stageAsNumber",
    "classes": [
      "MedicalConditionStage"
    ],
    "description": "The stage represented as a number, e.g. 3.",
    "types": [
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "storageRequirements": {
    "title": "storageRequirements",
    "classes": [
      "SoftwareApplication"
    ],
    "description": "Storage requirements (free space required).",
    "types": [
      "Text",
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "hasMenuItem": {
    "title": "hasMenuItem",
    "classes": [
      "Menu",
      "MenuSection"
    ],
    "description": "A food or drink item contained in a menu or menu section.",
    "types": [
      "MenuItem"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "worksFor": {
    "title": "worksFor",
    "classes": [
      "Person"
    ],
    "description": "Organizations that the person works for.",
    "types": [
      "Organization",
      "Person"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "trailer": {
    "title": "trailer",
    "classes": [
      "Movie",
      "Episode",
      "CreativeWorkSeason",
      "RadioSeries",
      "MovieSeries",
      "VideoGame",
      "VideoGameSeries",
      "TVSeries"
    ],
    "description": "The trailer of a movie or TV/radio series, season, episode, etc.",
    "types": [
      "VideoObject"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "algorithm": {
    "title": "algorithm",
    "classes": [
      "MedicalRiskScore"
    ],
    "description": "The algorithm or rules to follow to compute the score.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "repeatCount": {
    "title": "repeatCount",
    "classes": [
      "Schedule"
    ],
    "description": "Defines the number of times a recurring [[Event]] will take place.",
    "types": [
      "Integer"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "accessibilityFeature": {
    "title": "accessibilityFeature",
    "classes": [
      "CreativeWork"
    ],
    "description": "Content features of the resource, such as accessible media, alternatives and supported enhancements for accessibility. Values should be drawn from the [approved vocabulary](https://www.w3.org/2021/a11y-discov-vocab/latest/#accessibilityFeature-vocabulary).",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "textValue": {
    "title": "textValue",
    "classes": [
      "PronounceableText"
    ],
    "description": "Text value being annotated.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "breadcrumb": {
    "title": "breadcrumb",
    "classes": [
      "WebPage"
    ],
    "description": "A set of links that can help a user understand and navigate a website hierarchy.",
    "types": [
      "Text",
      "BreadcrumbList"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "color": {
    "title": "color",
    "classes": [
      "Product"
    ],
    "description": "The color of the product.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "seatSection": {
    "title": "seatSection",
    "classes": [
      "Seat"
    ],
    "description": "The section location of the reserved seat (e.g. Orchestra).",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "originAddress": {
    "title": "originAddress",
    "classes": [
      "ParcelDelivery"
    ],
    "description": "Shipper's address.",
    "types": [
      "PostalAddress"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "hasTierBenefit": {
    "title": "hasTierBenefit",
    "classes": [
      "MemberProgramTier"
    ],
    "description": "A member benefit for a particular tier of a loyalty program.",
    "types": [
      "TierBenefitEnumeration"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "members": {
    "title": "members",
    "classes": [
      "Organization",
      "ProgramMembership"
    ],
    "description": "A member of this organization.",
    "types": [
      "Organization",
      "Person"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "jobStartDate": {
    "title": "jobStartDate",
    "classes": [
      "JobPosting"
    ],
    "description": "The date on which a successful applicant for this job would be expected to start work. Choose a specific date in the future or use the jobImmediateStart property to indicate the position is to be filled as soon as possible.",
    "types": [
      "Date",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "tributary": {
    "title": "tributary",
    "classes": [
      "Vein"
    ],
    "description": "The anatomical or organ system that the vein flows into; a larger structure that the vein connects to.",
    "types": [
      "AnatomicalStructure"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "includesHealthPlanNetwork": {
    "title": "includesHealthPlanNetwork",
    "classes": [
      "HealthInsurancePlan"
    ],
    "description": "Networks covered by this plan.",
    "types": [
      "HealthPlanNetwork"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "returnPolicyCountry": {
    "title": "returnPolicyCountry",
    "classes": [
      "MerchantReturnPolicy"
    ],
    "description": "The country where the product has to be sent to for returns, for example \"Ireland\" using the [[name]] property of [[Country]]. You can also provide the two-letter [ISO 3166-1 alpha-2 country code](http://en.wikipedia.org/wiki/ISO_3166-1). Note that this can be different from the country where the product was originally shipped from or sent to.",
    "types": [
      "Text",
      "Country"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "nerveMotor": {
    "title": "nerveMotor",
    "classes": [
      "Nerve"
    ],
    "description": "The neurological pathway extension that involves muscle control.",
    "types": [
      "Muscle"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "cvdNumC19Died": {
    "title": "cvdNumC19Died",
    "classes": [
      "CDCPMDRecord"
    ],
    "description": "numc19died - DEATHS: Patients with suspected or confirmed COVID-19 who died in the hospital, ED, or any overflow location.",
    "types": [
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "url": {
    "title": "url",
    "classes": [
      "Thing"
    ],
    "description": "URL of the item.",
    "types": [
      "URL",
      "XMLSchema#anyURI"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "eligibleRegion": {
    "title": "eligibleRegion",
    "classes": [
      "DeliveryChargeSpecification",
      "Demand",
      "Offer",
      "ActionAccessSpecification"
    ],
    "description": "The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place, or the GeoShape for the geo-political region(s) for which the offer or delivery charge specification is valid.\\n\\nSee also [[ineligibleRegion]].\n    ",
    "types": [
      "Text",
      "GeoShape",
      "Place"
    ],
    "subPropertyOf": [
      "areaServed"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "muscleAction": {
    "title": "muscleAction",
    "classes": [
      "Muscle"
    ],
    "description": "The movement the muscle generates.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "observationDate": {
    "title": "observationDate",
    "classes": [
      "Observation"
    ],
    "description": "The observationDate of an [[Observation]].",
    "types": [
      "DateTime"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "episode": {
    "title": "episode",
    "classes": [
      "RadioSeries",
      "CreativeWorkSeason",
      "VideoGameSeries",
      "TVSeries",
      "FictionalCharacter"
    ],
    "description": "An episode of a TV, radio or game media within a series or season.",
    "types": [
      "Episode",
      "XMLSchema#string"
    ],
    "subPropertyOf": [
      "hasPart"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ]
  },
  "quarantineGuidelines": {
    "title": "quarantineGuidelines",
    "classes": [
      "SpecialAnnouncement"
    ],
    "description": "Guidelines about quarantine rules, e.g. in the context of a pandemic.",
    "types": [
      "WebContent",
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "seriousAdverseOutcome": {
    "title": "seriousAdverseOutcome",
    "classes": [
      "MedicalDevice",
      "MedicalTherapy"
    ],
    "description": "A possible serious complication and/or serious side effect of this therapy. Serious adverse outcomes include those that are life-threatening; result in death, disability, or permanent damage; require hospitalization or prolong existing hospitalization; cause congenital anomalies or birth defects; or jeopardize the patient and may require medical or surgical intervention to prevent one of the outcomes in this definition.",
    "types": [
      "MedicalEntity"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "landlord": {
    "title": "landlord",
    "classes": [
      "RentAction"
    ],
    "description": "A sub property of participant. The owner of the real estate property.",
    "types": [
      "Organization",
      "Person"
    ],
    "subPropertyOf": [
      "participant"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "priceCurrency": {
    "title": "priceCurrency",
    "classes": [
      "PriceSpecification",
      "TradeAction",
      "Offer",
      "Reservation",
      "DonateAction",
      "Ticket"
    ],
    "description": "The currency of the price, or a price component when attached to [[PriceSpecification]] and its subtypes.\\n\\nUse standard formats: [ISO 4217 currency format](http://en.wikipedia.org/wiki/ISO_4217), e.g. \"USD\"; [Ticker symbol](https://en.wikipedia.org/wiki/List_of_cryptocurrencies) for cryptocurrencies, e.g. \"BTC\"; well known names for [Local Exchange Trading Systems](https://en.wikipedia.org/wiki/Local_exchange_trading_system) (LETS) and other currency types, e.g. \"Ithaca HOUR\".",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "audience": {
    "title": "audience",
    "classes": [
      "LodgingBusiness",
      "Product",
      "CreativeWork",
      "PlayAction",
      "Service",
      "Event"
    ],
    "description": "An intended audience, i.e. a group for whom something was created.",
    "types": [
      "Audience"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "jobTitle": {
    "title": "jobTitle",
    "classes": [
      "Person"
    ],
    "description": "The job title of the person (for example, Financial Manager).",
    "types": [
      "Text",
      "DefinedTerm"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "contentLocation": {
    "title": "contentLocation",
    "classes": [
      "CreativeWork"
    ],
    "description": "The location depicted or described in the content. For example, the location in a photograph or painting.",
    "types": [
      "Place"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "jurisdiction": {
    "title": "jurisdiction",
    "classes": [
      "GovernmentService",
      "Legislation"
    ],
    "description": "Indicates a legal jurisdiction, e.g. of some legislation, or where some government service is based.",
    "types": [
      "AdministrativeArea",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "composer": {
    "title": "composer",
    "classes": [
      "MusicComposition",
      "Event",
      "Work",
      "N487b2015b839447a8615e1fbc7b769dd"
    ],
    "description": "The person or organization who wrote a composition, or who is the composer of a work performed at some event.",
    "types": [
      "Organization",
      "Person",
      "Ncc4eeb7d3aea4b648fd85786084d6453"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia",
      "YAGO"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ]
  },
  "duration": {
    "title": "duration",
    "classes": [
      "MusicRecording",
      "Audiobook",
      "Movie",
      "Episode",
      "MusicRelease",
      "MediaObject",
      "QuantitativeValueDistribution",
      "Event",
      "Schedule",
      "N153dcf2c1e82442a8d4eb7db54711842"
    ],
    "description": "The duration of the item (movie, audio recording, event, etc.) in [ISO 8601 duration format](http://en.wikipedia.org/wiki/ISO_8601).\nThe duration of the item (movie, audio recording, event, etc.) in ISO 8601 date format\nThe duration of the item (movie, audio recording, event, etc.) in <a href=\"http://en.wikipedia.org/wiki/ISO_8601\">ISO 8601 date format</a>.",
    "types": [
      "Duration",
      "XMLSchema#double",
      "XMLSchema#duration"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia",
      "YAGO"
    ]
  },
  "maxPrice": {
    "title": "maxPrice",
    "classes": [
      "PriceSpecification"
    ],
    "description": "The highest price if the price is a range.",
    "types": [
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "object": {
    "title": "object",
    "classes": [
      "Action"
    ],
    "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). E.g. John read *a book*.",
    "types": [
      "Thing"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "knowsAbout": {
    "title": "knowsAbout",
    "classes": [
      "Person",
      "Organization"
    ],
    "description": "Of a [[Person]], and less typically of an [[Organization]], to indicate a topic that is known about - suggesting possible expertise but not implying it. We do not distinguish skill levels here, or relate this to educational content, events, objectives or [[JobPosting]] descriptions.",
    "types": [
      "Thing",
      "URL",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "contentType": {
    "title": "contentType",
    "classes": [
      "EntryPoint"
    ],
    "description": "The supported content type(s) for an EntryPoint response.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "dropoffLocation": {
    "title": "dropoffLocation",
    "classes": [
      "RentalCarReservation"
    ],
    "description": "Where a rental car can be dropped off.",
    "types": [
      "Place"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "subEvent": {
    "title": "subEvent",
    "classes": [
      "Event"
    ],
    "description": "An Event that is part of this event. For example, a conference event includes many presentations, each of which is a subEvent of the conference.",
    "types": [
      "Event"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "catalogNumber": {
    "title": "catalogNumber",
    "classes": [
      "MusicRelease"
    ],
    "description": "The catalog number for the release.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "nonprofitStatus": {
    "title": "nonprofitStatus",
    "classes": [
      "Organization"
    ],
    "description": "nonprofitStatus indicates the legal status of a non-profit organization in its primary place of business.",
    "types": [
      "NonprofitType"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "acceptsReservations": {
    "title": "acceptsReservations",
    "classes": [
      "FoodEstablishment"
    ],
    "description": "Indicates whether a FoodEstablishment accepts reservations. Values can be Boolean, an URL at which reservations can be made or (for backwards compatibility) the strings ```Yes``` or ```No```.",
    "types": [
      "Text",
      "URL",
      "Boolean"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "legalName": {
    "title": "legalName",
    "classes": [
      "Organization"
    ],
    "description": "The official name of the organization, e.g. the registered company name.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "suggestedAnswer": {
    "title": "suggestedAnswer",
    "classes": [
      "Question"
    ],
    "description": "An answer (possibly one of several, possibly incorrect) to a Question, e.g. on a Question/Answer site.",
    "types": [
      "ItemList",
      "Answer"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "artEdition": {
    "title": "artEdition",
    "classes": [
      "VisualArtwork"
    ],
    "description": "The number of copies when multiple copies of a piece of artwork are produced - e.g. for a limited edition of 20 prints, 'artEdition' refers to the total number of copies (in this example \"20\").",
    "types": [
      "Integer",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "catalog": {
    "title": "catalog",
    "classes": [
      "Dataset"
    ],
    "description": "A data catalog which contains this dataset.",
    "types": [
      "DataCatalog"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "estimatedSalary": {
    "title": "estimatedSalary",
    "classes": [
      "Occupation",
      "JobPosting"
    ],
    "description": "An estimated salary for a job posting or occupation, based on a variety of variables including, but not limited to industry, job title, and location. Estimated salaries  are often computed by outside organizations rather than the hiring organization, who may not have committed to the estimated value.",
    "types": [
      "MonetaryAmount",
      "MonetaryAmountDistribution",
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "collectionSize": {
    "title": "collectionSize",
    "classes": [
      "Collection"
    ],
    "description": "The number of items in the [[Collection]].",
    "types": [
      "Integer"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "broadcastTimezone": {
    "title": "broadcastTimezone",
    "classes": [
      "BroadcastService"
    ],
    "description": "The timezone in [ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601) for which the service bases its broadcasts.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "sensoryRequirement": {
    "title": "sensoryRequirement",
    "classes": [
      "JobPosting"
    ],
    "description": "A description of any sensory requirements and levels necessary to function on the job, including hearing and vision. Defined terms such as those in O*net may be used, but note that there is no way to specify the level of ability as well as its nature when using a defined term.",
    "types": [
      "URL",
      "Text",
      "DefinedTerm"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "containedIn": {
    "title": "containedIn",
    "classes": [
      "Place"
    ],
    "description": "The basic containment relation between a place and one that contains it.",
    "types": [
      "Place"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "healthPlanMarketingUrl": {
    "title": "healthPlanMarketingUrl",
    "classes": [
      "HealthInsurancePlan"
    ],
    "description": "The URL that goes directly to the plan brochure for the specific standard plan or plan variation.",
    "types": [
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "pathophysiology": {
    "title": "pathophysiology",
    "classes": [
      "PhysicalActivity",
      "MedicalCondition"
    ],
    "description": "Changes in the normal mechanical, physical, and biochemical functions that are associated with this activity or condition.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "sizeGroup": {
    "title": "sizeGroup",
    "classes": [
      "SizeSpecification"
    ],
    "description": "The size group (also known as \"size type\") for a product's size. Size groups are common in the fashion industry to define size segments and suggested audiences for wearable products. Multiple values can be combined, for example \"men's big and tall\", \"petite maternity\" or \"regular\".",
    "types": [
      "Text",
      "SizeGroupEnumeration"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "auditDate": {
    "title": "auditDate",
    "classes": [
      "Certification"
    ],
    "description": "Date when a certification was last audited. See also  [gs1:certificationAuditDate](https://www.gs1.org/voc/certificationAuditDate).",
    "types": [
      "Date",
      "DateTime"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "actionPlatform": {
    "title": "actionPlatform",
    "classes": [
      "EntryPoint"
    ],
    "description": "The high level platform(s) where the Action can be performed for the given URL. To specify a specific application or operating system instance, use actionApplication.",
    "types": [
      "DigitalPlatformEnumeration",
      "URL",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "tissueSample": {
    "title": "tissueSample",
    "classes": [
      "PathologyTest"
    ],
    "description": "The type of tissue sample required for the test.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "orderDate": {
    "title": "orderDate",
    "classes": [
      "Order",
      "Ship"
    ],
    "description": "Date order was placed.",
    "types": [
      "DateTime",
      "Date",
      "XMLSchema#date"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ]
  },
  "epidemiology": {
    "title": "epidemiology",
    "classes": [
      "MedicalCondition",
      "PhysicalActivity"
    ],
    "description": "The characteristics of associated patients, such as age, gender, race etc.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "nationality": {
    "title": "nationality",
    "classes": [
      "Person"
    ],
    "description": "Nationality of the person.",
    "types": [
      "Country"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia",
      "YAGO"
    ],
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ]
  },
  "comment": {
    "title": "comment",
    "classes": [
      "CreativeWork",
      "RsvpAction"
    ],
    "description": "Comments, typically from users.",
    "types": [
      "Comment"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "maintainer": {
    "title": "maintainer",
    "classes": [
      "CreativeWork"
    ],
    "description": "A maintainer of a [[Dataset]], software package ([[SoftwareApplication]]), or other [[Project]]. A maintainer is a [[Person]] or [[Organization]] that manages contributions to, and/or publication of, some (typically complex) artifact. It is common for distributions of software and data to be based on \"upstream\" sources. When [[maintainer]] is applied to a specific version of something e.g. a particular version or packaging of a [[Dataset]], it is always  possible that the upstream source has a different maintainer. The [[isBasedOn]] property can be used to indicate such relationships between datasets to make the different maintenance roles clear. Similarly in the case of software, a package may have dedicated maintainers working on integration into software distributions such as Ubuntu, as well as upstream maintainers of the underlying work.\n      ",
    "types": [
      "Person",
      "Organization"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "recommendedIntake": {
    "title": "recommendedIntake",
    "classes": [
      "DietarySupplement"
    ],
    "description": "Recommended intake of this supplement for a given population as defined by a specific recommending authority.",
    "types": [
      "RecommendedDoseSchedule"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "legislationDate": {
    "title": "legislationDate",
    "classes": [
      "Legislation"
    ],
    "description": "The date of adoption or signature of the legislation. This is the date at which the text is officially aknowledged to be a legislation, even though it might not even be published or in force.",
    "types": [
      "Date"
    ],
    "subPropertyOf": [
      "dateCreated"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "strengthUnit": {
    "title": "strengthUnit",
    "classes": [
      "DrugStrength"
    ],
    "description": "The units of an active ingredient's strength, e.g. mg.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "educationRequirements": {
    "title": "educationRequirements",
    "classes": [
      "Occupation",
      "JobPosting"
    ],
    "description": "Educational background needed for the position or Occupation.",
    "types": [
      "EducationalOccupationalCredential",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "incentives": {
    "title": "incentives",
    "classes": [
      "JobPosting"
    ],
    "description": "Description of bonus and commission compensation aspects of the job.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "recipeCategory": {
    "title": "recipeCategory",
    "classes": [
      "Recipe"
    ],
    "description": "The category of the recipe\u2014for example, appetizer, entree, etc.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "readBy": {
    "title": "readBy",
    "classes": [
      "Audiobook"
    ],
    "description": "A person who reads (performs) the audiobook.",
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "actor"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "drugUnit": {
    "title": "drugUnit",
    "classes": [
      "DrugCost",
      "Drug"
    ],
    "description": "The unit in which the drug is measured, e.g. '5 mg tablet'.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "albumRelease": {
    "title": "albumRelease",
    "classes": [
      "MusicAlbum"
    ],
    "description": "A release of this album.",
    "types": [
      "MusicRelease"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "musicArrangement": {
    "title": "musicArrangement",
    "classes": [
      "MusicComposition"
    ],
    "description": "An arrangement derived from the composition.",
    "types": [
      "MusicComposition"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "customerRemorseReturnLabelSource": {
    "title": "customerRemorseReturnLabelSource",
    "classes": [
      "MerchantReturnPolicy"
    ],
    "description": "The method (from an enumeration) by which the customer obtains a return shipping label for a product returned due to customer remorse.",
    "types": [
      "ReturnLabelSourceEnumeration"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "molecularFormula": {
    "title": "molecularFormula",
    "classes": [
      "MolecularEntity"
    ],
    "description": "The empirical formula is the simplest whole number ratio of all the atoms in a molecule.",
    "types": [
      "Text",
      "XMLSchema#string"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "entertainmentBusiness": {
    "title": "entertainmentBusiness",
    "classes": [
      "PerformAction"
    ],
    "description": "A sub property of location. The entertainment business where the action occurred.",
    "types": [
      "EntertainmentBusiness"
    ],
    "subPropertyOf": [
      "location"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "medicineSystem": {
    "title": "medicineSystem",
    "classes": [
      "MedicalEntity"
    ],
    "description": "The system of medicine that includes this MedicalEntity, for example 'evidence-based', 'homeopathic', 'chiropractic', etc.",
    "types": [
      "MedicineSystem"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "securityClearanceRequirement": {
    "title": "securityClearanceRequirement",
    "classes": [
      "JobPosting"
    ],
    "description": "A description of any security clearance requirements of the job.",
    "types": [
      "URL",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "predecessorOf": {
    "title": "predecessorOf",
    "classes": [
      "ProductModel"
    ],
    "description": "A pointer from a previous, often discontinued variant of the product to its newer variant.",
    "types": [
      "ProductModel"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "dataFeedElement": {
    "title": "dataFeedElement",
    "classes": [
      "DataFeed"
    ],
    "description": "An item within a data feed. Data feeds may have many elements.",
    "types": [
      "Text",
      "Thing",
      "DataFeedItem"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "representativeOfPage": {
    "title": "representativeOfPage",
    "classes": [
      "ImageObject"
    ],
    "description": "Indicates whether this image is representative of the content of the page.",
    "types": [
      "Boolean"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "funder": {
    "title": "funder",
    "classes": [
      "MonetaryGrant",
      "Event",
      "Organization",
      "CreativeWork",
      "Grant",
      "Person"
    ],
    "description": "A person or organization that supports (sponsors) something through some kind of financial contribution.",
    "types": [
      "Organization",
      "Person"
    ],
    "subPropertyOf": [
      "sponsor"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "exifData": {
    "title": "exifData",
    "classes": [
      "ImageObject"
    ],
    "description": "exif data for this object.",
    "types": [
      "PropertyValue",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "safetyConsideration": {
    "title": "safetyConsideration",
    "classes": [
      "DietarySupplement"
    ],
    "description": "Any potential safety concern associated with the supplement. May include interactions with other drugs and foods, pregnancy, breastfeeding, known adverse reactions, and documented efficacy of the supplement.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "taxonomicRange": {
    "title": "taxonomicRange",
    "classes": [
      "BioChemEntity"
    ],
    "description": "The taxonomic grouping of the organism that expresses, encodes, or in some way related to the BioChemEntity.",
    "types": [
      "DefinedTerm",
      "URL",
      "Text",
      "Taxon"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "additionalNumberOfGuests": {
    "title": "additionalNumberOfGuests",
    "classes": [
      "RsvpAction"
    ],
    "description": "If responding yes, the number of guests who will attend in addition to the invitee.",
    "types": [
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "endorsers": {
    "title": "endorsers",
    "classes": [
      "Diet"
    ],
    "description": "People or organizations that endorse the plan.",
    "types": [
      "Organization",
      "Person"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "greaterOrEqual": {
    "title": "greaterOrEqual",
    "classes": [
      "QualitativeValue"
    ],
    "description": "This ordering relation for qualitative values indicates that the subject is greater than or equal to the object.",
    "types": [
      "QualitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "accountOverdraftLimit": {
    "title": "accountOverdraftLimit",
    "classes": [
      "BankAccount"
    ],
    "description": "An overdraft is an extension of credit from a lending institution when an account reaches zero. An overdraft allows the individual to continue withdrawing money even if the account has no funds in it. Basically the bank allows people to borrow a set amount of money.",
    "types": [
      "MonetaryAmount"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "totalPrice": {
    "title": "totalPrice",
    "classes": [
      "Reservation",
      "Ticket"
    ],
    "description": "The total price for the reservation or ticket, including applicable taxes, shipping, etc.\\n\\nUsage guidelines:\\n\\n* Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similar Unicode symbols.\\n* Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.",
    "types": [
      "Text",
      "PriceSpecification",
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "energyEfficiencyScaleMin": {
    "title": "energyEfficiencyScaleMin",
    "classes": [
      "EnergyConsumptionDetails"
    ],
    "description": "Specifies the least energy efficient class on the regulated EU energy consumption scale for the product category a product belongs to. For example, energy consumption for televisions placed on the market after January 1, 2020 is scaled from D to A+++.",
    "types": [
      "EUEnergyEfficiencyEnumeration"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "certificationRating": {
    "title": "certificationRating",
    "classes": [
      "Certification"
    ],
    "description": "Rating of a certification instance (as defined by an independent certification body). Typically this rating can be used to rate the level to which the requirements of the certification instance are fulfilled. See also [gs1:certificationValue](https://www.gs1.org/voc/certificationValue).",
    "types": [
      "Rating"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "medicalAudience": {
    "title": "medicalAudience",
    "classes": [
      "MedicalWebPage"
    ],
    "description": "Medical audience for page.",
    "types": [
      "MedicalAudience",
      "MedicalAudienceType"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "releaseOf": {
    "title": "releaseOf",
    "classes": [
      "MusicRelease"
    ],
    "description": "The album this is a release of.",
    "types": [
      "MusicAlbum"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "numberOfEpisodes": {
    "title": "numberOfEpisodes",
    "classes": [
      "TVSeries",
      "RadioSeries",
      "CreativeWorkSeason",
      "VideoGameSeries",
      "TelevisionShow",
      "N1f9cb5c01d304317aff65adf3af7f52d"
    ],
    "description": "The number of episodes in this season or series.",
    "types": [
      "Integer",
      "XMLSchema#nonNegativeInteger",
      "XMLSchema#integer"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia",
      "YAGO"
    ]
  },
  "taxonRank": {
    "title": "taxonRank",
    "classes": [
      "Taxon"
    ],
    "description": "The taxonomic rank of this taxon given preferably as a URI from a controlled vocabulary \u2013 typically the ranks from TDWG TaxonRank ontology or equivalent Wikidata URIs.",
    "types": [
      "Text",
      "PropertyValue",
      "URL",
      "Thing"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "endDate": {
    "title": "endDate",
    "classes": [
      "CreativeWorkSeason",
      "DatedMoneySpecification",
      "Event",
      "Role",
      "Schedule",
      "CreativeWorkSeries",
      "MerchantReturnPolicySeasonalOverride",
      "EducationalOccupationalProgram"
    ],
    "description": "The end date and time of the item (in [ISO 8601 date format](http://en.wikipedia.org/wiki/ISO_8601)).\nThe end date of the event.\nThe end date and time of the item (in <a href=\"http://en.wikipedia.org/wiki/ISO_8601\">ISO 8601 date format</a>).",
    "types": [
      "DateTime",
      "Date",
      "XMLSchema#date",
      "N7ebde8e5feae40fcb4c79e37c096401b"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia",
      "YAGO"
    ]
  },
  "playMode": {
    "title": "playMode",
    "classes": [
      "VideoGameSeries",
      "VideoGame"
    ],
    "description": "Indicates whether this game is multi-player, co-op or single-player.  The game can be marked as multi-player, co-op and single-player at the same time.",
    "types": [
      "GamePlayMode"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "leiCode": {
    "title": "leiCode",
    "classes": [
      "Organization"
    ],
    "description": "An organization identifier that uniquely identifies a legal entity as defined in ISO 17442.",
    "types": [
      "Text",
      "XMLSchema#string"
    ],
    "subPropertyOf": [
      "identifier"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "byArtist": {
    "title": "byArtist",
    "classes": [
      "MusicRecording",
      "MusicAlbum"
    ],
    "description": "The artist that performed this album or recording.",
    "types": [
      "MusicGroup",
      "Person"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "numberOfBeds": {
    "title": "numberOfBeds",
    "classes": [
      "BedDetails"
    ],
    "description": "The quantity of the given bed type available in the HotelRoom, Suite, House, or Apartment.",
    "types": [
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "tickerSymbol": {
    "title": "tickerSymbol",
    "classes": [
      "Corporation"
    ],
    "description": "The exchange traded instrument associated with a Corporation object. The tickerSymbol is expressed as an exchange and an instrument name separated by a space character. For the exchange component of the tickerSymbol attribute, we recommend using the controlled vocabulary of Market Identifier Codes (MIC) specified in ISO 15022.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "associatedArticle": {
    "title": "associatedArticle",
    "classes": [
      "MediaObject"
    ],
    "description": "A NewsArticle associated with the Media Object.",
    "types": [
      "NewsArticle"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "doesNotShip": {
    "title": "doesNotShip",
    "classes": [
      "ShippingRateSettings",
      "OfferShippingDetails"
    ],
    "description": "Indicates when shipping to a particular [[shippingDestination]] is not available.",
    "types": [
      "Boolean"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "sizeSystem": {
    "title": "sizeSystem",
    "classes": [
      "SizeSpecification"
    ],
    "description": "The size system used to identify a product's size. Typically either a standard (for example, \"GS1\" or \"ISO-EN13402\"), country code (for example \"US\" or \"JP\"), or a measuring system (for example \"Metric\" or \"Imperial\").",
    "types": [
      "SizeSystemEnumeration",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "foundingLocation": {
    "title": "foundingLocation",
    "classes": [
      "Organization"
    ],
    "description": "The place where the Organization was founded.",
    "types": [
      "Place"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "studyDesign": {
    "title": "studyDesign",
    "classes": [
      "MedicalObservationalStudy"
    ],
    "description": "Specifics about the observational study design (enumerated).",
    "types": [
      "MedicalObservationalStudyDesign"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "exercisePlan": {
    "title": "exercisePlan",
    "classes": [
      "ExerciseAction"
    ],
    "description": "A sub property of instrument. The exercise plan used on this action.",
    "types": [
      "ExercisePlan"
    ],
    "subPropertyOf": [
      "instrument"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "name": {
    "title": "name",
    "classes": [
      "Thing"
    ],
    "description": "The name of the item.",
    "types": [
      "Text"
    ],
    "subPropertyOf": [
      "label"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "executableLibraryName": {
    "title": "executableLibraryName",
    "classes": [
      "APIReference"
    ],
    "description": "Library file name, e.g., mscorlib.dll, system.web.dll.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "spatialCoverage": {
    "title": "spatialCoverage",
    "classes": [
      "CreativeWork"
    ],
    "description": "The spatialCoverage of a CreativeWork indicates the place(s) which are the focus of the content. It is a subproperty of\n      contentLocation intended primarily for more technical and detailed materials. For example with a Dataset, it indicates\n      areas that the dataset describes: a dataset of New York weather would have spatialCoverage which was the place: the state of New York.",
    "types": [
      "Place"
    ],
    "subPropertyOf": [
      "contentLocation"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "warning": {
    "title": "warning",
    "classes": [
      "Drug"
    ],
    "description": "Any FDA or other warnings about the drug (text or URL).",
    "types": [
      "Text",
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "broadcastFrequencyValue": {
    "title": "broadcastFrequencyValue",
    "classes": [
      "BroadcastFrequencySpecification"
    ],
    "description": "The frequency in MHz for a particular broadcast.",
    "types": [
      "Number",
      "QuantitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "applicantLocationRequirements": {
    "title": "applicantLocationRequirements",
    "classes": [
      "JobPosting"
    ],
    "description": "The location(s) applicants can apply from. This is usually used for telecommuting jobs where the applicant does not need to be in a physical office. Note: This should not be used for citizenship or work visa requirements.",
    "types": [
      "AdministrativeArea"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "estimatesRiskOf": {
    "title": "estimatesRiskOf",
    "classes": [
      "MedicalRiskEstimator"
    ],
    "description": "The condition, complication, or symptom whose risk is being estimated.",
    "types": [
      "MedicalEntity"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "recipeIngredient": {
    "title": "recipeIngredient",
    "classes": [
      "Recipe"
    ],
    "description": "A single ingredient used in the recipe, e.g. sugar, flour or garlic.",
    "types": [
      "Text"
    ],
    "subPropertyOf": [
      "supply"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "contactPoints": {
    "title": "contactPoints",
    "classes": [
      "Person",
      "Organization"
    ],
    "description": "A contact point for a person or organization.",
    "types": [
      "ContactPoint"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "cvdFacilityCounty": {
    "title": "cvdFacilityCounty",
    "classes": [
      "CDCPMDRecord"
    ],
    "description": "Name of the County of the NHSN facility that this data record applies to. Use [[cvdFacilityId]] to identify the facility. To provide other details, [[healthcareReportingData]] can be used on a [[Hospital]] entry.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "loser": {
    "title": "loser",
    "classes": [
      "WinAction"
    ],
    "description": "A sub property of participant. The loser of the action.",
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "participant"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "touristType": {
    "title": "touristType",
    "classes": [
      "TouristTrip",
      "TouristDestination",
      "TouristAttraction"
    ],
    "description": "Attraction suitable for type(s) of tourist. E.g. children, visitors from a particular country, etc. ",
    "types": [
      "Text",
      "Audience"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "lastReviewed": {
    "title": "lastReviewed",
    "classes": [
      "WebPage"
    ],
    "description": "Date on which the content on this web page was last reviewed for accuracy and/or completeness.",
    "types": [
      "Date"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "preparation": {
    "title": "preparation",
    "classes": [
      "MedicalProcedure"
    ],
    "description": "Typical preparation that a patient must undergo before having the procedure performed.",
    "types": [
      "MedicalEntity",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "numberOfPages": {
    "title": "numberOfPages",
    "classes": [
      "Book",
      "WrittenWork"
    ],
    "description": "The number of pages in the book.\nThe books number of pages.\nThe number of pages in the book.",
    "types": [
      "Integer",
      "XMLSchema#positiveInteger",
      "XMLSchema#integer"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia",
      "YAGO"
    ]
  },
  "workload": {
    "title": "workload",
    "classes": [
      "ExercisePlan"
    ],
    "description": "Quantitative measure of the physiologic output of the exercise; also referred to as energy expenditure.",
    "types": [
      "Energy",
      "QuantitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "dateIssued": {
    "title": "dateIssued",
    "classes": [
      "Ticket"
    ],
    "description": "The date the ticket was issued.",
    "types": [
      "DateTime",
      "Date"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "gtin8": {
    "title": "gtin8",
    "classes": [
      "Product",
      "Offer",
      "Demand"
    ],
    "description": "The GTIN-8 code of the product, or the product to which the offer refers. This code is also known as EAN/UCC-8 or 8-digit EAN. See [GS1 GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) for more details.",
    "types": [
      "Text"
    ],
    "subPropertyOf": [
      "gtin",
      "identifier"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "liveBlogUpdate": {
    "title": "liveBlogUpdate",
    "classes": [
      "LiveBlogPosting"
    ],
    "description": "An update to the LiveBlog.",
    "types": [
      "BlogPosting"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "occupationalCategory": {
    "title": "occupationalCategory",
    "classes": [
      "WorkBasedProgram",
      "EducationalOccupationalProgram",
      "Physician",
      "Occupation",
      "JobPosting"
    ],
    "description": "A category describing the job, preferably using a term from a taxonomy such as [BLS O*NET-SOC](http://www.onetcenter.org/taxonomy.html), [ISCO-08](https://www.ilo.org/public/english/bureau/stat/isco/isco08/) or similar, with the property repeated for each applicable value. Ideally the taxonomy should be identified, and both the textual label and formal code for the category should be provided.\\n\nNote: for historical reasons, any textual label and formal code provided as a literal may be assumed to be from O*NET-SOC.",
    "types": [
      "Text",
      "CategoryCode"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "productionCompany": {
    "title": "productionCompany",
    "classes": [
      "MediaObject",
      "RadioSeries",
      "CreativeWorkSeason",
      "VideoGameSeries",
      "MovieSeries",
      "TVSeries",
      "Movie",
      "Episode",
      "Work",
      "N096108298c704f589f449b4b951de089"
    ],
    "description": "The production company or studio responsible for the item, e.g. series, video game, episode etc.\nthe company that produced the work e.g. Film, MusicalWork, Software\nThe production company or studio responsible for the item e.g. series, video game, episode etc.",
    "types": [
      "Organization",
      "Company"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia",
      "YAGO"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ]
  },
  "applicationSuite": {
    "title": "applicationSuite",
    "classes": [
      "SoftwareApplication"
    ],
    "description": "The name of the application suite to which the application belongs (e.g. Excel belongs to Office).",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "affectedBy": {
    "title": "affectedBy",
    "classes": [
      "MedicalTest"
    ],
    "description": "Drugs that affect the test's results.",
    "types": [
      "Drug"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "merchant": {
    "title": "merchant",
    "classes": [
      "Order"
    ],
    "description": "'merchant' is an out-dated term for 'seller'.",
    "types": [
      "Person",
      "Organization"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "memberOf": {
    "title": "memberOf",
    "classes": [
      "Organization",
      "Person",
      "N655547391d454dcdb8ab3041f5cf6d6f"
    ],
    "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs.",
    "types": [
      "MemberProgramTier",
      "Organization",
      "ProgramMembership"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "accessMode": {
    "title": "accessMode",
    "classes": [
      "CreativeWork"
    ],
    "description": "The human sensory perceptual system or cognitive faculty through which a person may process or perceive information. Values should be drawn from the [approved vocabulary](https://www.w3.org/2021/a11y-discov-vocab/latest/#accessMode-vocabulary).",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "measurementTechnique": {
    "title": "measurementTechnique",
    "classes": [
      "StatisticalVariable",
      "Dataset",
      "Observation",
      "DataDownload",
      "PropertyValue",
      "DataCatalog"
    ],
    "description": "A technique, method or technology used in an [[Observation]], [[StatisticalVariable]] or [[Dataset]] (or [[DataDownload]], [[DataCatalog]]), corresponding to the method used for measuring the corresponding variable(s) (for datasets, described using [[variableMeasured]]; for [[Observation]], a [[StatisticalVariable]]). Often but not necessarily each [[variableMeasured]] will have an explicit representation as (or mapping to) an property such as those defined in Schema.org, or other RDF vocabularies and \"knowledge graphs\". In that case the subproperty of [[variableMeasured]] called [[measuredProperty]] is applicable.\n    \nThe [[measurementTechnique]] property helps when extra clarification is needed about how a [[measuredProperty]] was measured. This is oriented towards scientific and scholarly dataset publication but may have broader applicability; it is not intended as a full representation of measurement, but can often serve as a high level summary for dataset discovery. \n\nFor example, if [[variableMeasured]] is: molecule concentration, [[measurementTechnique]] could be: \"mass spectrometry\" or \"nmr spectroscopy\" or \"colorimetry\" or \"immunofluorescence\". If the [[variableMeasured]] is \"depression rating\", the [[measurementTechnique]] could be \"Zung Scale\" or \"HAM-D\" or \"Beck Depression Inventory\". \n\nIf there are several [[variableMeasured]] properties recorded for some given data object, use a [[PropertyValue]] for each [[variableMeasured]] and attach the corresponding [[measurementTechnique]]. The value can also be from an enumeration, organized as a [[MeasurementMetholdEnumeration]].",
    "types": [
      "DefinedTerm",
      "URL",
      "MeasurementMethodEnum",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "loanPaymentAmount": {
    "title": "loanPaymentAmount",
    "classes": [
      "RepaymentSpecification"
    ],
    "description": "The amount of money to pay in a single payment.",
    "types": [
      "MonetaryAmount"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "bccRecipient": {
    "title": "bccRecipient",
    "classes": [
      "Message"
    ],
    "description": "A sub property of recipient. The recipient blind copied on a message.",
    "types": [
      "ContactPoint",
      "Organization",
      "Person"
    ],
    "subPropertyOf": [
      "recipient"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "interpretedAsClaim": {
    "title": "interpretedAsClaim",
    "classes": [
      "CreativeWork",
      "MediaObject"
    ],
    "description": "Used to indicate a specific claim contained, implied, translated or refined from the content of a [[MediaObject]] or other [[CreativeWork]]. The interpreting party can be indicated using [[claimInterpreter]].",
    "types": [
      "Claim"
    ],
    "subPropertyOf": [
      "description"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "workExample": {
    "title": "workExample",
    "classes": [
      "CreativeWork"
    ],
    "description": "Example/instance/realization/derivation of the concept of this creative work. E.g. the paperback edition, first edition, or e-book.",
    "types": [
      "CreativeWork"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "subEvents": {
    "title": "subEvents",
    "classes": [
      "Event"
    ],
    "description": "Events that are a part of this event. For example, a conference event includes many presentations, each subEvents of the conference.",
    "types": [
      "Event"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "category": {
    "title": "category",
    "classes": [
      "Offer",
      "Invoice",
      "ActionAccessSpecification",
      "Service",
      "Product",
      "PhysicalActivity",
      "SpecialAnnouncement",
      "Recommendation"
    ],
    "description": "A category for the item. Greater signs or slashes can be used to informally indicate a category hierarchy.",
    "types": [
      "URL",
      "Text",
      "CategoryCode",
      "PhysicalActivityCategory",
      "Thing"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "educationalUse": {
    "title": "educationalUse",
    "classes": [
      "LearningResource",
      "CreativeWork"
    ],
    "description": "The purpose of a work in the context of education; for example, 'assignment', 'group work'.",
    "types": [
      "Text",
      "DefinedTerm"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "alternateName": {
    "title": "alternateName",
    "classes": [
      "Thing"
    ],
    "description": "An alias for the item.",
    "types": [
      "Text",
      "22-rdf-syntax-ns#PlainLiteral"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "distribution": {
    "title": "distribution",
    "classes": [
      "Dataset"
    ],
    "description": "A downloadable form of this dataset, at a specific location, in a specific format. This property can be repeated if different variations are available. There is no expectation that different downloadable distributions must contain exactly equivalent information (see also [DCAT](https://www.w3.org/TR/vocab-dcat-3/#Class:Distribution) on this point). Different distributions might include or exclude different subsets of the entire dataset, for example.",
    "types": [
      "DataDownload"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "member": {
    "title": "member",
    "classes": [
      "ProgramMembership",
      "Organization",
      "Person"
    ],
    "description": "A member of an Organization or a ProgramMembership. Organizations can be members of organizations; ProgramMembership is typically for individuals.",
    "types": [
      "Organization",
      "Person",
      "XMLSchema#string"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ]
  },
  "inDefinedTermSet": {
    "title": "inDefinedTermSet",
    "classes": [
      "DefinedTerm"
    ],
    "description": "A [[DefinedTermSet]] that contains this term.",
    "types": [
      "DefinedTermSet",
      "URL"
    ],
    "subPropertyOf": [
      "isPartOf"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "permissionType": {
    "title": "permissionType",
    "classes": [
      "DigitalDocumentPermission"
    ],
    "description": "The type of permission granted the person, organization, or audience.",
    "types": [
      "DigitalDocumentPermissionType"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "isrcCode": {
    "title": "isrcCode",
    "classes": [
      "MusicRecording"
    ],
    "description": "The International Standard Recording Code for the recording.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "maximumAttendeeCapacity": {
    "title": "maximumAttendeeCapacity",
    "classes": [
      "Event",
      "Place"
    ],
    "description": "The total number of individuals that may attend an event or venue.",
    "types": [
      "Integer"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "validIn": {
    "title": "validIn",
    "classes": [
      "Permit",
      "Certification",
      "EducationalOccupationalCredential"
    ],
    "description": "The geographic area where the item is valid. Applies for example to a [[Permit]], a [[Certification]], or an [[EducationalOccupationalCredential]]. ",
    "types": [
      "AdministrativeArea"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "accelerationTime": {
    "title": "accelerationTime",
    "classes": [
      "Vehicle"
    ],
    "description": "The time needed to accelerate the vehicle from a given start velocity to a given target velocity.\\n\\nTypical unit code(s): SEC for seconds\\n\\n* Note: There are unfortunately no standard unit codes for seconds/0..100 km/h or seconds/0..60 mph. Simply use \"SEC\" for seconds and indicate the velocities in the [[name]] of the [[QuantitativeValue]], or use [[valueReference]] with a [[QuantitativeValue]] of 0..60 mph or 0..100 km/h to specify the reference speeds.",
    "types": [
      "QuantitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "hasHealthAspect": {
    "title": "hasHealthAspect",
    "classes": [
      "HealthTopicContent"
    ],
    "description": "Indicates the aspect or aspects specifically addressed in some [[HealthTopicContent]]. For example, that the content is an overview, or that it talks about treatment, self-care, treatments or their side-effects.",
    "types": [
      "HealthAspectEnumeration"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "unitCode": {
    "title": "unitCode",
    "classes": [
      "TypeAndQuantityNode",
      "UnitPriceSpecification",
      "PropertyValue",
      "QuantitativeValue"
    ],
    "description": "The unit of measurement given using the UN/CEFACT Common Code (3 characters) or a URL. Other codes than the UN/CEFACT Common Code may be used with a prefix followed by a colon.",
    "types": [
      "Text",
      "URL",
      "Thing"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "gameEdition": {
    "title": "gameEdition",
    "classes": [
      "VideoGame"
    ],
    "description": "The edition of a video game.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "maps": {
    "title": "maps",
    "classes": [
      "Place"
    ],
    "description": "A URL to a map of the place.",
    "types": [
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "homeTeam": {
    "title": "homeTeam",
    "classes": [
      "SportsEvent"
    ],
    "description": "The home team in a sports event.",
    "types": [
      "Person",
      "SportsTeam"
    ],
    "subPropertyOf": [
      "competitor"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "shippingRate": {
    "title": "shippingRate",
    "classes": [
      "OfferShippingDetails",
      "ShippingRateSettings"
    ],
    "description": "The shipping rate is the cost of shipping to the specified destination. Typically, the maxValue and currency values (of the [[MonetaryAmount]]) are most appropriate.",
    "types": [
      "MonetaryAmount"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "actionAccessibilityRequirement": {
    "title": "actionAccessibilityRequirement",
    "classes": [
      "ConsumeAction"
    ],
    "description": "A set of requirements that must be fulfilled in order to perform an Action. If more than one value is specified, fulfilling one set of requirements will allow the Action to be performed.",
    "types": [
      "ActionAccessSpecification"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "gtin": {
    "title": "gtin",
    "classes": [
      "Product",
      "Demand",
      "Offer"
    ],
    "description": "A Global Trade Item Number ([GTIN](https://www.gs1.org/standards/id-keys/gtin)). GTINs identify trade items, including products and services, using numeric identification codes.\n\nA correct [[gtin]] value should be a valid GTIN, which means that it should be an all-numeric string of either 8, 12, 13 or 14 digits, or a \"GS1 Digital Link\" URL based on such a string. The numeric component should also have a [valid GS1 check digit](https://www.gs1.org/services/check-digit-calculator) and meet the other rules for valid GTINs. See also [GS1's GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) and [Wikipedia](https://en.wikipedia.org/wiki/Global_Trade_Item_Number) for more details. Left-padding of the gtin values is not required or encouraged. The [[gtin]] property generalizes the earlier [[gtin8]], [[gtin12]], [[gtin13]], and [[gtin14]] properties.\n\nThe GS1 [digital link specifications](https://www.gs1.org/standards/Digital-Link/) expresses GTINs as URLs (URIs, IRIs, etc.).\nDigital Links should be populated into the [[hasGS1DigitalLink]] attribute.\n\nNote also that this is a definition for how to include GTINs in Schema.org data, and not a definition of GTINs in general - see the GS1 documentation for authoritative details.\nA Global Trade Item Number (<a href=\"https://www.gs1.org/standards/id-keys/gtin\">GTIN</a>). GTINs identify trade items, including products and services, using numeric identification codes. The <a class=\"localLink\" href=\"http://schema.org/gtin\">gtin</a> property generalizes the earlier <a class=\"localLink\" href=\"http://schema.org/gtin8\">gtin8</a>, <a class=\"localLink\" href=\"http://schema.org/gtin12\">gtin12</a>, <a class=\"localLink\" href=\"http://schema.org/gtin13\">gtin13</a>, and <a class=\"localLink\" href=\"http://schema.org/gtin14\">gtin14</a> properties. The GS1 <a href=\"https://www.gs1.org/standards/Digital-Link/\">digital link specifications</a> express GTINs as URLs. A correct <a class=\"localLink\" href=\"http://schema.org/gtin\">gtin</a> value should be a valid GTIN, which means that it should be an all-numeric string of either 8, 12, 13 or 14 digits, or a \"GS1 Digital Link\" URL based on such a string. The numeric component should also have a <a href=\"https://www.gs1.org/services/check-digit-calculator\">valid GS1 check digit</a> and meet the other rules for valid GTINs. See also <a href=\"http://www.gs1.org/barcodes/technical/idkeys/gtin\">GS1's GTIN Summary</a> and <a href=\"https://en.wikipedia.org/wiki/Global_Trade_Item_Number\">Wikipedia</a> for more details. Left-padding of the gtin values is not required or encouraged.",
    "types": [
      "Text",
      "URL",
      "XMLSchema#string"
    ],
    "subPropertyOf": [
      "identifier"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "siblings": {
    "title": "siblings",
    "classes": [
      "Person"
    ],
    "description": "A sibling of the person.",
    "types": [
      "Person"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "cvdNumC19HospPats": {
    "title": "cvdNumC19HospPats",
    "classes": [
      "CDCPMDRecord"
    ],
    "description": "numc19hosppats - HOSPITALIZED: Patients currently hospitalized in an inpatient care location who have suspected or confirmed COVID-19.",
    "types": [
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "sourceOrganization": {
    "title": "sourceOrganization",
    "classes": [
      "CreativeWork"
    ],
    "description": "The Organization on whose behalf the creator was working.",
    "types": [
      "Organization"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "geoWithin": {
    "title": "geoWithin",
    "classes": [
      "GeospatialGeometry",
      "Place"
    ],
    "description": "Represents a relationship between two geometries (or the places they represent), relating a geometry to one that contains it, i.e. it is inside (i.e. within) its interior. As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).",
    "types": [
      "GeospatialGeometry",
      "Place"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "sugarContent": {
    "title": "sugarContent",
    "classes": [
      "NutritionInformation"
    ],
    "description": "The number of grams of sugar.",
    "types": [
      "Mass"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "contentUrl": {
    "title": "contentUrl",
    "classes": [
      "MediaObject"
    ],
    "description": "Actual bytes of the media object, for example the image file or video file.",
    "types": [
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "accountId": {
    "title": "accountId",
    "classes": [
      "Invoice"
    ],
    "description": "The identifier for the account the payment will be applied to.",
    "types": [
      "Text"
    ],
    "subPropertyOf": [
      "identifier"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "lodgingUnitType": {
    "title": "lodgingUnitType",
    "classes": [
      "LodgingReservation"
    ],
    "description": "Textual description of the unit type (including suite vs. room, size of bed, etc.).",
    "types": [
      "Text",
      "QualitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "paymentMethod": {
    "title": "paymentMethod",
    "classes": [
      "Order",
      "Invoice"
    ],
    "description": "The name of the credit card or other method of payment for the order.",
    "types": [
      "PaymentMethod"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "weight": {
    "title": "weight",
    "classes": [
      "Product",
      "Person",
      "OfferShippingDetails",
      "MeanOfTransportation",
      "Weapon",
      "Escalator",
      "ConveyorSystem",
      "Engine",
      "MovingWalkway",
      "On-SiteTransportation",
      "Na1d9240cd91243b18ed1bcaf515e43da"
    ],
    "description": "The weight of the product or person.",
    "types": [
      "QuantitativeValue",
      "kilogram",
      "XMLSchema#double"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia",
      "YAGO"
    ]
  },
  "nonProprietaryName": {
    "title": "nonProprietaryName",
    "classes": [
      "Drug",
      "DietarySupplement"
    ],
    "description": "The generic name of this drug or supplement.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "softwareRequirements": {
    "title": "softwareRequirements",
    "classes": [
      "SoftwareApplication"
    ],
    "description": "Component dependency requirements for application. This includes runtime environments and shared libraries that are not included in the application distribution package, but required to run the application (examples: DirectX, Java or .NET runtime).",
    "types": [
      "URL",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "material": {
    "title": "material",
    "classes": [
      "Product",
      "CreativeWork",
      "Island",
      "Nd9e26b0a4f0b4e348575171dfee5a2cd"
    ],
    "description": "A material that something is made from, e.g. leather, wool, cotton, paper.",
    "types": [
      "Product",
      "URL",
      "Text",
      "XMLSchema#string",
      "Thing"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia",
      "YAGO"
    ]
  },
  "doseUnit": {
    "title": "doseUnit",
    "classes": [
      "DoseSchedule"
    ],
    "description": "The unit of the dose, e.g. 'mg'.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "propertyID": {
    "title": "propertyID",
    "classes": [
      "PropertyValue"
    ],
    "description": "A commonly used identifier for the characteristic represented by the property, e.g. a manufacturer or a standard code for a property. propertyID can be\n(1) a prefixed string, mainly meant to be used with standards for product properties; (2) a site-specific, non-prefixed string (e.g. the primary key of the property or the vendor-specific ID of the property), or (3)\na URL indicating the type of the property, either pointing to an external vocabulary, or a Web resource that describes the property (e.g. a glossary entry).\nStandards bodies should promote a standard prefix for the identifiers of properties from their standards.",
    "types": [
      "URL",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "employees": {
    "title": "employees",
    "classes": [
      "Organization"
    ],
    "description": "People working for this organization.",
    "types": [
      "Person"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "sharedContent": {
    "title": "sharedContent",
    "classes": [
      "Comment",
      "SocialMediaPosting"
    ],
    "description": "A CreativeWork such as an image, video, or audio clip shared as part of this posting.",
    "types": [
      "CreativeWork"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "guideline": {
    "title": "guideline",
    "classes": [
      "MedicalEntity"
    ],
    "description": "A medical guideline related to this entity.",
    "types": [
      "MedicalGuideline"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "actors": {
    "title": "actors",
    "classes": [
      "Episode",
      "RadioSeries",
      "VideoGameSeries",
      "MovieSeries",
      "VideoGame",
      "Clip",
      "VideoObject",
      "TVSeries",
      "Movie"
    ],
    "description": "An actor, e.g. in TV, radio, movie, video games etc. Actors can be associated with individual items or with a series, episode, clip.",
    "types": [
      "Person"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "wheelbase": {
    "title": "wheelbase",
    "classes": [
      "Vehicle",
      "Automobile"
    ],
    "description": "The distance between the centers of the front and rear wheels.\\n\\nTypical unit code(s): CMT for centimeters, MTR for meters, INH for inches, FOT for foot/feet.",
    "types": [
      "QuantitativeValue",
      "millimetre",
      "XMLSchema#double"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ]
  },
  "validFrom": {
    "title": "validFrom",
    "classes": [
      "Demand",
      "LocationFeatureSpecification",
      "Certification",
      "Offer",
      "MonetaryAmount",
      "Permit",
      "OpeningHoursSpecification",
      "PriceSpecification"
    ],
    "description": "The date when the item becomes valid.",
    "types": [
      "DateTime",
      "Date"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "membershipPointsEarned": {
    "title": "membershipPointsEarned",
    "classes": [
      "MemberProgramTier",
      "PriceSpecification",
      "ProgramMembership"
    ],
    "description": "The number of membership points earned by the member. If necessary, the unitText can be used to express the units the points are issued in. (E.g. stars, miles, etc.)",
    "types": [
      "Number",
      "QuantitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "maximumIntake": {
    "title": "maximumIntake",
    "classes": [
      "Substance",
      "Drug",
      "DrugStrength",
      "DietarySupplement"
    ],
    "description": "Recommended intake of this supplement for a given population as defined by a specific recommending authority.",
    "types": [
      "MaximumDoseSchedule"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "certificationIdentification": {
    "title": "certificationIdentification",
    "classes": [
      "Certification"
    ],
    "description": "Identifier of a certification instance (as registered with an independent certification body). Typically this identifier can be used to consult and verify the certification instance. See also [gs1:certificationIdentification](https://www.gs1.org/voc/certificationIdentification).",
    "types": [
      "Text",
      "DefinedTerm"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "passengerPriorityStatus": {
    "title": "passengerPriorityStatus",
    "classes": [
      "FlightReservation"
    ],
    "description": "The priority status assigned to a passenger for security or boarding (e.g. FastTrack or Priority).",
    "types": [
      "QualitativeValue",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "creator": {
    "title": "creator",
    "classes": [
      "UserComments",
      "CreativeWork"
    ],
    "description": "The creator/author of this CreativeWork. This is the same as the Author property for CreativeWork.",
    "types": [
      "Organization",
      "Person",
      "N01512c4be28b418fb4143b46870180d0"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "legalStatus": {
    "title": "legalStatus",
    "classes": [
      "MedicalEntity",
      "Drug",
      "DietarySupplement"
    ],
    "description": "The drug or supplement's legal status, including any controlled substance schedules that apply.",
    "types": [
      "DrugLegalStatus",
      "Text",
      "MedicalEnumeration"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "faxNumber": {
    "title": "faxNumber",
    "classes": [
      "ContactPoint",
      "Place",
      "Organization",
      "Person",
      "Neadc1975d5ed43248e16bf74db01a7cb"
    ],
    "description": "The fax number.",
    "types": [
      "Text",
      "XMLSchema#string"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "itemListElement": {
    "title": "itemListElement",
    "classes": [
      "ItemList"
    ],
    "description": "For itemListElement values, you can use simple strings (e.g. \"Peter\", \"Paul\", \"Mary\"), existing entities, or use ListItem.\\n\\nText values are best if the elements in the list are plain strings. Existing entities are best for a simple, unordered list of existing things in your data. ListItem is used with ordered lists when you want to provide additional context about the element in that list or when the same item might be in different places in different lists.\\n\\nNote: The order of elements in your mark-up is not sufficient for indicating the order or elements.  Use ListItem with a 'position' property in such cases.",
    "types": [
      "Thing",
      "ListItem",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "subOrganization": {
    "title": "subOrganization",
    "classes": [
      "Organization"
    ],
    "description": "A relationship between two organizations where the first includes the second, e.g., as a subsidiary. See also: the more specific 'department' property.",
    "types": [
      "Organization"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "bookingTime": {
    "title": "bookingTime",
    "classes": [
      "Reservation"
    ],
    "description": "The date and time the reservation was booked.",
    "types": [
      "DateTime"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "currenciesAccepted": {
    "title": "currenciesAccepted",
    "classes": [
      "LocalBusiness"
    ],
    "description": "The currency accepted.\\n\\nUse standard formats: [ISO 4217 currency format](http://en.wikipedia.org/wiki/ISO_4217), e.g. \"USD\"; [Ticker symbol](https://en.wikipedia.org/wiki/List_of_cryptocurrencies) for cryptocurrencies, e.g. \"BTC\"; well known names for [Local Exchange Trading Systems](https://en.wikipedia.org/wiki/Local_exchange_trading_system) (LETS) and other currency types, e.g. \"Ithaca HOUR\".",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "relatedLink": {
    "title": "relatedLink",
    "classes": [
      "WebPage"
    ],
    "description": "A link related to this web page, for example to other related web pages.",
    "types": [
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "jobLocation": {
    "title": "jobLocation",
    "classes": [
      "JobPosting"
    ],
    "description": "A (typically single) geographic location associated with the job position.",
    "types": [
      "Place"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "recipient": {
    "title": "recipient",
    "classes": [
      "SendAction",
      "ReturnAction",
      "AuthorizeAction",
      "GiveAction",
      "DonateAction",
      "Message",
      "TipAction",
      "PayAction",
      "CommunicateAction"
    ],
    "description": "A sub property of participant. The participant who is at the receiving end of the action.",
    "types": [
      "Person",
      "ContactPoint",
      "Organization",
      "Audience"
    ],
    "subPropertyOf": [
      "participant"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "boardingPolicy": {
    "title": "boardingPolicy",
    "classes": [
      "Airline",
      "Flight"
    ],
    "description": "The type of boarding policy used by the airline (e.g. zone-based or group-based).",
    "types": [
      "BoardingPolicyType"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "includedRiskFactor": {
    "title": "includedRiskFactor",
    "classes": [
      "MedicalRiskEstimator"
    ],
    "description": "A modifiable or non-modifiable risk factor included in the calculation, e.g. age, coexisting condition.",
    "types": [
      "MedicalRiskFactor"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "datePosted": {
    "title": "datePosted",
    "classes": [
      "RealEstateListing",
      "SpecialAnnouncement",
      "CDCPMDRecord",
      "JobPosting"
    ],
    "description": "Publication date of an online listing.",
    "types": [
      "DateTime",
      "Date"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "dietFeatures": {
    "title": "dietFeatures",
    "classes": [
      "Diet"
    ],
    "description": "Nutritional information specific to the dietary plan. May include dietary recommendations on what foods to avoid, what foods to consume, and specific alterations/deviations from the USDA or other regulatory body's approved dietary guidelines.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "contactlessPayment": {
    "title": "contactlessPayment",
    "classes": [
      "PaymentCard"
    ],
    "description": "A secure method for consumers to purchase products or services via debit, credit or smartcards by using RFID or NFC technology.",
    "types": [
      "Boolean"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "inventoryLevel": {
    "title": "inventoryLevel",
    "classes": [
      "Demand",
      "SomeProducts",
      "Offer"
    ],
    "description": "The current approximate inventory level for the item or items.",
    "types": [
      "QuantitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "masthead": {
    "title": "masthead",
    "classes": [
      "NewsMediaOrganization"
    ],
    "description": "For a [[NewsMediaOrganization]], a link to the masthead page or a page listing top editorial management.",
    "types": [
      "URL",
      "CreativeWork"
    ],
    "subPropertyOf": [
      "publishingPrinciples"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "hasTiers": {
    "title": "hasTiers",
    "classes": [
      "MemberProgram"
    ],
    "description": "The tiers of a member program.",
    "types": [
      "MemberProgramTier"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "unsaturatedFatContent": {
    "title": "unsaturatedFatContent",
    "classes": [
      "NutritionInformation"
    ],
    "description": "The number of grams of unsaturated fat.",
    "types": [
      "Mass"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "serviceType": {
    "title": "serviceType",
    "classes": [
      "Service"
    ],
    "description": "The type of service being offered, e.g. veterans' benefits, emergency relief, etc.",
    "types": [
      "GovernmentBenefitsType",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "feesAndCommissionsSpecification": {
    "title": "feesAndCommissionsSpecification",
    "classes": [
      "FinancialProduct",
      "FinancialService"
    ],
    "description": "Description of fees, commissions, and other terms applied either to a class of financial product, or by a financial service organization.",
    "types": [
      "URL",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "numberOfCredits": {
    "title": "numberOfCredits",
    "classes": [
      "Course",
      "EducationalOccupationalProgram"
    ],
    "description": "The number of credits or units awarded by a Course or required to complete an EducationalOccupationalProgram.",
    "types": [
      "Integer",
      "StructuredValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "valueName": {
    "title": "valueName",
    "classes": [
      "PropertyValueSpecification"
    ],
    "description": "Indicates the name of the PropertyValueSpecification to be used in URL templates and form encoding in a manner analogous to HTML's input@name.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "targetProduct": {
    "title": "targetProduct",
    "classes": [
      "SoftwareSourceCode"
    ],
    "description": "Target Operating System / Product to which the code applies.  If applies to several versions, just the product name can be used.",
    "types": [
      "SoftwareApplication"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "availableLanguage": {
    "title": "availableLanguage",
    "classes": [
      "ContactPoint",
      "TouristAttraction",
      "ServiceChannel",
      "LodgingBusiness",
      "Course"
    ],
    "description": "A language someone may use with or at the item, service or place. Please use one of the language codes from the [IETF BCP 47 standard](http://tools.ietf.org/html/bcp47). See also [[inLanguage]].",
    "types": [
      "Language",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "yield": {
    "title": "yield",
    "classes": [
      "HowTo"
    ],
    "description": "The quantity that results by performing instructions. For example, a paper airplane, 10 personalized candles.",
    "types": [
      "Text",
      "QuantitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "coach": {
    "title": "coach",
    "classes": [
      "SportsTeam"
    ],
    "description": "A person that acts in a coaching role for a sports team.",
    "types": [
      "Person"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "owns": {
    "title": "owns",
    "classes": [
      "Person",
      "Organization",
      "Agent"
    ],
    "description": "Products owned by the organization or person.\nUsed as if meaning: has property rights over\nProducts owned by the organization or person.",
    "types": [
      "Product",
      "OwnershipInfo",
      "Thing"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia",
      "YAGO"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ]
  },
  "employerOverview": {
    "title": "employerOverview",
    "classes": [
      "JobPosting"
    ],
    "description": "A description of the employer, career opportunities and work environment for this position.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "workTranslation": {
    "title": "workTranslation",
    "classes": [
      "CreativeWork"
    ],
    "description": "A work that is a translation of the content of this work. E.g. \u897f\u904a\u8a18 has an English workTranslation \u201cJourney to the West\u201d, a German workTranslation \u201cMonkeys Pilgerfahrt\u201d and a Vietnamese  translation T\u00e2y du k\u00fd b\u00ecnh kh\u1ea3o.",
    "types": [
      "CreativeWork"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "identifyingExam": {
    "title": "identifyingExam",
    "classes": [
      "MedicalSign"
    ],
    "description": "A physical examination that can identify this sign.",
    "types": [
      "PhysicalExam"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "tocContinuation": {
    "title": "tocContinuation",
    "classes": [
      "HyperTocEntry"
    ],
    "description": "A [[HyperTocEntry]] can have a [[tocContinuation]] indicated, which is another [[HyperTocEntry]] that would be the default next item to play or render.",
    "types": [
      "HyperTocEntry"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "itemCondition": {
    "title": "itemCondition",
    "classes": [
      "Product",
      "Demand",
      "Offer",
      "MerchantReturnPolicy"
    ],
    "description": "A predefined value from OfferItemCondition specifying the condition of the product or service, or the products or services included in the offer. Also used for product return policies to specify the condition of products accepted for returns.",
    "types": [
      "OfferItemCondition"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "geoCovers": {
    "title": "geoCovers",
    "classes": [
      "GeospatialGeometry",
      "Place"
    ],
    "description": "Represents a relationship between two geometries (or the places they represent), relating a covering geometry to a covered geometry. \"Every point of b is a point of (the interior or boundary of) a\". As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).",
    "types": [
      "GeospatialGeometry",
      "Place"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "claimReviewed": {
    "title": "claimReviewed",
    "classes": [
      "ClaimReview"
    ],
    "description": "A short summary of the specific claims reviewed in a ClaimReview.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "clincalPharmacology": {
    "title": "clincalPharmacology",
    "classes": [
      "Drug"
    ],
    "description": "Description of the absorption and elimination of drugs, including their concentration (pharmacokinetics, pK) and biological effects (pharmacodynamics, pD).",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "byMonthWeek": {
    "title": "byMonthWeek",
    "classes": [
      "Schedule"
    ],
    "description": "Defines the week(s) of the month on which a recurring Event takes place. Specified as an Integer between 1-5. For clarity, byMonthWeek is best used in conjunction with byDay to indicate concepts like the first and third Mondays of a month.",
    "types": [
      "Integer"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "activeIngredient": {
    "title": "activeIngredient",
    "classes": [
      "Drug",
      "DrugStrength",
      "DietarySupplement",
      "Substance"
    ],
    "description": "An active ingredient, typically chemical compounds and/or biologic substances.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "discusses": {
    "title": "discusses",
    "classes": [
      "UserComments"
    ],
    "description": "Specifies the CreativeWork associated with the UserComment.",
    "types": [
      "CreativeWork"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "postalCode": {
    "title": "postalCode",
    "classes": [
      "PostalAddress",
      "GeoShape",
      "GeoCoordinates",
      "DefinedRegion"
    ],
    "description": "The postal code. For example, 94043.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "imagingTechnique": {
    "title": "imagingTechnique",
    "classes": [
      "ImagingTest"
    ],
    "description": "Imaging technique used.",
    "types": [
      "MedicalImagingTechnique"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "pickupTime": {
    "title": "pickupTime",
    "classes": [
      "RentalCarReservation",
      "TaxiReservation"
    ],
    "description": "When a taxi will pick up a passenger or a rental car can be picked up.",
    "types": [
      "DateTime"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "serviceLocation": {
    "title": "serviceLocation",
    "classes": [
      "ServiceChannel"
    ],
    "description": "The location (e.g. civic structure, local business, etc.) where a person can go to access the service.",
    "types": [
      "Place"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "businessDays": {
    "title": "businessDays",
    "classes": [
      "ShippingDeliveryTime"
    ],
    "description": "Days of the week when the merchant typically operates, indicated via opening hours markup.",
    "types": [
      "OpeningHoursSpecification"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "dependencies": {
    "title": "dependencies",
    "classes": [
      "TechArticle"
    ],
    "description": "Prerequisites needed to fulfill steps in article.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "bookEdition": {
    "title": "bookEdition",
    "classes": [
      "Book"
    ],
    "description": "The edition of the book.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "hasCredential": {
    "title": "hasCredential",
    "classes": [
      "Organization",
      "Person"
    ],
    "description": "A credential awarded to the Person or Organization.",
    "types": [
      "EducationalOccupationalCredential"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "totalTime": {
    "title": "totalTime",
    "classes": [
      "HowTo",
      "HowToDirection"
    ],
    "description": "The total time required to perform instructions or a direction (including time to prepare the supplies), in [ISO 8601 duration format](http://en.wikipedia.org/wiki/ISO_8601).",
    "types": [
      "Duration"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "relatedStructure": {
    "title": "relatedStructure",
    "classes": [
      "AnatomicalSystem"
    ],
    "description": "Related anatomical structure(s) that are not part of the system but relate or connect to it, such as vascular bundles associated with an organ system.",
    "types": [
      "AnatomicalStructure"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "steeringPosition": {
    "title": "steeringPosition",
    "classes": [
      "Vehicle"
    ],
    "description": "The position of the steering wheel or similar device (mostly for cars).",
    "types": [
      "SteeringPositionValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "numberOfBedrooms": {
    "title": "numberOfBedrooms",
    "classes": [
      "Accommodation",
      "ApartmentComplex",
      "FloorPlan"
    ],
    "description": "The total integer number of bedrooms in a some [[Accommodation]], [[ApartmentComplex]] or [[FloorPlan]].",
    "types": [
      "Number",
      "QuantitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "associatedReview": {
    "title": "associatedReview",
    "classes": [
      "Review"
    ],
    "description": "An associated [[Review]].",
    "types": [
      "Review"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "departureGate": {
    "title": "departureGate",
    "classes": [
      "Flight"
    ],
    "description": "Identifier of the flight's departure gate.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "code": {
    "title": "code",
    "classes": [
      "MedicalEntity"
    ],
    "description": "A medical code for the entity, taken from a controlled vocabulary or ontology such as ICD-9, DiseasesDB, MeSH, SNOMED-CT, RxNorm, etc.",
    "types": [
      "MedicalCode"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "trailerWeight": {
    "title": "trailerWeight",
    "classes": [
      "Vehicle"
    ],
    "description": "The permitted weight of a trailer attached to the vehicle.\\n\\nTypical unit code(s): KGM for kilogram, LBR for pound\\n* Note 1: You can indicate additional information in the [[name]] of the [[QuantitativeValue]] node.\\n* Note 2: You may also link to a [[QualitativeValue]] node that provides additional information using [[valueReference]].\\n* Note 3: Note that you can use [[minValue]] and [[maxValue]] to indicate ranges.",
    "types": [
      "QuantitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "givenName": {
    "title": "givenName",
    "classes": [
      "Person"
    ],
    "description": "Given name. In the U.S., the first name of a Person.\nGiven name. In the U.S., the first name of a Person. This can be used along with familyName instead of the name property.",
    "types": [
      "Text",
      "Thing"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "spatial": {
    "title": "spatial",
    "classes": [
      "CreativeWork"
    ],
    "description": "The \"spatial\" property can be used in cases when more specific properties\n(e.g. [[locationCreated]], [[spatialCoverage]], [[contentLocation]]) are not known to be appropriate.",
    "types": [
      "Place"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "healthCondition": {
    "title": "healthCondition",
    "classes": [
      "Patient",
      "MedicalStudy",
      "PeopleAudience"
    ],
    "description": "Specifying the health condition(s) of a patient, medical study, or other target audience.",
    "types": [
      "MedicalCondition"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "accommodationCategory": {
    "title": "accommodationCategory",
    "classes": [
      "Accommodation"
    ],
    "description": "Category of an [[Accommodation]], following real estate conventions, e.g. RESO (see [PropertySubType](https://ddwiki.reso.org/display/DDW17/PropertySubType+Field), and [PropertyType](https://ddwiki.reso.org/display/DDW17/PropertyType+Field) fields  for suggested values).",
    "types": [
      "Text"
    ],
    "subPropertyOf": [
      "category"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "orderItemStatus": {
    "title": "orderItemStatus",
    "classes": [
      "OrderItem"
    ],
    "description": "The current status of the order item.",
    "types": [
      "OrderStatus"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "inLanguage": {
    "title": "inLanguage",
    "classes": [
      "CommunicateAction",
      "WriteAction",
      "LinkRole",
      "Event",
      "BroadcastService",
      "PronounceableText",
      "CreativeWork"
    ],
    "description": "The language of the content or performance or used in an action. Please use one of the language codes from the [IETF BCP 47 standard](http://tools.ietf.org/html/bcp47). See also [[availableLanguage]].\nThe language of the content or performance or used in an action. Please use one of the language codes from the <a href=\"http://tools.ietf.org/html/bcp47\">IETF BCP 47 standard</a>. See also <a class=\"localLink\" href=\"http://schema.org/availableLanguage\">availableLanguage</a>.",
    "types": [
      "Text",
      "Language"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "downPayment": {
    "title": "downPayment",
    "classes": [
      "RepaymentSpecification"
    ],
    "description": "a type of payment made in cash during the onset of the purchase of an expensive good/service. The payment typically represents only a percentage of the full purchase price.",
    "types": [
      "Number",
      "MonetaryAmount"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "musicGroupMember": {
    "title": "musicGroupMember",
    "classes": [
      "MusicGroup"
    ],
    "description": "A member of a music group&#x2014;for example, John, Paul, George, or Ringo.",
    "types": [
      "Person"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "relatedDrug": {
    "title": "relatedDrug",
    "classes": [
      "Drug"
    ],
    "description": "Any other drug related to this one, for example commonly-prescribed alternatives.",
    "types": [
      "Drug"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "dateRead": {
    "title": "dateRead",
    "classes": [
      "Message"
    ],
    "description": "The date/time at which the message has been read by the recipient if a single recipient exists.",
    "types": [
      "DateTime",
      "Date"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "musicCompositionForm": {
    "title": "musicCompositionForm",
    "classes": [
      "MusicComposition"
    ],
    "description": "The type of composition (e.g. overture, sonata, symphony, etc.).",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "subReservation": {
    "title": "subReservation",
    "classes": [
      "ReservationPackage"
    ],
    "description": "The individual reservations included in the package. Typically a repeated property.",
    "types": [
      "Reservation"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "relatedAnatomy": {
    "title": "relatedAnatomy",
    "classes": [
      "SuperficialAnatomy"
    ],
    "description": "Anatomical systems or structures that relate to the superficial anatomy.",
    "types": [
      "AnatomicalStructure",
      "AnatomicalSystem"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "populationType": {
    "title": "populationType",
    "classes": [
      "StatisticalVariable",
      "StatisticalPopulation"
    ],
    "description": "Indicates the populationType common to all members of a [[StatisticalPopulation]] or all cases within the scope of a [[StatisticalVariable]].",
    "types": [
      "Class"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "contentSize": {
    "title": "contentSize",
    "classes": [
      "MediaObject"
    ],
    "description": "File size in (mega/kilo)bytes.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "negativeNotes": {
    "title": "negativeNotes",
    "classes": [
      "Review",
      "Product"
    ],
    "description": "Provides negative considerations regarding something, most typically in pro/con lists for reviews (alongside [[positiveNotes]]). For symmetry \n\nIn the case of a [[Review]], the property describes the [[itemReviewed]] from the perspective of the review; in the case of a [[Product]], the product itself is being described. Since product descriptions \ntend to emphasise positive claims, it may be relatively unusual to find [[negativeNotes]] used in this way. Nevertheless for the sake of symmetry, [[negativeNotes]] can be used on [[Product]].\n\nThe property values can be expressed either as unstructured text (repeated as necessary), or if ordered, as a list (in which case the most negative is at the beginning of the list).",
    "types": [
      "ListItem",
      "Text",
      "ItemList",
      "WebContent"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "partOfOrder": {
    "title": "partOfOrder",
    "classes": [
      "ParcelDelivery"
    ],
    "description": "The overall order the items in this delivery were included in.",
    "types": [
      "Order"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "exerciseCourse": {
    "title": "exerciseCourse",
    "classes": [
      "ExerciseAction"
    ],
    "description": "A sub property of location. The course where this action was taken.",
    "types": [
      "Place"
    ],
    "subPropertyOf": [
      "location"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "contactOption": {
    "title": "contactOption",
    "classes": [
      "ContactPoint"
    ],
    "description": "An option available on this contact point (e.g. a toll-free number or support for hearing-impaired callers).",
    "types": [
      "ContactPointOption"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "floorSize": {
    "title": "floorSize",
    "classes": [
      "Accommodation",
      "FloorPlan"
    ],
    "description": "The size of the accommodation, e.g. in square meter or squarefoot.\nTypical unit code(s): MTK for square meter, FTK for square foot, or YDK for square yard.",
    "types": [
      "QuantitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "attendees": {
    "title": "attendees",
    "classes": [
      "Event"
    ],
    "description": "A person attending the event.",
    "types": [
      "Organization",
      "Person"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "busNumber": {
    "title": "busNumber",
    "classes": [
      "BusTrip"
    ],
    "description": "The unique identifier for the bus.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "encodings": {
    "title": "encodings",
    "classes": [
      "CreativeWork"
    ],
    "description": "A media object that encodes this CreativeWork.",
    "types": [
      "MediaObject"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "wordCount": {
    "title": "wordCount",
    "classes": [
      "Article"
    ],
    "description": "The number of words in the text of the Article.",
    "types": [
      "Integer"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "valueMinLength": {
    "title": "valueMinLength",
    "classes": [
      "PropertyValueSpecification"
    ],
    "description": "Specifies the minimum allowed range for number of characters in a literal value.",
    "types": [
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "birthDate": {
    "title": "birthDate",
    "classes": [
      "Person"
    ],
    "description": "Date of birth.",
    "types": [
      "Date",
      "XMLSchema#date",
      "N0ffe4882a4864886a84e9ec44a97229a"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia",
      "YAGO"
    ]
  },
  "applicationContact": {
    "title": "applicationContact",
    "classes": [
      "JobPosting"
    ],
    "description": "Contact details for further information relevant to this job posting.",
    "types": [
      "ContactPoint"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "hasDefinedTerm": {
    "title": "hasDefinedTerm",
    "classes": [
      "DefinedTermSet",
      "Taxon"
    ],
    "description": "A Defined Term contained in this term set.",
    "types": [
      "DefinedTerm"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "performers": {
    "title": "performers",
    "classes": [
      "Event"
    ],
    "description": "The main performer or performers of the event&#x2014;for example, a presenter, musician, or actor.",
    "types": [
      "Organization",
      "Person"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "sku": {
    "title": "sku",
    "classes": [
      "Product",
      "Demand",
      "Offer"
    ],
    "description": "The Stock Keeping Unit (SKU), i.e. a merchant-specific identifier for a product or service, or the product to which the offer refers.",
    "types": [
      "Text"
    ],
    "subPropertyOf": [
      "identifier"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "temporalCoverage": {
    "title": "temporalCoverage",
    "classes": [
      "CreativeWork"
    ],
    "description": "The temporalCoverage of a CreativeWork indicates the period that the content applies to, i.e. that it describes, either as a DateTime or as a textual string indicating a time period in [ISO 8601 time interval format](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals). In\n      the case of a Dataset it will typically indicate the relevant time period in a precise notation (e.g. for a 2011 census dataset, the year 2011 would be written \"2011/2012\"). Other forms of content, e.g. ScholarlyArticle, Book, TVSeries or TVEpisode, may indicate their temporalCoverage in broader terms - textually or via well-known URL.\n      Written works such as books may sometimes have precise temporal coverage too, e.g. a work set in 1939 - 1945 can be indicated in ISO 8601 interval format format via \"1939/1945\".\n\nOpen-ended date ranges can be written with \"..\" in place of the end date. For example, \"2015-11/..\" indicates a range beginning in November 2015 and with no specified final date. This is tentative and might be updated in future when ISO 8601 is officially updated.",
    "types": [
      "Text",
      "URL",
      "DateTime"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "applicableLocation": {
    "title": "applicableLocation",
    "classes": [
      "DrugLegalStatus",
      "DrugCost"
    ],
    "description": "The location in which the status applies.",
    "types": [
      "AdministrativeArea"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "contactType": {
    "title": "contactType",
    "classes": [
      "ContactPoint"
    ],
    "description": "A person or organization can have different contact points, for different purposes. For example, a sales contact point, a PR contact point and so on. This property is used to specify the kind of contact point.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "insertion": {
    "title": "insertion",
    "classes": [
      "Muscle"
    ],
    "description": "The place of attachment of a muscle, or what the muscle moves.",
    "types": [
      "AnatomicalStructure"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "servesCuisine": {
    "title": "servesCuisine",
    "classes": [
      "FoodEstablishment"
    ],
    "description": "The cuisine of the restaurant.",
    "types": [
      "Text",
      "Thing"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "cvdFacilityId": {
    "title": "cvdFacilityId",
    "classes": [
      "CDCPMDRecord"
    ],
    "description": "Identifier of the NHSN facility that this data record applies to. Use [[cvdFacilityCounty]] to indicate the county. To provide other details, [[healthcareReportingData]] can be used on a [[Hospital]] entry.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "isSimilarTo": {
    "title": "isSimilarTo",
    "classes": [
      "Service",
      "Product"
    ],
    "description": "A pointer to another, functionally similar product (or multiple products).",
    "types": [
      "Product",
      "Service"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "associatedMediaReview": {
    "title": "associatedMediaReview",
    "classes": [
      "Review"
    ],
    "description": "An associated [[MediaReview]], related by specific common content, topic or claim. The expectation is that this property would be most typically used in cases where a single activity is conducting both claim reviews and media reviews, in which case [[relatedMediaReview]] would commonly be used on a [[ClaimReview]], while [[relatedClaimReview]] would be used on [[MediaReview]].",
    "types": [
      "Review"
    ],
    "subPropertyOf": [
      "associatedReview"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "branch": {
    "title": "branch",
    "classes": [
      "Nerve"
    ],
    "description": "The branches that delineate from the nerve bundle. Not to be confused with [[branchOf]].",
    "types": [
      "AnatomicalStructure"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "image": {
    "title": "image",
    "classes": [
      "Thing"
    ],
    "description": "An image of the item. This can be a [[URL]] or a fully described [[ImageObject]].\nAn image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>.",
    "types": [
      "URL",
      "ImageObject"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "artist": {
    "title": "artist",
    "classes": [
      "ComicIssue",
      "VisualArtwork",
      "ComicStory",
      "MusicalWork"
    ],
    "description": "The primary artist for a work\n    \tin a medium other than pencils or digital line art--for example, if the\n    \tprimary artwork is done in watercolors or digital paints.\nThe performer or creator of the musical work.",
    "types": [
      "Person",
      "Agent"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ]
  },
  "branchCode": {
    "title": "branchCode",
    "classes": [
      "Place"
    ],
    "description": "A short textual code (also called \"store code\") that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.\\n\\nFor example, in the URL http://www.starbucks.co.uk/store-locator/etc/detail/3047 the code \"3047\" is a branchCode for a particular branch.\n      ",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "mealService": {
    "title": "mealService",
    "classes": [
      "Flight"
    ],
    "description": "Description of the meals that will be provided or available for purchase.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "screenCount": {
    "title": "screenCount",
    "classes": [
      "MovieTheater"
    ],
    "description": "The number of screens in the movie theater.",
    "types": [
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "gameServer": {
    "title": "gameServer",
    "classes": [
      "VideoGame"
    ],
    "description": "The server on which  it is possible to play the game.",
    "types": [
      "GameServer"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "streetAddress": {
    "title": "streetAddress",
    "classes": [
      "PostalAddress"
    ],
    "description": "The street address. For example, 1600 Amphitheatre Pkwy.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "percentile10": {
    "title": "percentile10",
    "classes": [
      "QuantitativeValueDistribution"
    ],
    "description": "The 10th percentile value.",
    "types": [
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "hasMenuSection": {
    "title": "hasMenuSection",
    "classes": [
      "Menu",
      "MenuSection"
    ],
    "description": "A subgrouping of the menu (by dishes, course, serving time period, etc.).",
    "types": [
      "MenuSection"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "associatedDisease": {
    "title": "associatedDisease",
    "classes": [
      "BioChemEntity"
    ],
    "description": "Disease associated to this BioChemEntity. Such disease can be a MedicalCondition or a URL. If you want to add an evidence supporting the association, please use PropertyValue.",
    "types": [
      "URL",
      "MedicalCondition",
      "PropertyValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "enginePower": {
    "title": "enginePower",
    "classes": [
      "EngineSpecification",
      "MeanOfTransportation"
    ],
    "description": "The power of the vehicle's engine.\n    Typical unit code(s): KWT for kilowatt, BHP for brake horsepower, N12 for metric horsepower (PS, with 1 PS = 735,49875 W)\\n\\n* Note 1: There are many different ways of measuring an engine's power. For an overview, see  [http://en.wikipedia.org/wiki/Horsepower#Engine\\_power\\_test\\_codes](http://en.wikipedia.org/wiki/Horsepower#Engine_power_test_codes).\\n* Note 2: You can link to information about how the given value has been determined using the [[valueReference]] property.\\n* Note 3: You can use [[minValue]] and [[maxValue]] to indicate ranges.\nPower to be expressed in Watts (kiloWatt, megaWatt)",
    "types": [
      "QuantitativeValue",
      "XMLSchema#positiveInteger"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ]
  },
  "sport": {
    "title": "sport",
    "classes": [
      "SportsOrganization",
      "SportsEvent",
      "N17a0939991ff4d3b8179978318f2490c"
    ],
    "description": "A type of sport (e.g. Baseball).",
    "types": [
      "URL",
      "Text",
      "Thing"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "handlingTime": {
    "title": "handlingTime",
    "classes": [
      "ShippingDeliveryTime"
    ],
    "description": "The typical delay between the receipt of the order and the goods either leaving the warehouse or being prepared for pickup, in case the delivery method is on site pickup. Typical properties: minValue, maxValue, unitCode (d for DAY).  This is by common convention assumed to mean business days (if a unitCode is used, coded as \"d\"), i.e. only counting days when the business normally operates.",
    "types": [
      "QuantitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "item": {
    "title": "item",
    "classes": [
      "DataFeedItem",
      "ListItem"
    ],
    "description": "An entity represented by an entry in a list or data feed (e.g. an 'artist' in a list of 'artists').",
    "types": [
      "Thing"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "secondaryPrevention": {
    "title": "secondaryPrevention",
    "classes": [
      "MedicalCondition"
    ],
    "description": "A preventative therapy used to prevent reoccurrence of the medical condition after an initial episode of the condition.",
    "types": [
      "MedicalTherapy"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "loanMortgageMandateAmount": {
    "title": "loanMortgageMandateAmount",
    "classes": [
      "MortgageLoan"
    ],
    "description": "Amount of mortgage mandate that can be converted into a proper mortgage at a later stage.",
    "types": [
      "MonetaryAmount"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "riskFactor": {
    "title": "riskFactor",
    "classes": [
      "MedicalCondition"
    ],
    "description": "A modifiable or non-modifiable factor that increases the risk of a patient contracting this condition, e.g. age,  coexisting condition.",
    "types": [
      "MedicalRiskFactor",
      "Thing"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "isGift": {
    "title": "isGift",
    "classes": [
      "Order"
    ],
    "description": "Indicates whether the offer was accepted as a gift for someone other than the buyer.",
    "types": [
      "Boolean"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "productSupported": {
    "title": "productSupported",
    "classes": [
      "ContactPoint"
    ],
    "description": "The product or service this support contact point is related to (such as product support for a particular product line). This can be a specific product or product line (e.g. \"iPhone\") or a general category of products or services (e.g. \"smartphones\").",
    "types": [
      "Product",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "gameAvailabilityType": {
    "title": "gameAvailabilityType",
    "classes": [
      "PlayGameAction"
    ],
    "description": "Indicates the availability type of the game content associated with this action, such as whether it is a full version or a demo.",
    "types": [
      "GameAvailabilityEnumeration",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "firstPerformance": {
    "title": "firstPerformance",
    "classes": [
      "MusicComposition"
    ],
    "description": "The date and place the work was first performed.",
    "types": [
      "Event"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "legislationPassedBy": {
    "title": "legislationPassedBy",
    "classes": [
      "Legislation"
    ],
    "description": "The person or organization that originally passed or made the law: typically parliament (for primary legislation) or government (for secondary legislation). This indicates the \"legal author\" of the law, as opposed to its physical author.",
    "types": [
      "Organization",
      "Person"
    ],
    "subPropertyOf": [
      "creator"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "eligibleTransactionVolume": {
    "title": "eligibleTransactionVolume",
    "classes": [
      "PriceSpecification",
      "Demand",
      "Offer"
    ],
    "description": "The transaction volume, in a monetary unit, for which the offer or price specification is valid, e.g. for indicating a minimal purchasing volume, to express free shipping above a certain order volume, or to limit the acceptance of credit cards to purchases to a certain minimal amount.",
    "types": [
      "PriceSpecification"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "userInteractionCount": {
    "title": "userInteractionCount",
    "classes": [
      "InteractionCounter"
    ],
    "description": "The number of interactions for the CreativeWork using the WebSite or SoftwareApplication.",
    "types": [
      "Integer"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "vehicleIdentificationNumber": {
    "title": "vehicleIdentificationNumber",
    "classes": [
      "Vehicle"
    ],
    "description": "The Vehicle Identification Number (VIN) is a unique serial number used by the automotive industry to identify individual motor vehicles.",
    "types": [
      "Text"
    ],
    "subPropertyOf": [
      "serialNumber"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "ownedThrough": {
    "title": "ownedThrough",
    "classes": [
      "OwnershipInfo"
    ],
    "description": "The date and time of giving up ownership on the product.",
    "types": [
      "DateTime"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "logo": {
    "title": "logo",
    "classes": [
      "Service",
      "Organization",
      "Product",
      "Brand",
      "Certification",
      "Place",
      "Nf9dedac918354d868c158e3dfb3334d1"
    ],
    "description": "An associated logo.",
    "types": [
      "ImageObject",
      "URL"
    ],
    "subPropertyOf": [
      "image"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "numChildren": {
    "title": "numChildren",
    "classes": [
      "LodgingReservation"
    ],
    "description": "The number of children staying in the unit.",
    "types": [
      "Integer",
      "QuantitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "regionDrained": {
    "title": "regionDrained",
    "classes": [
      "LymphaticVessel",
      "Vein"
    ],
    "description": "The anatomical or organ system drained by this vessel; generally refers to a specific part of an organ.",
    "types": [
      "AnatomicalSystem",
      "AnatomicalStructure"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "travelBans": {
    "title": "travelBans",
    "classes": [
      "SpecialAnnouncement"
    ],
    "description": "Information about travel bans, e.g. in the context of a pandemic.",
    "types": [
      "URL",
      "WebContent"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "director": {
    "title": "director",
    "classes": [
      "Event",
      "Clip",
      "TVSeries",
      "VideoObject",
      "Movie",
      "Episode",
      "RadioSeries",
      "CreativeWorkSeason",
      "MovieSeries",
      "VideoGame",
      "VideoGameSeries",
      "Film",
      "Ndac320a4a8f54af78417139e3dede70b"
    ],
    "description": "A director of e.g. TV, radio, movie, video gaming etc. content, or of an event. Directors can be associated with individual items or with a series, episode, clip.\nA director (feminine, director) is a person who directs the production of an audiovisual work, generally for cinema or television.\nA director of e.g. tv, radio, movie, video gaming etc. content, or of an event. Directors can be associated with individual items or with a series, episode, clip.",
    "types": [
      "Person"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia",
      "YAGO"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ]
  },
  "significance": {
    "title": "significance",
    "classes": [
      "SuperficialAnatomy"
    ],
    "description": "The significance associated with the superficial anatomy; as an example, how characteristics of the superficial anatomy can suggest underlying medical conditions or courses of treatment.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "conditionsOfAccess": {
    "title": "conditionsOfAccess",
    "classes": [
      "CreativeWork"
    ],
    "description": "Conditions that affect the availability of, or method(s) of access to, an item. Typically used for real world items such as an [[ArchiveComponent]] held by an [[ArchiveOrganization]]. This property is not suitable for use as a general Web access control mechanism. It is expressed only in natural language.\\n\\nFor example \"Available by appointment from the Reading Room\" or \"Accessible only from logged-in accounts \". ",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "equal": {
    "title": "equal",
    "classes": [
      "QualitativeValue"
    ],
    "description": "This ordering relation for qualitative values indicates that the subject is equal to the object.",
    "types": [
      "QualitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "seeks": {
    "title": "seeks",
    "classes": [
      "Organization",
      "Person"
    ],
    "description": "A pointer to products or services sought by the organization or person (demand).",
    "types": [
      "Demand"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "addressLocality": {
    "title": "addressLocality",
    "classes": [
      "PostalAddress"
    ],
    "description": "The locality in which the street address is, and which is in the region. For example, Mountain View.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "repetitions": {
    "title": "repetitions",
    "classes": [
      "ExercisePlan"
    ],
    "description": "Number of times one should repeat the activity.",
    "types": [
      "Number",
      "QuantitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "costOrigin": {
    "title": "costOrigin",
    "classes": [
      "DrugCost"
    ],
    "description": "Additional details to capture the origin of the cost data. For example, 'Medicare Part B'.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "responsibilities": {
    "title": "responsibilities",
    "classes": [
      "JobPosting",
      "Occupation"
    ],
    "description": "Responsibilities associated with this role or Occupation.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "codeRepository": {
    "title": "codeRepository",
    "classes": [
      "SoftwareSourceCode"
    ],
    "description": "Link to the repository where the un-compiled, human readable code and related code is located (SVN, GitHub, CodePlex).",
    "types": [
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "containsPlace": {
    "title": "containsPlace",
    "classes": [
      "Place"
    ],
    "description": "The basic containment relation between a place and another that it contains.",
    "types": [
      "Place"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "season": {
    "title": "season",
    "classes": [
      "TVSeries",
      "RadioSeries",
      "VideoGameSeries",
      "Agent"
    ],
    "description": "A season in a media series.",
    "types": [
      "CreativeWorkSeason",
      "URL"
    ],
    "subPropertyOf": [
      "hasPart",
      "DUL.owl#hasSetting"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ]
  },
  "numberOfItems": {
    "title": "numberOfItems",
    "classes": [
      "ItemList"
    ],
    "description": "The number of items in an ItemList. Note that some descriptions might not fully describe all items in a list (e.g., multi-page pagination); in such cases, the numberOfItems would be for the entire list.",
    "types": [
      "Integer"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "sportsActivityLocation": {
    "title": "sportsActivityLocation",
    "classes": [
      "ExerciseAction"
    ],
    "description": "A sub property of location. The sports activity location where this action occurred.",
    "types": [
      "SportsActivityLocation"
    ],
    "subPropertyOf": [
      "location"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "applicationCategory": {
    "title": "applicationCategory",
    "classes": [
      "SoftwareApplication"
    ],
    "description": "Type of software application, e.g. 'Game, Multimedia'.",
    "types": [
      "URL",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "printColumn": {
    "title": "printColumn",
    "classes": [
      "NewsArticle"
    ],
    "description": "The number of the column in which the NewsArticle appears in the print edition.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "byMonth": {
    "title": "byMonth",
    "classes": [
      "Schedule"
    ],
    "description": "Defines the month(s) of the year on which a recurring [[Event]] takes place. Specified as an [[Integer]] between 1-12. January is 1.",
    "types": [
      "Integer"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "employmentType": {
    "title": "employmentType",
    "classes": [
      "JobPosting"
    ],
    "description": "Type of employment (e.g. full-time, part-time, contract, temporary, seasonal, internship).",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "study": {
    "title": "study",
    "classes": [
      "MedicalEntity"
    ],
    "description": "A medical study or trial related to this entity.",
    "types": [
      "MedicalStudy"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "serviceOutput": {
    "title": "serviceOutput",
    "classes": [
      "Service"
    ],
    "description": "The tangible thing generated by the service, e.g. a passport, permit, etc.",
    "types": [
      "Thing"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "structuralClass": {
    "title": "structuralClass",
    "classes": [
      "Joint"
    ],
    "description": "The name given to how bone physically connects to each other.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "costPerUnit": {
    "title": "costPerUnit",
    "classes": [
      "DrugCost"
    ],
    "description": "The cost per unit of the drug.",
    "types": [
      "QualitativeValue",
      "Number",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "refundType": {
    "title": "refundType",
    "classes": [
      "MerchantReturnPolicySeasonalOverride",
      "MerchantReturnPolicy"
    ],
    "description": "A refund type, from an enumerated list.",
    "types": [
      "RefundTypeEnumeration"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "departureTime": {
    "title": "departureTime",
    "classes": [
      "Trip"
    ],
    "description": "The expected departure time.",
    "types": [
      "Time",
      "DateTime"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "step": {
    "title": "step",
    "classes": [
      "HowTo"
    ],
    "description": "A single step item (as HowToStep, text, document, video, etc.) or a HowToSection.",
    "types": [
      "Text",
      "CreativeWork",
      "HowToStep",
      "HowToSection"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "usesHealthPlanIdStandard": {
    "title": "usesHealthPlanIdStandard",
    "classes": [
      "HealthInsurancePlan"
    ],
    "description": "The standard for interpreting the Plan ID. The preferred is \"HIOS\". See the Centers for Medicare & Medicaid Services for more details.",
    "types": [
      "Text",
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "firstAppearance": {
    "title": "firstAppearance",
    "classes": [
      "Claim",
      "FictionalCharacter"
    ],
    "description": "Indicates the first known occurrence of a [[Claim]] in some [[CreativeWork]].",
    "types": [
      "CreativeWork",
      "XMLSchema#string"
    ],
    "subPropertyOf": [
      "workExample"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ]
  },
  "netWorth": {
    "title": "netWorth",
    "classes": [
      "Person"
    ],
    "description": "The total financial value of the person as calculated by subtracting assets from liabilities.",
    "types": [
      "PriceSpecification",
      "MonetaryAmount",
      "QuantitativeValue"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "namedPosition": {
    "title": "namedPosition",
    "classes": [
      "Role"
    ],
    "description": "A position played, performed or filled by a person or organization, as part of an organization. For example, an athlete in a SportsTeam might play in the position named 'Quarterback'.",
    "types": [
      "URL",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "geoOverlaps": {
    "title": "geoOverlaps",
    "classes": [
      "GeospatialGeometry",
      "Place"
    ],
    "description": "Represents a relationship between two geometries (or the places they represent), relating a geometry to another that geospatially overlaps it, i.e. they have some but not all points in common. As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).",
    "types": [
      "GeospatialGeometry",
      "Place"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "runtimePlatform": {
    "title": "runtimePlatform",
    "classes": [
      "SoftwareSourceCode"
    ],
    "description": "Runtime platform or script interpreter dependencies (example: Java v1, Python 2.3, .NET Framework 3.0).",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "intensity": {
    "title": "intensity",
    "classes": [
      "ExercisePlan"
    ],
    "description": "Quantitative measure gauging the degree of force involved in the exercise, for example, heartbeats per minute. May include the velocity of the movement.",
    "types": [
      "QuantitativeValue",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "engineDisplacement": {
    "title": "engineDisplacement",
    "classes": [
      "EngineSpecification"
    ],
    "description": "The volume swept by all of the pistons inside the cylinders of an internal combustion engine in a single movement. \\n\\nTypical unit code(s): CMQ for cubic centimeter, LTR for liters, INQ for cubic inches\\n* Note 1: You can link to information about how the given value has been determined using the [[valueReference]] property.\\n* Note 2: You can use [[minValue]] and [[maxValue]] to indicate ranges.",
    "types": [
      "QuantitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "speakable": {
    "title": "speakable",
    "classes": [
      "WebPage",
      "Article"
    ],
    "description": "Indicates sections of a Web page that are particularly 'speakable' in the sense of being highlighted as being especially appropriate for text-to-speech conversion. Other sections of a page may also be usefully spoken in particular circumstances; the 'speakable' property serves to indicate the parts most likely to be generally useful for speech.\n\nThe *speakable* property can be repeated an arbitrary number of times, with three kinds of possible 'content-locator' values:\n\n1.) *id-value* URL references - uses *id-value* of an element in the page being annotated. The simplest use of *speakable* has (potentially relative) URL values, referencing identified sections of the document concerned.\n\n2.) CSS Selectors - addresses content in the annotated page, e.g. via class attribute. Use the [[cssSelector]] property.\n\n3.)  XPaths - addresses content via XPaths (assuming an XML view of the content). Use the [[xpath]] property.\n\n\nFor more sophisticated markup of speakable sections beyond simple ID references, either CSS selectors or XPath expressions to pick out document section(s) as speakable. For this\nwe define a supporting type, [[SpeakableSpecification]]  which is defined to be a possible value of the *speakable* property.\n         ",
    "types": [
      "URL",
      "SpeakableSpecification"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "agent": {
    "title": "agent",
    "classes": [
      "Action"
    ],
    "description": "The direct performer or driver of the action (animate or inanimate). E.g. *John* wrote a book.",
    "types": [
      "Person",
      "Organization"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "requiredQuantity": {
    "title": "requiredQuantity",
    "classes": [
      "HowToItem"
    ],
    "description": "The required quantity of the item(s).",
    "types": [
      "Number",
      "QuantitativeValue",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "cvdNumBeds": {
    "title": "cvdNumBeds",
    "classes": [
      "CDCPMDRecord"
    ],
    "description": "numbeds - HOSPITAL INPATIENT BEDS: Inpatient beds, including all staffed, licensed, and overflow (surge) beds used for inpatients.",
    "types": [
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "reviewBody": {
    "title": "reviewBody",
    "classes": [
      "Review"
    ],
    "description": "The actual body of the review.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "seatNumber": {
    "title": "seatNumber",
    "classes": [
      "Seat",
      "AdministrativeRegion"
    ],
    "description": "The location of the reserved seat (e.g., 27).",
    "types": [
      "Text",
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ]
  },
  "fatContent": {
    "title": "fatContent",
    "classes": [
      "NutritionInformation"
    ],
    "description": "The number of grams of fat.",
    "types": [
      "Mass"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "countriesNotSupported": {
    "title": "countriesNotSupported",
    "classes": [
      "SoftwareApplication"
    ],
    "description": "Countries for which the application is not supported. You can also provide the two-letter ISO 3166-1 alpha-2 country code.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "temporal": {
    "title": "temporal",
    "classes": [
      "CreativeWork"
    ],
    "description": "The \"temporal\" property can be used in cases where more specific properties\n(e.g. [[temporalCoverage]], [[dateCreated]], [[dateModified]], [[datePublished]]) are not known to be appropriate.",
    "types": [
      "DateTime",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "underName": {
    "title": "underName",
    "classes": [
      "Reservation",
      "Ticket"
    ],
    "description": "The person or organization the reservation or ticket is for.",
    "types": [
      "Organization",
      "Person"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "roleName": {
    "title": "roleName",
    "classes": [
      "Role"
    ],
    "description": "A role played, performed or filled by a person or organization. For example, the team of creators for a comic book might fill the roles named 'inker', 'penciller', and 'letterer'; or an athlete in a SportsTeam might play in the position named 'Quarterback'.",
    "types": [
      "Text",
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "cashBack": {
    "title": "cashBack",
    "classes": [
      "PaymentCard"
    ],
    "description": "A cardholder benefit that pays the cardholder a small percentage of their net expenditures.",
    "types": [
      "Boolean",
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "artform": {
    "title": "artform",
    "classes": [
      "VisualArtwork"
    ],
    "description": "e.g. Painting, Drawing, Sculpture, Print, Photograph, Assemblage, Collage, etc.",
    "types": [
      "Text",
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "isPartOf": {
    "title": "isPartOf",
    "classes": [
      "CreativeWork"
    ],
    "description": "Indicates an item or CreativeWork that this item, or CreativeWork (in some sense), is part of.",
    "types": [
      "CreativeWork",
      "URL"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "serviceArea": {
    "title": "serviceArea",
    "classes": [
      "ContactPoint",
      "Service",
      "Organization"
    ],
    "description": "The geographic area where the service is provided.",
    "types": [
      "AdministrativeArea",
      "Place",
      "GeoShape"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "commentTime": {
    "title": "commentTime",
    "classes": [
      "UserComments"
    ],
    "description": "The time at which the UserComment was made.",
    "types": [
      "DateTime",
      "Date"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "activityFrequency": {
    "title": "activityFrequency",
    "classes": [
      "ExercisePlan"
    ],
    "description": "How often one should engage in the activity.",
    "types": [
      "QuantitativeValue",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "gameItem": {
    "title": "gameItem",
    "classes": [
      "Game",
      "VideoGameSeries"
    ],
    "description": "An item is an object within the game world that can be collected by a player or, occasionally, a non-player character.",
    "types": [
      "Thing"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "includesObject": {
    "title": "includesObject",
    "classes": [
      "Demand",
      "Offer",
      "ProductCollection"
    ],
    "description": "This links to a node or nodes indicating the exact quantity of the products included in  an [[Offer]] or [[ProductCollection]].",
    "types": [
      "TypeAndQuantityNode"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "availableTest": {
    "title": "availableTest",
    "classes": [
      "DiagnosticLab"
    ],
    "description": "A diagnostic test or procedure offered by this lab.",
    "types": [
      "MedicalTest"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "hasGS1DigitalLink": {
    "title": "hasGS1DigitalLink",
    "classes": [
      "Offer",
      "Place",
      "Product",
      "Organization"
    ],
    "description": "The <a href=\"https://www.gs1.org/standards/gs1-digital-link\">GS1 digital link</a> associated with the object. This URL should conform to the particular requirements of digital links. The link should only contain the Application Identifiers (AIs) that are relevant for the entity being annotated, for instance a [[Product]] or an [[Organization]], and for the correct granularity. In particular, for products:<ul><li>A Digital Link that contains a serial number (AI <code>21</code>) should only be present on instances of [[IndividualProduct]]</li><li>A Digital Link that contains a lot number (AI <code>10</code>) should be annotated as [[SomeProduct]] if only products from that lot are sold, or [[IndividualProduct]] if there is only a specific product.</li><li>A Digital Link that contains a global model number (AI <code>8013</code>)  should be attached to a [[Product]] or a [[ProductModel]].</li></ul> Other item types should be adapted similarly.",
    "types": [
      "URL"
    ],
    "subPropertyOf": [
      "identifier"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "application": {
    "title": "application",
    "classes": [
      "EntryPoint"
    ],
    "description": "An application that can complete the request.",
    "types": [
      "SoftwareApplication"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "supportingData": {
    "title": "supportingData",
    "classes": [
      "SoftwareApplication"
    ],
    "description": "Supporting data for a SoftwareApplication.",
    "types": [
      "DataFeed"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "ingredients": {
    "title": "ingredients",
    "classes": [
      "Recipe"
    ],
    "description": "A single ingredient used in the recipe, e.g. sugar, flour or garlic.",
    "types": [
      "Text"
    ],
    "subPropertyOf": [
      "supply"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "musicalKey": {
    "title": "musicalKey",
    "classes": [
      "MusicComposition",
      "MusicalWork"
    ],
    "description": "The key, mode, or scale this composition uses.",
    "types": [
      "Text",
      "XMLSchema#string"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ]
  },
  "experienceInPlaceOfEducation": {
    "title": "experienceInPlaceOfEducation",
    "classes": [
      "JobPosting"
    ],
    "description": "Indicates whether a [[JobPosting]] will accept experience (as indicated by [[OccupationalExperienceRequirements]]) in place of its formal educational qualifications (as indicated by [[educationRequirements]]). If true, indicates that satisfying one of these requirements is sufficient.",
    "types": [
      "Boolean"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "abridged": {
    "title": "abridged",
    "classes": [
      "Book"
    ],
    "description": "Indicates whether the book is an abridged edition.",
    "types": [
      "Boolean"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "accessibilityControl": {
    "title": "accessibilityControl",
    "classes": [
      "CreativeWork"
    ],
    "description": "Identifies input methods that are sufficient to fully control the described resource. Values should be drawn from the [approved vocabulary](https://www.w3.org/2021/a11y-discov-vocab/latest/#accessibilityControl-vocabulary).",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "description": {
    "title": "description",
    "classes": [
      "Thing"
    ],
    "description": "A description of the item.",
    "types": [
      "TextObject",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "ownedFrom": {
    "title": "ownedFrom",
    "classes": [
      "OwnershipInfo"
    ],
    "description": "The date and time of obtaining the product.",
    "types": [
      "DateTime"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "httpMethod": {
    "title": "httpMethod",
    "classes": [
      "EntryPoint"
    ],
    "description": "An HTTP method that specifies the appropriate HTTP method for a request to an HTTP EntryPoint. Values are capitalized strings as used in HTTP.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "vehicleSpecialUsage": {
    "title": "vehicleSpecialUsage",
    "classes": [
      "Vehicle"
    ],
    "description": "Indicates whether the vehicle has been used for special purposes, like commercial rental, driving school, or as a taxi. The legislation in many countries requires this information to be revealed when offering a car for sale.",
    "types": [
      "Text",
      "CarUsageType"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "fuelCapacity": {
    "title": "fuelCapacity",
    "classes": [
      "Vehicle",
      "Automobile"
    ],
    "description": "The capacity of the fuel tank or in the case of electric cars, the battery. If there are multiple components for storage, this should indicate the total of all storage of the same type.\\n\\nTypical unit code(s): LTR for liters, GLL of US gallons, GLI for UK / imperial gallons, AMH for ampere-hours (for electrical vehicles).",
    "types": [
      "QuantitativeValue",
      "litre",
      "XMLSchema#double"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ]
  },
  "hasCertification": {
    "title": "hasCertification",
    "classes": [
      "Organization",
      "Person",
      "Product",
      "Place",
      "Service"
    ],
    "description": "Certification information about a product, organization, service, place, or person.",
    "types": [
      "Certification"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "longitude": {
    "title": "longitude",
    "classes": [
      "GeoCoordinates",
      "Place"
    ],
    "description": "The longitude of a location. For example ```-122.08585``` ([WGS 84](https://en.wikipedia.org/wiki/World_Geodetic_System)).\nThe longitude of a location. For example <code>-122.08585</code> (<a href=\"https://en.wikipedia.org/wiki/World_Geodetic_System\">WGS 84</a>).",
    "types": [
      "Number",
      "Text",
      "XMLSchema#double"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "question": {
    "title": "question",
    "classes": [
      "AskAction"
    ],
    "description": "A sub property of object. A question.",
    "types": [
      "Question"
    ],
    "subPropertyOf": [
      "object"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "hasEnergyEfficiencyCategory": {
    "title": "hasEnergyEfficiencyCategory",
    "classes": [
      "EnergyConsumptionDetails"
    ],
    "description": "Defines the energy efficiency Category (which could be either a rating out of range of values or a yes/no certification) for a product according to an international energy efficiency standard.",
    "types": [
      "EnergyEfficiencyEnumeration"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "lodgingUnitDescription": {
    "title": "lodgingUnitDescription",
    "classes": [
      "LodgingReservation"
    ],
    "description": "A full description of the lodging unit.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "embeddedTextCaption": {
    "title": "embeddedTextCaption",
    "classes": [
      "AudioObject",
      "VideoObject",
      "ImageObject"
    ],
    "description": "Represents textual captioning from a [[MediaObject]], e.g. text of a 'meme'.",
    "types": [
      "Text"
    ],
    "subPropertyOf": [
      "caption"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "significantLinks": {
    "title": "significantLinks",
    "classes": [
      "WebPage"
    ],
    "description": "The most significant URLs on the page. Typically, these are the non-navigation links that are clicked on the most.",
    "types": [
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "orderDelivery": {
    "title": "orderDelivery",
    "classes": [
      "Order",
      "OrderItem"
    ],
    "description": "The delivery of the parcel related to this order or order item.",
    "types": [
      "ParcelDelivery"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "hasAdultConsideration": {
    "title": "hasAdultConsideration",
    "classes": [
      "Product",
      "Offer"
    ],
    "description": "Used to tag an item to be intended or suitable for consumption or use by adults only.",
    "types": [
      "AdultOrientedEnumeration"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "musicReleaseFormat": {
    "title": "musicReleaseFormat",
    "classes": [
      "MusicRelease"
    ],
    "description": "Format of this release (the type of recording media used, i.e. compact disc, digital media, LP, etc.).",
    "types": [
      "MusicReleaseFormatType",
      "Thing"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "hasOccupation": {
    "title": "hasOccupation",
    "classes": [
      "Person"
    ],
    "description": "The Person's occupation. For past professions, use Role for expressing dates.",
    "types": [
      "Occupation"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "termsPerYear": {
    "title": "termsPerYear",
    "classes": [
      "EducationalOccupationalProgram"
    ],
    "description": "The number of times terms of study are offered per year. Semesters and quarters are common units for term. For example, if the student can only take 2 semesters for the program in one year, then termsPerYear should be 2.",
    "types": [
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "recognizedBy": {
    "title": "recognizedBy",
    "classes": [
      "EducationalOccupationalCredential"
    ],
    "description": "An organization that acknowledges the validity, value or utility of a credential. Note: recognition may include a process of quality assurance or accreditation.",
    "types": [
      "Organization"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "linkRelationship": {
    "title": "linkRelationship",
    "classes": [
      "LinkRole"
    ],
    "description": "Indicates the relationship type of a Web link. ",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "meetsEmissionStandard": {
    "title": "meetsEmissionStandard",
    "classes": [
      "Vehicle"
    ],
    "description": "Indicates that the vehicle meets the respective emission standard.",
    "types": [
      "URL",
      "QualitativeValue",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "editor": {
    "title": "editor",
    "classes": [
      "CreativeWork"
    ],
    "description": "Specifies the Person who edited the CreativeWork.",
    "types": [
      "Person"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "photo": {
    "title": "photo",
    "classes": [
      "Place"
    ],
    "description": "A photograph of this place.",
    "types": [
      "Photograph",
      "ImageObject"
    ],
    "subPropertyOf": [
      "image"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "strengthValue": {
    "title": "strengthValue",
    "classes": [
      "DrugStrength"
    ],
    "description": "The value of an active ingredient's strength, e.g. 325.",
    "types": [
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "highPrice": {
    "title": "highPrice",
    "classes": [
      "AggregateOffer"
    ],
    "description": "The highest price of all offers available.\\n\\nUsage guidelines:\\n\\n* Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similar Unicode symbols.\\n* Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.",
    "types": [
      "Number",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "healthPlanId": {
    "title": "healthPlanId",
    "classes": [
      "HealthInsurancePlan"
    ],
    "description": "The 14-character, HIOS-generated Plan ID number. (Plan IDs must be unique, even across different markets.)",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "claimInterpreter": {
    "title": "claimInterpreter",
    "classes": [
      "Claim"
    ],
    "description": "For a [[Claim]] interpreted from [[MediaObject]] content, the [[interpretedAsClaim]] property can be used to indicate a claim contained, implied or refined from the content of a [[MediaObject]].",
    "types": [
      "Organization",
      "Person"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "isAccessoryOrSparePartFor": {
    "title": "isAccessoryOrSparePartFor",
    "classes": [
      "Product"
    ],
    "description": "A pointer to another product (or multiple products) for which this product is an accessory or spare part.",
    "types": [
      "Product"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "hoursAvailable": {
    "title": "hoursAvailable",
    "classes": [
      "ContactPoint",
      "Service",
      "LocationFeatureSpecification"
    ],
    "description": "The hours during which this service or contact is available.",
    "types": [
      "OpeningHoursSpecification"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "hasMolecularFunction": {
    "title": "hasMolecularFunction",
    "classes": [
      "BioChemEntity"
    ],
    "description": "Molecular function performed by this BioChemEntity; please use PropertyValue if you want to include any evidence.",
    "types": [
      "PropertyValue",
      "DefinedTerm",
      "URL",
      "Thing"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "familyName": {
    "title": "familyName",
    "classes": [
      "Person"
    ],
    "description": "Family name. In the U.S., the last name of a Person.\nFamily name. In the U.S., the last name of an Person. This can be used along with givenName instead of the name property.",
    "types": [
      "Text",
      "Thing"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "billingStart": {
    "title": "billingStart",
    "classes": [
      "UnitPriceSpecification"
    ],
    "description": "Specifies after how much time this price (or price component) becomes valid and billing starts. Can be used, for example, to model a price increase after the first year of a subscription. The unit of measurement is specified by the unitCode property.",
    "types": [
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "maxValue": {
    "title": "maxValue",
    "classes": [
      "MonetaryAmount",
      "PropertyValue",
      "QuantitativeValue",
      "PropertyValueSpecification"
    ],
    "description": "The upper value of some characteristic or property.",
    "types": [
      "Number",
      "XMLSchema#decimal"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "programName": {
    "title": "programName",
    "classes": [
      "ProgramMembership"
    ],
    "description": "The program providing the membership. It is preferable to use [:program](https://schema.org/program) instead.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "target": {
    "title": "target",
    "classes": [
      "Action"
    ],
    "description": "Indicates a target EntryPoint, or url, for an Action.",
    "types": [
      "URL",
      "EntryPoint"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "pregnancyWarning": {
    "title": "pregnancyWarning",
    "classes": [
      "Drug"
    ],
    "description": "Any precaution, guidance, contraindication, etc. related to this drug's use during pregnancy.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "addOn": {
    "title": "addOn",
    "classes": [
      "Offer"
    ],
    "description": "An additional offer that can only be obtained in combination with the first base offer (e.g. supplements and extensions that are available for a surcharge).",
    "types": [
      "Offer"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "chemicalRole": {
    "title": "chemicalRole",
    "classes": [
      "MolecularEntity",
      "ChemicalSubstance"
    ],
    "description": "A role played by the BioChemEntity within a chemical context.",
    "types": [
      "DefinedTerm"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "departureAirport": {
    "title": "departureAirport",
    "classes": [
      "Flight"
    ],
    "description": "The airport where the flight originates.",
    "types": [
      "Airport"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "announcementLocation": {
    "title": "announcementLocation",
    "classes": [
      "SpecialAnnouncement"
    ],
    "description": "Indicates a specific [[CivicStructure]] or [[LocalBusiness]] associated with the SpecialAnnouncement. For example, a specific testing facility or business with special opening hours. For a larger geographic region like a quarantine of an entire region, use [[spatialCoverage]].",
    "types": [
      "LocalBusiness",
      "CivicStructure"
    ],
    "subPropertyOf": [
      "spatialCoverage"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "cvdNumC19HOPats": {
    "title": "cvdNumC19HOPats",
    "classes": [
      "CDCPMDRecord"
    ],
    "description": "numc19hopats - HOSPITAL ONSET: Patients hospitalized in an NHSN inpatient care location with onset of suspected or confirmed COVID-19 14 or more days after hospitalization.",
    "types": [
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "experienceRequirements": {
    "title": "experienceRequirements",
    "classes": [
      "Occupation",
      "JobPosting"
    ],
    "description": "Description of skills and experience needed for the position or Occupation.",
    "types": [
      "Text",
      "OccupationalExperienceRequirements"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "bankAccountType": {
    "title": "bankAccountType",
    "classes": [
      "BankAccount"
    ],
    "description": "The type of a bank account.",
    "types": [
      "URL",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "creditedTo": {
    "title": "creditedTo",
    "classes": [
      "MusicRelease"
    ],
    "description": "The group the release is credited to if different than the byArtist. For example, Red and Blue is credited to \"Stefani Germanotta Band\", but by Lady Gaga.",
    "types": [
      "Organization",
      "Person"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "marginOfError": {
    "title": "marginOfError",
    "classes": [
      "Observation"
    ],
    "description": "A [[marginOfError]] for an [[Observation]].",
    "types": [
      "QuantitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "pattern": {
    "title": "pattern",
    "classes": [
      "Product",
      "CreativeWork"
    ],
    "description": "A pattern that something has, for example 'polka dot', 'striped', 'Canadian flag'. Values are typically expressed as text, although links to controlled value schemes are also supported.",
    "types": [
      "Text",
      "DefinedTerm"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "paymentDue": {
    "title": "paymentDue",
    "classes": [
      "Order",
      "Invoice"
    ],
    "description": "The date that payment is due.",
    "types": [
      "DateTime"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "gettingTestedInfo": {
    "title": "gettingTestedInfo",
    "classes": [
      "SpecialAnnouncement"
    ],
    "description": "Information about getting tested (for a [[MedicalCondition]]), e.g. in the context of a pandemic.",
    "types": [
      "URL",
      "WebContent"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "healthPlanCostSharing": {
    "title": "healthPlanCostSharing",
    "classes": [
      "HealthPlanNetwork",
      "HealthPlanFormulary"
    ],
    "description": "The costs to the patient for services under this network or formulary.",
    "types": [
      "Boolean"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "bookingAgent": {
    "title": "bookingAgent",
    "classes": [
      "Reservation"
    ],
    "description": "'bookingAgent' is an out-dated term indicating a 'broker' that serves as a booking agent.",
    "types": [
      "Organization",
      "Person"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "drugClass": {
    "title": "drugClass",
    "classes": [
      "Drug"
    ],
    "description": "The class of drug this belongs to (e.g., statins).",
    "types": [
      "DrugClass"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "recordingOf": {
    "title": "recordingOf",
    "classes": [
      "MusicRecording"
    ],
    "description": "The composition this track is a recording of.",
    "types": [
      "MusicComposition"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "subTrip": {
    "title": "subTrip",
    "classes": [
      "Trip"
    ],
    "description": "Identifies a [[Trip]] that is a subTrip of this Trip.  For example Day 1, Day 2, etc. of a multi-day trip.",
    "types": [
      "Trip"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "exceptDate": {
    "title": "exceptDate",
    "classes": [
      "Schedule"
    ],
    "description": "Defines a [[Date]] or [[DateTime]] during which a scheduled [[Event]] will not take place. The property allows exceptions to\n      a [[Schedule]] to be specified. If an exception is specified as a [[DateTime]] then only the event that would have started at that specific date and time\n      should be excluded from the schedule. If an exception is specified as a [[Date]] then any event that is scheduled for that 24 hour period should be\n      excluded from the schedule. This allows a whole day to be excluded from the schedule without having to itemise every scheduled event.",
    "types": [
      "DateTime",
      "Date"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "referenceQuantity": {
    "title": "referenceQuantity",
    "classes": [
      "UnitPriceSpecification"
    ],
    "description": "The reference quantity for which a certain price applies, e.g. 1 EUR per 4 kWh of electricity. This property is a replacement for unitOfMeasurement for the advanced cases where the price does not relate to a standard unit.",
    "types": [
      "QuantitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "fiberContent": {
    "title": "fiberContent",
    "classes": [
      "NutritionInformation"
    ],
    "description": "The number of grams of fiber.",
    "types": [
      "Mass"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "relatedTo": {
    "title": "relatedTo",
    "classes": [
      "Person"
    ],
    "description": "The most generic familial relation.",
    "types": [
      "Person"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "billingIncrement": {
    "title": "billingIncrement",
    "classes": [
      "UnitPriceSpecification"
    ],
    "description": "This property specifies the minimal quantity and rounding increment that will be the basis for the billing. The unit of measurement is specified by the unitCode property.",
    "types": [
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "maximumEnrollment": {
    "title": "maximumEnrollment",
    "classes": [
      "EducationalOccupationalProgram"
    ],
    "description": "The maximum number of students who may be enrolled in the program.",
    "types": [
      "Integer"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "playerType": {
    "title": "playerType",
    "classes": [
      "MediaObject"
    ],
    "description": "Player type required&#x2014;for example, Flash or Silverlight.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "howPerformed": {
    "title": "howPerformed",
    "classes": [
      "MedicalProcedure"
    ],
    "description": "How the procedure is performed.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "directApply": {
    "title": "directApply",
    "classes": [
      "JobPosting"
    ],
    "description": "Indicates whether an [[url]] that is associated with a [[JobPosting]] enables direct application for the job, via the posting website. A job posting is considered to have directApply of [[True]] if an application process for the specified job can be directly initiated via the url(s) given (noting that e.g. multiple internet domains might nevertheless be involved at an implementation level). A value of [[False]] is appropriate if there is no clear path to applying directly online for the specified job, navigating directly from the JobPosting url(s) supplied.",
    "types": [
      "Boolean"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "hasMerchantReturnPolicy": {
    "title": "hasMerchantReturnPolicy",
    "classes": [
      "Product",
      "Offer",
      "Organization"
    ],
    "description": "Specifies a MerchantReturnPolicy that may be applicable.",
    "types": [
      "MerchantReturnPolicy"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "openingHours": {
    "title": "openingHours",
    "classes": [
      "CivicStructure",
      "LocalBusiness"
    ],
    "description": "The general opening hours for a business. Opening hours can be specified as a weekly time range, starting with days, then times per day. Multiple days can be listed with commas ',' separating each day. Day or time ranges are specified using a hyphen '-'.\\n\\n* Days are specified using the following two-letter combinations: ```Mo```, ```Tu```, ```We```, ```Th```, ```Fr```, ```Sa```, ```Su```.\\n* Times are specified using 24:00 format. For example, 3pm is specified as ```15:00```, 10am as ```10:00```. \\n* Here is an example: <code>&lt;time itemprop=\"openingHours\" datetime=&quot;Tu,Th 16:00-20:00&quot;&gt;Tuesdays and Thursdays 4-8pm&lt;/time&gt;</code>.\\n* If a business is open 7 days a week, then it can be specified as <code>&lt;time itemprop=&quot;openingHours&quot; datetime=&quot;Mo-Su&quot;&gt;Monday through Sunday, all day&lt;/time&gt;</code>.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "containsSeason": {
    "title": "containsSeason",
    "classes": [
      "RadioSeries",
      "VideoGameSeries",
      "TVSeries"
    ],
    "description": "A season that is part of the media series.",
    "types": [
      "CreativeWorkSeason"
    ],
    "subPropertyOf": [
      "hasPart"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "arrivalPlatform": {
    "title": "arrivalPlatform",
    "classes": [
      "TrainTrip"
    ],
    "description": "The platform where the train arrives.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "jobLocationType": {
    "title": "jobLocationType",
    "classes": [
      "JobPosting"
    ],
    "description": "A description of the job location (e.g. TELECOMMUTE for telecommute jobs).",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "biologicalRole": {
    "title": "biologicalRole",
    "classes": [
      "BioChemEntity"
    ],
    "description": "A role played by the BioChemEntity within a biological context.",
    "types": [
      "DefinedTerm"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "checkoutTime": {
    "title": "checkoutTime",
    "classes": [
      "LodgingReservation",
      "LodgingBusiness"
    ],
    "description": "The latest someone may check out of a lodging establishment.",
    "types": [
      "Time",
      "DateTime"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "learningResourceType": {
    "title": "learningResourceType",
    "classes": [
      "LearningResource",
      "CreativeWork"
    ],
    "description": "The predominant type or kind characterizing the learning resource. For example, 'presentation', 'handout'.",
    "types": [
      "DefinedTerm",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "originalMediaContextDescription": {
    "title": "originalMediaContextDescription",
    "classes": [
      "MediaReview"
    ],
    "description": "Describes, in a [[MediaReview]] when dealing with [[DecontextualizedContent]], background information that can contribute to better interpretation of the [[MediaObject]].",
    "types": [
      "Text"
    ],
    "subPropertyOf": [
      "description"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "borrower": {
    "title": "borrower",
    "classes": [
      "LendAction"
    ],
    "description": "A sub property of participant. The person that borrows the object being lent.",
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "participant"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "numberOfAirbags": {
    "title": "numberOfAirbags",
    "classes": [
      "Vehicle"
    ],
    "description": "The number or type of airbags in the vehicle.",
    "types": [
      "Number",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "endOffset": {
    "title": "endOffset",
    "classes": [
      "Clip"
    ],
    "description": "The end time of the clip expressed as the number of seconds from the beginning of the work.",
    "types": [
      "HyperTocEntry",
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "costCategory": {
    "title": "costCategory",
    "classes": [
      "DrugCost"
    ],
    "description": "The category of cost, such as wholesale, retail, reimbursement cap, etc.",
    "types": [
      "DrugCostCategory"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "stage": {
    "title": "stage",
    "classes": [
      "MedicalCondition"
    ],
    "description": "The stage of the condition, if applicable.",
    "types": [
      "MedicalConditionStage"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "numberOfEmployees": {
    "title": "numberOfEmployees",
    "classes": [
      "BusinessAudience",
      "Organization",
      "Organisation"
    ],
    "description": "The number of employees in an organization, e.g. business.",
    "types": [
      "QuantitativeValue",
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia",
      "YAGO"
    ]
  },
  "isResizable": {
    "title": "isResizable",
    "classes": [
      "3DModel"
    ],
    "description": "Whether the 3DModel allows resizing. For example, room layout applications often do not allow 3DModel elements to be resized to reflect reality.",
    "types": [
      "Boolean"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "follows": {
    "title": "follows",
    "classes": [
      "Person"
    ],
    "description": "The most generic uni-directional social relation.",
    "types": [
      "Person"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "subStageSuffix": {
    "title": "subStageSuffix",
    "classes": [
      "MedicalConditionStage"
    ],
    "description": "The substage, e.g. 'a' for Stage IIIa.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "opens": {
    "title": "opens",
    "classes": [
      "OpeningHoursSpecification"
    ],
    "description": "The opening hour of the place or service on the given day(s) of the week.",
    "types": [
      "Time"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "video": {
    "title": "video",
    "classes": [
      "CreativeWork"
    ],
    "description": "An embedded video object.",
    "types": [
      "VideoObject",
      "Clip"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "acceptedOffer": {
    "title": "acceptedOffer",
    "classes": [
      "Order"
    ],
    "description": "The offer(s) -- e.g., product, quantity and price combinations -- included in the order.",
    "types": [
      "Offer"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "dayOfWeek": {
    "title": "dayOfWeek",
    "classes": [
      "OpeningHoursSpecification",
      "EducationalOccupationalProgram"
    ],
    "description": "The day of the week for which these opening hours are valid.",
    "types": [
      "DayOfWeek"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "subTest": {
    "title": "subTest",
    "classes": [
      "MedicalTestPanel"
    ],
    "description": "A component test of the panel.",
    "types": [
      "MedicalTest"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "offerCount": {
    "title": "offerCount",
    "classes": [
      "AggregateOffer"
    ],
    "description": "The number of offers for the product.",
    "types": [
      "Integer"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "publicationType": {
    "title": "publicationType",
    "classes": [
      "MedicalScholarlyArticle"
    ],
    "description": "The type of the medical article, taken from the US NLM MeSH publication type catalog. See also [MeSH documentation](http://www.nlm.nih.gov/mesh/pubtypes.html).",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "alumniOf": {
    "title": "alumniOf",
    "classes": [
      "Person"
    ],
    "description": "An organization that the person is an alumni of.",
    "types": [
      "EducationalOrganization",
      "Organization"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "commentText": {
    "title": "commentText",
    "classes": [
      "UserComments"
    ],
    "description": "The text of the UserComment.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "aggregateRating": {
    "title": "aggregateRating",
    "classes": [
      "Place",
      "Service",
      "Event",
      "Organization",
      "CreativeWork",
      "Product",
      "Brand",
      "Offer"
    ],
    "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
    "types": [
      "AggregateRating"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "jobBenefits": {
    "title": "jobBenefits",
    "classes": [
      "JobPosting"
    ],
    "description": "Description of benefits associated with the job.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "broadcastServiceTier": {
    "title": "broadcastServiceTier",
    "classes": [
      "BroadcastChannel"
    ],
    "description": "The type of service required to have access to the channel (e.g. Standard or Premium).",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "legislationJurisdiction": {
    "title": "legislationJurisdiction",
    "classes": [
      "Legislation"
    ],
    "description": "The jurisdiction from which the legislation originates.",
    "types": [
      "AdministrativeArea",
      "Text"
    ],
    "subPropertyOf": [
      "spatialCoverage",
      "jurisdiction"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "mediaItemAppearance": {
    "title": "mediaItemAppearance",
    "classes": [
      "MediaReviewItem"
    ],
    "description": "In the context of a [[MediaReview]], indicates specific media item(s) that are grouped using a [[MediaReviewItem]].",
    "types": [
      "MediaObject"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "priceValidUntil": {
    "title": "priceValidUntil",
    "classes": [
      "Offer"
    ],
    "description": "The date after which the price is no longer available.",
    "types": [
      "Date"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "about": {
    "title": "about",
    "classes": [
      "Event",
      "CreativeWork",
      "Certification",
      "CommunicateAction",
      "N4a0383faa0d44582b552c5ab90b68ce5"
    ],
    "description": "The subject matter of the content.",
    "types": [
      "Thing"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "aspect": {
    "title": "aspect",
    "classes": [
      "MedicalWebPage"
    ],
    "description": "An aspect of medical practice that is considered on the page, such as 'diagnosis', 'treatment', 'causes', 'prognosis', 'etiology', 'epidemiology', etc.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "legislationLegalForce": {
    "title": "legislationLegalForce",
    "classes": [
      "Legislation"
    ],
    "description": "Whether the legislation is currently in force, not in force, or partially in force.",
    "types": [
      "LegalForceStatus"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "legislationResponsible": {
    "title": "legislationResponsible",
    "classes": [
      "Legislation"
    ],
    "description": "An individual or organization that has some kind of responsibility for the legislation. Typically the ministry who is/was in charge of elaborating the legislation, or the adressee for potential questions about the legislation once it is published.",
    "types": [
      "Person",
      "Organization"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "starRating": {
    "title": "starRating",
    "classes": [
      "LodgingBusiness",
      "FoodEstablishment",
      "Hotel"
    ],
    "description": "An official rating for a lodging business or food establishment, e.g. from national associations or standards bodies. Use the author property to indicate the rating organization, e.g. as an Organization with name such as (e.g. HOTREC, DEHOGA, WHR, or Hotelstars).",
    "types": [
      "Rating",
      "XMLSchema#float"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ]
  },
  "deathPlace": {
    "title": "deathPlace",
    "classes": [
      "Person"
    ],
    "description": "The place where the person died.",
    "types": [
      "Place"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia",
      "YAGO"
    ],
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ]
  },
  "map": {
    "title": "map",
    "classes": [
      "Place"
    ],
    "description": "A URL to a map of the place.\nA map of the place.",
    "types": [
      "URL"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ],
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ]
  },
  "associatedPathophysiology": {
    "title": "associatedPathophysiology",
    "classes": [
      "AnatomicalStructure",
      "SuperficialAnatomy",
      "AnatomicalSystem"
    ],
    "description": "If applicable, a description of the pathophysiology associated with the anatomical system, including potential abnormal changes in the mechanical, physical, and biochemical functions of the system.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "availability": {
    "title": "availability",
    "classes": [
      "Demand",
      "Offer"
    ],
    "description": "The availability of this item&#x2014;for example In stock, Out of stock, Pre-order, etc.",
    "types": [
      "ItemAvailability"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "scheduleTimezone": {
    "title": "scheduleTimezone",
    "classes": [
      "Schedule"
    ],
    "description": "Indicates the timezone for which the time(s) indicated in the [[Schedule]] are given. The value provided should be among those listed in the IANA Time Zone Database.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "assembly": {
    "title": "assembly",
    "classes": [
      "APIReference",
      "MeanOfTransportation"
    ],
    "description": "Library file name, e.g., mscorlib.dll, system.web.dll.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ]
  },
  "orderItemNumber": {
    "title": "orderItemNumber",
    "classes": [
      "OrderItem"
    ],
    "description": "The identifier of the order item.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "numberOfSeasons": {
    "title": "numberOfSeasons",
    "classes": [
      "TVSeries",
      "RadioSeries",
      "VideoGameSeries",
      "TelevisionShow",
      "N7e78b5d2fe8d4cc7814d1809eda7f0d9"
    ],
    "description": "The number of seasons in this series.",
    "types": [
      "Integer",
      "XMLSchema#nonNegativeInteger",
      "XMLSchema#integer"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia",
      "YAGO"
    ]
  },
  "dateReceived": {
    "title": "dateReceived",
    "classes": [
      "Message"
    ],
    "description": "The date/time the message was received if a single recipient exists.",
    "types": [
      "DateTime"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "startTime": {
    "title": "startTime",
    "classes": [
      "Action",
      "Schedule",
      "FoodEstablishmentReservation",
      "InteractionCounter",
      "MediaObject"
    ],
    "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. E.g. John wrote a book from *January* to December. For media, including audio and video, it's the time offset of the start of a clip within a larger file.\\n\\nNote that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions.",
    "types": [
      "DateTime",
      "Time"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "healthPlanCoinsuranceOption": {
    "title": "healthPlanCoinsuranceOption",
    "classes": [
      "HealthPlanCostSharingSpecification"
    ],
    "description": "Whether the coinsurance applies before or after deductible, etc. TODO: Is this a closed set?",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "rxcui": {
    "title": "rxcui",
    "classes": [
      "Drug"
    ],
    "description": "The RxCUI drug identifier from RXNORM.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "publication": {
    "title": "publication",
    "classes": [
      "CreativeWork",
      "Person"
    ],
    "description": "A publication event associated with the item.",
    "types": [
      "PublicationEvent",
      "XMLSchema#string"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ]
  },
  "availableThrough": {
    "title": "availableThrough",
    "classes": [
      "DeliveryEvent"
    ],
    "description": "After this date, the item will no longer be available for pickup.",
    "types": [
      "DateTime"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "proficiencyLevel": {
    "title": "proficiencyLevel",
    "classes": [
      "TechArticle"
    ],
    "description": "Proficiency needed for this content; expected values: 'Beginner', 'Expert'.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "recognizingAuthority": {
    "title": "recognizingAuthority",
    "classes": [
      "MedicalEntity"
    ],
    "description": "If applicable, the organization that officially recognizes this entity as part of its endorsed system of medicine.",
    "types": [
      "Organization"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "fuelConsumption": {
    "title": "fuelConsumption",
    "classes": [
      "Vehicle",
      "AutomobileEngine"
    ],
    "description": "The amount of fuel consumed for traveling a particular distance or temporal duration with the given vehicle (e.g. liters per 100 km).\\n\\n* Note 1: There are unfortunately no standard unit codes for liters per 100 km.  Use [[unitText]] to indicate the unit of measurement, e.g. L/100 km.\\n* Note 2: There are two ways of indicating the fuel consumption, [[fuelConsumption]] (e.g. 8 liters per 100 km) and [[fuelEfficiency]] (e.g. 30 miles per gallon). They are reciprocal.\\n* Note 3: Often, the absolute value is useful only when related to driving speed (\"at 80 km/h\") or usage pattern (\"city traffic\"). You can use [[valueReference]] to link the value for the fuel consumption to another value.",
    "types": [
      "QuantitativeValue",
      "XMLSchema#string"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ]
  },
  "hasMeasurement": {
    "title": "hasMeasurement",
    "classes": [
      "SizeSpecification",
      "Product",
      "Certification",
      "Offer"
    ],
    "description": "A measurement of an item, For example, the inseam of pants, the wheel size of a bicycle, the gauge of a screw, or the carbon footprint measured for certification by an authority. Usually an exact measurement, but can also be a range of measurements for adjustable products, for example belts and ski bindings.",
    "types": [
      "QuantitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "broadcastOfEvent": {
    "title": "broadcastOfEvent",
    "classes": [
      "BroadcastEvent"
    ],
    "description": "The event being broadcast such as a sporting event or awards ceremony.",
    "types": [
      "Event"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "copyrightYear": {
    "title": "copyrightYear",
    "classes": [
      "CreativeWork"
    ],
    "description": "The year during which the claimed copyright for the CreativeWork was first asserted.",
    "types": [
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "interactivityType": {
    "title": "interactivityType",
    "classes": [
      "CreativeWork"
    ],
    "description": "The predominant mode of learning supported by the learning resource. Acceptable values are 'active', 'expositive', or 'mixed'.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "knowsLanguage": {
    "title": "knowsLanguage",
    "classes": [
      "Person",
      "Organization",
      "N831cfd9dc51247b0a418d558e1669935"
    ],
    "description": "Of a [[Person]], and less typically of an [[Organization]], to indicate a known language. We do not distinguish skill levels or reading/writing/speaking/signing here. Use language codes from the [IETF BCP 47 standard](http://tools.ietf.org/html/bcp47).\nOf a <a class=\"localLink\" href=\"http://schema.org/Person\">Person</a>, and less typically of an <a class=\"localLink\" href=\"http://schema.org/Organization\">Organization</a>, to indicate a known language. We do not distinguish skill levels or reading/writing/speaking/signing here. Use language codes from the <a href=\"http://tools.ietf.org/html/bcp47\">IETF BCP 47 standard</a>.",
    "types": [
      "Language",
      "Text"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "departureBoatTerminal": {
    "title": "departureBoatTerminal",
    "classes": [
      "BoatTrip"
    ],
    "description": "The terminal or port from which the boat departs.",
    "types": [
      "BoatTerminal"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "phoneticText": {
    "title": "phoneticText",
    "classes": [
      "PronounceableText"
    ],
    "description": "Representation of a text [[textValue]] using the specified [[speechToTextMarkup]]. For example the city name of Houston in IPA: /\u02c8hju\u02d0st\u0259n/.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "authenticator": {
    "title": "authenticator",
    "classes": [
      "MediaSubscription"
    ],
    "description": "The Organization responsible for authenticating the user's subscription. For example, many media apps require a cable/satellite provider to authenticate your subscription before playing media.",
    "types": [
      "Organization"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "affiliation": {
    "title": "affiliation",
    "classes": [
      "Person",
      "Organisation"
    ],
    "description": "An organization that this person is affiliated with. For example, a school/university, a club, or a team.",
    "types": [
      "Organization",
      "Organisation"
    ],
    "subPropertyOf": [
      "memberOf",
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia",
      "YAGO"
    ]
  },
  "arrivalStation": {
    "title": "arrivalStation",
    "classes": [
      "TrainTrip"
    ],
    "description": "The station where the train trip ends.",
    "types": [
      "TrainStation"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "targetDescription": {
    "title": "targetDescription",
    "classes": [
      "AlignmentObject"
    ],
    "description": "The description of a node in an established educational framework.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "inChI": {
    "title": "inChI",
    "classes": [
      "MolecularEntity"
    ],
    "description": "Non-proprietary identifier for molecular entity that can be used in printed and electronic data sources thus enabling easier linking of diverse data compilations.",
    "types": [
      "Text",
      "XMLSchema#string"
    ],
    "subPropertyOf": [
      "hasRepresentation"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "hasMenu": {
    "title": "hasMenu",
    "classes": [
      "FoodEstablishment"
    ],
    "description": "Either the actual menu as a structured representation, as text, or a URL of the menu.",
    "types": [
      "URL",
      "Menu",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "cvdNumICUBeds": {
    "title": "cvdNumICUBeds",
    "classes": [
      "CDCPMDRecord"
    ],
    "description": "numicubeds - ICU BEDS: Total number of staffed inpatient intensive care unit (ICU) beds.",
    "types": [
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "currency": {
    "title": "currency",
    "classes": [
      "MonetaryAmount",
      "LoanOrCredit",
      "DatedMoneySpecification",
      "ExchangeRateSpecification",
      "MonetaryAmountDistribution"
    ],
    "description": "The currency in which the monetary amount is expressed.\\n\\nUse standard formats: [ISO 4217 currency format](http://en.wikipedia.org/wiki/ISO_4217), e.g. \"USD\"; [Ticker symbol](https://en.wikipedia.org/wiki/List_of_cryptocurrencies) for cryptocurrencies, e.g. \"BTC\"; well known names for [Local Exchange Trading Systems](https://en.wikipedia.org/wiki/Local_exchange_trading_system) (LETS) and other currency types, e.g. \"Ithaca HOUR\".",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "childMinAge": {
    "title": "childMinAge",
    "classes": [
      "ParentAudience"
    ],
    "description": "Minimal age of the child.",
    "types": [
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "recommendationStrength": {
    "title": "recommendationStrength",
    "classes": [
      "MedicalGuidelineRecommendation"
    ],
    "description": "Strength of the guideline's recommendation (e.g. 'class I').",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "byDay": {
    "title": "byDay",
    "classes": [
      "Schedule"
    ],
    "description": "Defines the day(s) of the week on which a recurring [[Event]] takes place. May be specified using either [[DayOfWeek]], or alternatively [[Text]] conforming to iCal's syntax for byDay recurrence rules.",
    "types": [
      "Text",
      "DayOfWeek"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "knownVehicleDamages": {
    "title": "knownVehicleDamages",
    "classes": [
      "Vehicle"
    ],
    "description": "A textual description of known damages, both repaired and unrepaired.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "value": {
    "title": "value",
    "classes": [
      "MonetaryAmount",
      "QuantitativeValue",
      "PropertyValue"
    ],
    "description": "The value of a [[QuantitativeValue]] (including [[Observation]]) or property value node.\\n\\n* For [[QuantitativeValue]] and [[MonetaryAmount]], the recommended type for values is 'Number'.\\n* For [[PropertyValue]], it can be 'Text', 'Number', 'Boolean', or 'StructuredValue'.\\n* Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similar Unicode symbols.\\n* Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.\nThe value of the quantitative value or property value node.<br/><br/>\n\n<ul>\n<li>For <a class=\"localLink\" href=\"http://schema.org/QuantitativeValue\">QuantitativeValue</a> and <a class=\"localLink\" href=\"http://schema.org/MonetaryAmount\">MonetaryAmount</a>, the recommended type for values is 'Number'.</li>\n<li>For <a class=\"localLink\" href=\"http://schema.org/PropertyValue\">PropertyValue</a>, it can be 'Text;', 'Number', 'Boolean', or 'StructuredValue'.</li>\n<li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.</li>\n<li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.</li>\n</ul>\n",
    "types": [
      "StructuredValue",
      "Boolean",
      "Text",
      "Number",
      "XMLSchema#decimal"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "risks": {
    "title": "risks",
    "classes": [
      "Diet"
    ],
    "description": "Specific physiologic risks associated to the diet plan.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "softwareHelp": {
    "title": "softwareHelp",
    "classes": [
      "SoftwareApplication"
    ],
    "description": "Software application help.",
    "types": [
      "CreativeWork"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "inker": {
    "title": "inker",
    "classes": [
      "VisualArtwork",
      "ComicStory",
      "ComicIssue"
    ],
    "description": "The individual who traces over the pencil drawings in ink after pencils are complete.",
    "types": [
      "Person"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "seller": {
    "title": "seller",
    "classes": [
      "Offer",
      "Order",
      "Flight",
      "BuyAction",
      "Demand"
    ],
    "description": "An entity which offers (sells / leases / lends / loans) the services / goods.  A seller may also be a provider.",
    "types": [
      "Organization",
      "Person"
    ],
    "subPropertyOf": [
      "participant"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "geographicArea": {
    "title": "geographicArea",
    "classes": [
      "Audience"
    ],
    "description": "The geographic area associated with the audience.",
    "types": [
      "AdministrativeArea"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "discount": {
    "title": "discount",
    "classes": [
      "Order"
    ],
    "description": "Any discount applied (to an Order).",
    "types": [
      "Text",
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "activityDuration": {
    "title": "activityDuration",
    "classes": [
      "ExercisePlan"
    ],
    "description": "Length of time to engage in the activity.",
    "types": [
      "Duration",
      "QuantitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "exerciseType": {
    "title": "exerciseType",
    "classes": [
      "ExercisePlan",
      "ExerciseAction"
    ],
    "description": "Type(s) of exercise or activity, such as strength training, flexibility training, aerobics, cardiac rehabilitation, etc.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "keywords": {
    "title": "keywords",
    "classes": [
      "CreativeWork",
      "Product",
      "Organization",
      "Place",
      "Event"
    ],
    "description": "Keywords or tags used to describe some item. Multiple textual entries in a keywords list are typically delimited by commas, or by repeating the property.",
    "types": [
      "DefinedTerm",
      "URL",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "naturalProgression": {
    "title": "naturalProgression",
    "classes": [
      "MedicalCondition"
    ],
    "description": "The expected progression of the condition if it is not treated and allowed to progress naturally.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "businessFunction": {
    "title": "businessFunction",
    "classes": [
      "TypeAndQuantityNode",
      "Demand",
      "Offer"
    ],
    "description": "The business function (e.g. sell, lease, repair, dispose) of the offer or component of a bundle (TypeAndQuantityNode). The default is http://purl.org/goodrelations/v1#Sell.",
    "types": [
      "BusinessFunction"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "directors": {
    "title": "directors",
    "classes": [
      "RadioSeries",
      "MovieSeries",
      "VideoGame",
      "VideoGameSeries",
      "TVSeries",
      "Clip",
      "VideoObject",
      "Movie",
      "Episode"
    ],
    "description": "A director of e.g. TV, radio, movie, video games etc. content. Directors can be associated with individual items or with a series, episode, clip.",
    "types": [
      "Person"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "reservedTicket": {
    "title": "reservedTicket",
    "classes": [
      "Reservation"
    ],
    "description": "A ticket associated with the reservation.",
    "types": [
      "Ticket"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "evidenceOrigin": {
    "title": "evidenceOrigin",
    "classes": [
      "MedicalGuideline"
    ],
    "description": "Source of the data used to formulate the guidance, e.g. RCT, consensus opinion, etc.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "sodiumContent": {
    "title": "sodiumContent",
    "classes": [
      "NutritionInformation"
    ],
    "description": "The number of milligrams of sodium.",
    "types": [
      "Mass"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "minPrice": {
    "title": "minPrice",
    "classes": [
      "PriceSpecification"
    ],
    "description": "The lowest price if the price is a range.",
    "types": [
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "copyrightNotice": {
    "title": "copyrightNotice",
    "classes": [
      "CreativeWork"
    ],
    "description": "Text of a notice appropriate for describing the copyright aspects of this Creative Work, ideally indicating the owner of the copyright for the Work.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "mapType": {
    "title": "mapType",
    "classes": [
      "Map"
    ],
    "description": "Indicates the kind of Map, from the MapCategoryType Enumeration.",
    "types": [
      "MapCategoryType"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "drainsTo": {
    "title": "drainsTo",
    "classes": [
      "Vein",
      "AnatomicalStructure"
    ],
    "description": "The vasculature that the vein drains into.",
    "types": [
      "Vessel",
      "AnatomicalStructure"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ],
    "subPropertyOf": [
      "DUL.owl#hasCommonBoundary"
    ]
  },
  "endTime": {
    "title": "endTime",
    "classes": [
      "InteractionCounter",
      "Action",
      "MediaObject",
      "Schedule",
      "FoodEstablishmentReservation"
    ],
    "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. E.g. John wrote a book from January to *December*. For media, including audio and video, it's the time offset of the end of a clip within a larger file.\\n\\nNote that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions.",
    "types": [
      "Time",
      "DateTime"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "messageAttachment": {
    "title": "messageAttachment",
    "classes": [
      "Message"
    ],
    "description": "A CreativeWork attached to the message.",
    "types": [
      "CreativeWork"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "workPerformed": {
    "title": "workPerformed",
    "classes": [
      "Event"
    ],
    "description": "A work performed in some event, for example a play performed in a TheaterEvent.",
    "types": [
      "CreativeWork"
    ],
    "subPropertyOf": [
      "workFeatured"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "measurementDenominator": {
    "title": "measurementDenominator",
    "classes": [
      "StatisticalVariable",
      "Observation"
    ],
    "description": "Identifies the denominator variable when an observation represents a ratio or percentage.",
    "types": [
      "StatisticalVariable"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "artworkSurface": {
    "title": "artworkSurface",
    "classes": [
      "VisualArtwork"
    ],
    "description": "The supporting materials for the artwork, e.g. Canvas, Paper, Wood, Board, etc.",
    "types": [
      "Text",
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "occupancy": {
    "title": "occupancy",
    "classes": [
      "HotelRoom",
      "Apartment",
      "Accommodation",
      "Suite",
      "SingleFamilyResidence"
    ],
    "description": "The allowed total occupancy for the accommodation in persons (including infants etc). For individual accommodations, this is not necessarily the legal maximum but defines the permitted usage as per the contractual agreement (e.g. a double room used by a single person).\nTypical unit code(s): C62 for person.",
    "types": [
      "QuantitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "eligibleDuration": {
    "title": "eligibleDuration",
    "classes": [
      "Offer",
      "Demand"
    ],
    "description": "The duration for which the given offer is valid.",
    "types": [
      "QuantitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "expectedPrognosis": {
    "title": "expectedPrognosis",
    "classes": [
      "MedicalCondition"
    ],
    "description": "The likely outcome in either the short term or long term of the medical condition.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "specialty": {
    "title": "specialty",
    "classes": [
      "WebPage"
    ],
    "description": "One of the domain specialities to which this web page's content applies.",
    "types": [
      "Specialty"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "petsAllowed": {
    "title": "petsAllowed",
    "classes": [
      "FloorPlan",
      "LodgingBusiness",
      "Accommodation",
      "ApartmentComplex"
    ],
    "description": "Indicates whether pets are allowed to enter the accommodation or lodging business. More detailed information can be put in a text value.",
    "types": [
      "Boolean",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "geoDisjoint": {
    "title": "geoDisjoint",
    "classes": [
      "Place",
      "GeospatialGeometry"
    ],
    "description": "Represents spatial relations in which two geometries (or the places they represent) are topologically disjoint: \"they have no point in common. They form a set of disconnected geometries.\" (A symmetric relationship, as defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).)",
    "types": [
      "GeospatialGeometry",
      "Place"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "educationalProgramMode": {
    "title": "educationalProgramMode",
    "classes": [
      "EducationalOccupationalProgram"
    ],
    "description": "Similar to courseMode, the medium or means of delivery of the program as a whole. The value may either be a text label (e.g. \"online\", \"onsite\" or \"blended\"; \"synchronous\" or \"asynchronous\"; \"full-time\" or \"part-time\") or a URL reference to a term from a controlled vocabulary (e.g. https://ceds.ed.gov/element/001311#Asynchronous ).",
    "types": [
      "URL",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "opponent": {
    "title": "opponent",
    "classes": [
      "ExerciseAction",
      "Person"
    ],
    "description": "A sub property of participant. The opponent on this action.",
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "participant",
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ]
  },
  "flightDistance": {
    "title": "flightDistance",
    "classes": [
      "Flight"
    ],
    "description": "The distance of the flight.",
    "types": [
      "Distance",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "purchaseDate": {
    "title": "purchaseDate",
    "classes": [
      "Product",
      "Vehicle"
    ],
    "description": "The date the item, e.g. vehicle, was purchased by the current owner.",
    "types": [
      "Date"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "seatingType": {
    "title": "seatingType",
    "classes": [
      "Seat"
    ],
    "description": "The type/class of the seat.",
    "types": [
      "QualitativeValue",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "currentExchangeRate": {
    "title": "currentExchangeRate",
    "classes": [
      "ExchangeRateSpecification"
    ],
    "description": "The current price of a currency.",
    "types": [
      "UnitPriceSpecification"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "nerve": {
    "title": "nerve",
    "classes": [
      "Muscle",
      "AnatomicalStructure"
    ],
    "description": "The underlying innervation associated with the muscle.",
    "types": [
      "Nerve"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ],
    "subPropertyOf": [
      "DUL.owl#isLocationOf"
    ]
  },
  "clinicalPharmacology": {
    "title": "clinicalPharmacology",
    "classes": [
      "Drug"
    ],
    "description": "Description of the absorption and elimination of drugs, including their concentration (pharmacokinetics, pK) and biological effects (pharmacodynamics, pD).",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "typicalCreditsPerTerm": {
    "title": "typicalCreditsPerTerm",
    "classes": [
      "EducationalOccupationalProgram"
    ],
    "description": "The number of credits or units a full-time student would be expected to take in 1 term however 'term' is defined by the institution.",
    "types": [
      "Integer",
      "StructuredValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "episodes": {
    "title": "episodes",
    "classes": [
      "VideoGameSeries",
      "TVSeries",
      "RadioSeries",
      "CreativeWorkSeason"
    ],
    "description": "An episode of a TV/radio series or season.",
    "types": [
      "Episode"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "targetPlatform": {
    "title": "targetPlatform",
    "classes": [
      "APIReference"
    ],
    "description": "Type of app development: phone, Metro style, desktop, XBox, etc.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "printSection": {
    "title": "printSection",
    "classes": [
      "NewsArticle"
    ],
    "description": "If this NewsArticle appears in print, this field indicates the print section in which the article appeared.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "yearlyRevenue": {
    "title": "yearlyRevenue",
    "classes": [
      "BusinessAudience"
    ],
    "description": "The size of the business in annual revenue.",
    "types": [
      "QuantitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "recordedAs": {
    "title": "recordedAs",
    "classes": [
      "MusicComposition"
    ],
    "description": "An audio recording of the work.",
    "types": [
      "MusicRecording"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "beforeMedia": {
    "title": "beforeMedia",
    "classes": [
      "HowToDirection"
    ],
    "description": "A media object representing the circumstances before performing this direction.",
    "types": [
      "URL",
      "MediaObject"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "paymentDueDate": {
    "title": "paymentDueDate",
    "classes": [
      "Order",
      "Invoice"
    ],
    "description": "The date that payment is due.",
    "types": [
      "DateTime",
      "Date"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "billingDuration": {
    "title": "billingDuration",
    "classes": [
      "UnitPriceSpecification"
    ],
    "description": "Specifies for how long this price (or price component) will be billed. Can be used, for example, to model the contractual duration of a subscription or payment plan. Type can be either a Duration or a Number (in which case the unit of measurement, for example month, is specified by the unitCode property).",
    "types": [
      "QuantitativeValue",
      "Duration",
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "loanRepaymentForm": {
    "title": "loanRepaymentForm",
    "classes": [
      "LoanOrCredit"
    ],
    "description": "A form of paying back money previously borrowed from a lender. Repayment usually takes the form of periodic payments that normally include part principal plus interest in each payment.",
    "types": [
      "RepaymentSpecification"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "associatedAnatomy": {
    "title": "associatedAnatomy",
    "classes": [
      "PhysicalActivity",
      "MedicalCondition"
    ],
    "description": "The anatomy of the underlying organ system or structures associated with this entity.",
    "types": [
      "AnatomicalSystem",
      "AnatomicalStructure",
      "SuperficialAnatomy"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "spokenByCharacter": {
    "title": "spokenByCharacter",
    "classes": [
      "Quotation"
    ],
    "description": "The (e.g. fictional) character, Person or Organization to whom the quotation is attributed within the containing CreativeWork.",
    "types": [
      "Organization",
      "Person"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "foundingDate": {
    "title": "foundingDate",
    "classes": [
      "Organization"
    ],
    "description": "The date that this organization was founded.",
    "types": [
      "Date",
      "Ndb6559adac784ffdac491bbcf4c23f4f"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "coursePrerequisites": {
    "title": "coursePrerequisites",
    "classes": [
      "Course"
    ],
    "description": "Requirements for taking the Course. May be completion of another [[Course]] or a textual description like \"permission of instructor\". Requirements may be a pre-requisite competency, referenced using [[AlignmentObject]].",
    "types": [
      "Course",
      "AlignmentObject",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "differentialDiagnosis": {
    "title": "differentialDiagnosis",
    "classes": [
      "MedicalCondition"
    ],
    "description": "One of a set of differential diagnoses for the condition. Specifically, a closely-related or competing diagnosis typically considered later in the cognitive process whereby this medical condition is distinguished from others most likely responsible for a similar collection of signs and symptoms to reach the most parsimonious diagnosis or diagnoses in a patient.",
    "types": [
      "DDxElement"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "measurementQualifier": {
    "title": "measurementQualifier",
    "classes": [
      "StatisticalVariable",
      "Observation"
    ],
    "description": "Provides additional qualification to an observation. For example, a GDP observation measures the Nominal value.",
    "types": [
      "Enumeration"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "version": {
    "title": "version",
    "classes": [
      "CreativeWork",
      "MeanOfTransportation"
    ],
    "description": "The version of the CreativeWork embodied by a specified resource.",
    "types": [
      "Text",
      "Number"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ]
  },
  "hasEnergyConsumptionDetails": {
    "title": "hasEnergyConsumptionDetails",
    "classes": [
      "Product"
    ],
    "description": "Defines the energy efficiency Category (also known as \"class\" or \"rating\") for a product according to an international energy efficiency standard.",
    "types": [
      "EnergyConsumptionDetails"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "isAccessibleForFree": {
    "title": "isAccessibleForFree",
    "classes": [
      "Event",
      "CreativeWork",
      "Place"
    ],
    "description": "A flag to signal that the item, event, or place is accessible for free.",
    "types": [
      "Boolean"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "videoFormat": {
    "title": "videoFormat",
    "classes": [
      "BroadcastService",
      "ScreeningEvent",
      "BroadcastEvent"
    ],
    "description": "The type of screening or video broadcast used (e.g. IMAX, 3D, SD, HD, etc.).",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "fundedItem": {
    "title": "fundedItem",
    "classes": [
      "Grant"
    ],
    "description": "Indicates something directly or indirectly funded or sponsored through a [[Grant]]. See also [[ownershipFundingInfo]].",
    "types": [
      "Organization",
      "CreativeWork",
      "Person",
      "Product",
      "Event",
      "BioChemEntity",
      "MedicalEntity"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "departureBusStop": {
    "title": "departureBusStop",
    "classes": [
      "BusTrip"
    ],
    "description": "The stop or station from which the bus departs.",
    "types": [
      "BusStation",
      "BusStop"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "resultComment": {
    "title": "resultComment",
    "classes": [
      "ReplyAction",
      "CommentAction"
    ],
    "description": "A sub property of result. The Comment created or sent as a result of this action.",
    "types": [
      "Comment"
    ],
    "subPropertyOf": [
      "result"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "mentions": {
    "title": "mentions",
    "classes": [
      "CreativeWork"
    ],
    "description": "Indicates that the CreativeWork contains a reference to, but is not necessarily about a concept.",
    "types": [
      "Thing"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "reservationStatus": {
    "title": "reservationStatus",
    "classes": [
      "Reservation"
    ],
    "description": "The current status of the reservation.",
    "types": [
      "ReservationStatusType"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "partOfSeason": {
    "title": "partOfSeason",
    "classes": [
      "Episode",
      "Clip"
    ],
    "description": "The season to which this episode belongs.",
    "types": [
      "CreativeWorkSeason"
    ],
    "subPropertyOf": [
      "isPartOf"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "verificationFactCheckingPolicy": {
    "title": "verificationFactCheckingPolicy",
    "classes": [
      "NewsMediaOrganization"
    ],
    "description": "Disclosure about verification and fact-checking processes for a [[NewsMediaOrganization]] or other fact-checking [[Organization]].",
    "types": [
      "CreativeWork",
      "URL"
    ],
    "subPropertyOf": [
      "publishingPrinciples"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "athlete": {
    "title": "athlete",
    "classes": [
      "SportsTeam"
    ],
    "description": "A person that acts as performing member of a sports team; a player as opposed to a coach.",
    "types": [
      "Person"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "biomechnicalClass": {
    "title": "biomechnicalClass",
    "classes": [
      "Joint"
    ],
    "description": "The biomechanical properties of the bone.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "comprisedOf": {
    "title": "comprisedOf",
    "classes": [
      "AnatomicalSystem"
    ],
    "description": "Specifying something physically contained by something else. Typically used here for the underlying anatomical structures, such as organs, that comprise the anatomical system.",
    "types": [
      "AnatomicalStructure",
      "AnatomicalSystem"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "cholesterolContent": {
    "title": "cholesterolContent",
    "classes": [
      "NutritionInformation"
    ],
    "description": "The number of milligrams of cholesterol.",
    "types": [
      "Mass"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "securityScreening": {
    "title": "securityScreening",
    "classes": [
      "FlightReservation"
    ],
    "description": "The type of security screening the passenger is subject to.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "actionOption": {
    "title": "actionOption",
    "classes": [
      "ChooseAction"
    ],
    "description": "A sub property of object. The options subject to this action.",
    "types": [
      "Text",
      "Thing"
    ],
    "subPropertyOf": [
      "object"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "exchangeRateSpread": {
    "title": "exchangeRateSpread",
    "classes": [
      "ExchangeRateSpecification"
    ],
    "description": "The difference between the price at which a broker or other intermediary buys and sells foreign currency.",
    "types": [
      "MonetaryAmount",
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "durationOfWarranty": {
    "title": "durationOfWarranty",
    "classes": [
      "WarrantyPromise"
    ],
    "description": "The duration of the warranty promise. Common unitCode values are ANN for year, MON for months, or DAY for days.",
    "types": [
      "QuantitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "studyLocation": {
    "title": "studyLocation",
    "classes": [
      "MedicalStudy"
    ],
    "description": "The location in which the study is taking/took place.",
    "types": [
      "AdministrativeArea"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "mainEntity": {
    "title": "mainEntity",
    "classes": [
      "CreativeWork"
    ],
    "description": "Indicates the primary entity described in some page or other CreativeWork.",
    "types": [
      "Thing"
    ],
    "subPropertyOf": [
      "about"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "hospitalAffiliation": {
    "title": "hospitalAffiliation",
    "classes": [
      "Physician"
    ],
    "description": "A hospital with which the physician or office is affiliated.",
    "types": [
      "Hospital"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "vatID": {
    "title": "vatID",
    "classes": [
      "Organization",
      "Person"
    ],
    "description": "The Value-added Tax ID of the organization or person.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "variableMeasured": {
    "title": "variableMeasured",
    "classes": [
      "Observation",
      "Dataset"
    ],
    "description": "The variableMeasured property can indicate (repeated as necessary) the  variables that are measured in some dataset, either described as text or as pairs of identifier and description using PropertyValue, or more explicitly as a [[StatisticalVariable]].",
    "types": [
      "Text",
      "PropertyValue",
      "Property",
      "StatisticalVariable"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "remainingAttendeeCapacity": {
    "title": "remainingAttendeeCapacity",
    "classes": [
      "Event"
    ],
    "description": "The number of attendee places for an event that remain unallocated.",
    "types": [
      "Integer"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "molecularWeight": {
    "title": "molecularWeight",
    "classes": [
      "MolecularEntity",
      "ChemicalSubstance"
    ],
    "description": "This is the molecular weight of the entity being described, not of the parent. Units should be included in the form '&lt;Number&gt; &lt;unit&gt;', for example '12 amu' or as '&lt;QuantitativeValue&gt;.",
    "types": [
      "QuantitativeValue",
      "Text",
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ]
  },
  "letterer": {
    "title": "letterer",
    "classes": [
      "ComicStory",
      "ComicIssue",
      "VisualArtwork"
    ],
    "description": "The individual who adds lettering, including speech balloons and sound effects, to artwork.",
    "types": [
      "Person"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "icaoCode": {
    "title": "icaoCode",
    "classes": [
      "Airport",
      "N29e2f1d08d124b9a866d1b60b132a0c8"
    ],
    "description": "ICAO identifier for an airport.",
    "types": [
      "Text",
      "XMLSchema#string"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "causeOf": {
    "title": "causeOf",
    "classes": [
      "MedicalCause"
    ],
    "description": "The condition, complication, symptom, sign, etc. caused.",
    "types": [
      "MedicalEntity"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "eligibilityToWorkRequirement": {
    "title": "eligibilityToWorkRequirement",
    "classes": [
      "JobPosting"
    ],
    "description": "The legal requirements such as citizenship, visa and other documentation required for an applicant to this job.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "cheatCode": {
    "title": "cheatCode",
    "classes": [
      "VideoGame",
      "VideoGameSeries"
    ],
    "description": "Cheat codes to the game.",
    "types": [
      "CreativeWork"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "availableService": {
    "title": "availableService",
    "classes": [
      "Hospital",
      "MedicalClinic",
      "Physician"
    ],
    "description": "A medical service available from this provider.",
    "types": [
      "MedicalTest",
      "MedicalTherapy",
      "MedicalProcedure"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "cvdNumTotBeds": {
    "title": "cvdNumTotBeds",
    "classes": [
      "CDCPMDRecord"
    ],
    "description": "numtotbeds - ALL HOSPITAL BEDS: Total number of all inpatient and outpatient beds, including all staffed, ICU, licensed, and overflow (surge) beds used for inpatients or outpatients.",
    "types": [
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "broadcastFrequency": {
    "title": "broadcastFrequency",
    "classes": [
      "BroadcastService",
      "BroadcastChannel"
    ],
    "description": "The frequency used for over-the-air broadcasts. Numeric values or simple ranges, e.g. 87-99. In addition a shortcut idiom is supported for frequencies of AM and FM radio channels, e.g. \"87 FM\".",
    "types": [
      "Text",
      "BroadcastFrequencySpecification"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "deliveryMethod": {
    "title": "deliveryMethod",
    "classes": [
      "TrackAction",
      "ReceiveAction",
      "OrderAction",
      "SendAction"
    ],
    "description": "A sub property of instrument. The method of delivery.",
    "types": [
      "DeliveryMethod"
    ],
    "subPropertyOf": [
      "instrument"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "sampleType": {
    "title": "sampleType",
    "classes": [
      "SoftwareSourceCode"
    ],
    "description": "What type of code sample: full (compile ready) solution, code snippet, inline code, scripts, template.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "departureStation": {
    "title": "departureStation",
    "classes": [
      "TrainTrip"
    ],
    "description": "The station from which the train departs.",
    "types": [
      "TrainStation"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "reportNumber": {
    "title": "reportNumber",
    "classes": [
      "Report"
    ],
    "description": "The number or other unique designator assigned to a Report by the publishing organization.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "accessibilitySummary": {
    "title": "accessibilitySummary",
    "classes": [
      "CreativeWork"
    ],
    "description": "A human-readable summary of specific accessibility features or deficiencies, consistent with the other accessibility metadata but expressing subtleties such as \"short descriptions are present but long descriptions will be needed for non-visual users\" or \"short descriptions are present and no long descriptions are needed\".",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "resultReview": {
    "title": "resultReview",
    "classes": [
      "ReviewAction"
    ],
    "description": "A sub property of result. The review that resulted in the performing of the action.",
    "types": [
      "Review"
    ],
    "subPropertyOf": [
      "result"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "targetName": {
    "title": "targetName",
    "classes": [
      "AlignmentObject"
    ],
    "description": "The name of a node in an established educational framework.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "isInvolvedInBiologicalProcess": {
    "title": "isInvolvedInBiologicalProcess",
    "classes": [
      "BioChemEntity"
    ],
    "description": "Biological process this BioChemEntity is involved in; please use PropertyValue if you want to include any evidence.",
    "types": [
      "DefinedTerm",
      "URL",
      "PropertyValue",
      "Thing"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "translator": {
    "title": "translator",
    "classes": [
      "Event",
      "CreativeWork",
      "Work",
      "N138c6686f318436988f4946760607ff9"
    ],
    "description": "Organization or person who adapts a creative work to different languages, regional differences and technical requirements of a target market, or that translates during some event.\nTranslator(s), if original not in English",
    "types": [
      "Person",
      "Organization",
      "N7486153f310546eaa1fe57c7dde2ebce"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia",
      "YAGO"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ]
  },
  "area": {
    "title": "area",
    "classes": [
      "BroadcastService",
      "PopulatedPlace"
    ],
    "description": "The area within which users can expect to reach the broadcast service.\nThe area of the thing in square meters.",
    "types": [
      "Place",
      "squareKilometre",
      "XMLSchema#double"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ]
  },
  "actionStatus": {
    "title": "actionStatus",
    "classes": [
      "Action"
    ],
    "description": "Indicates the current disposition of the Action.",
    "types": [
      "ActionStatusType"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "energyEfficiencyScaleMax": {
    "title": "energyEfficiencyScaleMax",
    "classes": [
      "EnergyConsumptionDetails"
    ],
    "description": "Specifies the most energy efficient class on the regulated EU energy consumption scale for the product category a product belongs to. For example, energy consumption for televisions placed on the market after January 1, 2020 is scaled from D to A+++.",
    "types": [
      "EUEnergyEfficiencyEnumeration"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "gracePeriod": {
    "title": "gracePeriod",
    "classes": [
      "LoanOrCredit"
    ],
    "description": "The period of time after any due date that the borrower has to fulfil its obligations before a default (failure to pay) is deemed to have occurred.",
    "types": [
      "Duration"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "benefitsSummaryUrl": {
    "title": "benefitsSummaryUrl",
    "classes": [
      "HealthInsurancePlan"
    ],
    "description": "The URL that goes directly to the summary of benefits and coverage for the specific standard plan or plan variation.",
    "types": [
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "includesAttraction": {
    "title": "includesAttraction",
    "classes": [
      "TouristDestination"
    ],
    "description": "Attraction located at destination.",
    "types": [
      "TouristAttraction"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "caption": {
    "title": "caption",
    "classes": [
      "ImageObject",
      "AudioObject",
      "VideoObject"
    ],
    "description": "The caption for this object. For downloadable machine formats (closed caption, subtitles etc.) use MediaObject and indicate the [[encodingFormat]].",
    "types": [
      "MediaObject",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "partOfEpisode": {
    "title": "partOfEpisode",
    "classes": [
      "Clip"
    ],
    "description": "The episode to which this clip belongs.",
    "types": [
      "Episode"
    ],
    "subPropertyOf": [
      "isPartOf"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "numberOfLoanPayments": {
    "title": "numberOfLoanPayments",
    "classes": [
      "RepaymentSpecification"
    ],
    "description": "The number of payments contractually required at origination to repay the loan. For monthly paying loans this is the number of months from the contractual first payment date to the maturity date.",
    "types": [
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "broadcaster": {
    "title": "broadcaster",
    "classes": [
      "BroadcastService"
    ],
    "description": "The organization owning or operating the broadcast service.",
    "types": [
      "Organization"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "brand": {
    "title": "brand",
    "classes": [
      "Person",
      "Product",
      "Service",
      "Organization",
      "WrestlingEvent",
      "N6d73f381163a4060b22d020efad11a98"
    ],
    "description": "The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.",
    "types": [
      "Organization",
      "Brand",
      "TelevisionShow",
      "N60a015fb767e42c38ea5b340dc6b8af7"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia",
      "YAGO"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ]
  },
  "geoCrosses": {
    "title": "geoCrosses",
    "classes": [
      "GeospatialGeometry",
      "Place"
    ],
    "description": "Represents a relationship between two geometries (or the places they represent), relating a geometry to another that crosses it: \"a crosses b: they have some but not all interior points in common, and the dimension of the intersection is less than that of at least one of them\". As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).",
    "types": [
      "Place",
      "GeospatialGeometry"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "dateline": {
    "title": "dateline",
    "classes": [
      "NewsArticle"
    ],
    "description": "A [dateline](https://en.wikipedia.org/wiki/Dateline) is a brief piece of text included in news articles that describes where and when the story was written or filed though the date is often omitted. Sometimes only a placename is provided.\n\nStructured representations of dateline-related information can also be expressed more explicitly using [[locationCreated]] (which represents where a work was created, e.g. where a news report was written).  For location depicted or described in the content, use [[contentLocation]].\n\nDateline summaries are oriented more towards human readers than towards automated processing, and can vary substantially. Some examples: \"BEIRUT, Lebanon, June 2.\", \"Paris, France\", \"December 19, 2017 11:43AM Reporting from Washington\", \"Beijing/Moscow\", \"QUEZON CITY, Philippines\".\n      ",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "isAvailableGenerically": {
    "title": "isAvailableGenerically",
    "classes": [
      "Drug"
    ],
    "description": "True if the drug is available in a generic form (regardless of name).",
    "types": [
      "Boolean"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "availableStrength": {
    "title": "availableStrength",
    "classes": [
      "Drug"
    ],
    "description": "An available dosage strength for the drug.",
    "types": [
      "DrugStrength"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "releaseNotes": {
    "title": "releaseNotes",
    "classes": [
      "SoftwareApplication"
    ],
    "description": "Description of what changed in this version.",
    "types": [
      "URL",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "width": {
    "title": "width",
    "classes": [
      "Product",
      "VisualArtwork",
      "MediaObject",
      "OfferShippingDetails",
      "Escalator",
      "ConveyorSystem",
      "MeanOfTransportation",
      "Weapon",
      "On-SiteTransportation",
      "Engine",
      "MovingWalkway",
      "Ncb7c9420ffca4e5981989bd3efbb2d1a"
    ],
    "description": "The width of the item.",
    "types": [
      "Distance",
      "QuantitativeValue",
      "millimetre",
      "XMLSchema#double"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia",
      "YAGO"
    ]
  },
  "pageStart": {
    "title": "pageStart",
    "classes": [
      "Article",
      "PublicationVolume",
      "PublicationIssue",
      "Chapter"
    ],
    "description": "The page on which the work starts; for example \"135\" or \"xiii\".",
    "types": [
      "Integer",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "winner": {
    "title": "winner",
    "classes": [
      "LoseAction"
    ],
    "description": "A sub property of participant. The winner of the action.",
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "participant"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "transmissionMethod": {
    "title": "transmissionMethod",
    "classes": [
      "InfectiousDisease"
    ],
    "description": "How the disease spreads, either as a route or vector, for example 'direct contact', 'Aedes aegypti', etc.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "recordLabel": {
    "title": "recordLabel",
    "classes": [
      "MusicRelease"
    ],
    "description": "The label that issued the release.",
    "types": [
      "Organization"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "positiveNotes": {
    "title": "positiveNotes",
    "classes": [
      "Review",
      "Product"
    ],
    "description": "Provides positive considerations regarding something, for example product highlights or (alongside [[negativeNotes]]) pro/con lists for reviews.\n\nIn the case of a [[Review]], the property describes the [[itemReviewed]] from the perspective of the review; in the case of a [[Product]], the product itself is being described.\n\nThe property values can be expressed either as unstructured text (repeated as necessary), or if ordered, as a list (in which case the most positive is at the beginning of the list).",
    "types": [
      "Text",
      "ItemList",
      "WebContent",
      "ListItem"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "mobileUrl": {
    "title": "mobileUrl",
    "classes": [
      "Product",
      "Offer"
    ],
    "description": "The [[mobileUrl]] property is provided for specific situations in which data consumers need to determine whether one of several provided URLs is a dedicated 'mobile site'.\n\nTo discourage over-use, and reflecting intial usecases, the property is expected only on [[Product]] and [[Offer]], rather than [[Thing]]. The general trend in web technology is towards [responsive design](https://en.wikipedia.org/wiki/Responsive_web_design) in which content can be flexibly adapted to a wide range of browsing environments. Pages and sites referenced with the long-established [[url]] property should ideally also be usable on a wide variety of devices, including mobile phones. In most cases, it would be pointless and counter productive to attempt to update all [[url]] markup to use [[mobileUrl]] for more mobile-oriented pages. The property is intended for the case when items (primarily [[Product]] and [[Offer]]) have extra URLs hosted on an additional \"mobile site\" alongside the main one. It should not be taken as an endorsement of this publication style.\n    ",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "releasedEvent": {
    "title": "releasedEvent",
    "classes": [
      "CreativeWork"
    ],
    "description": "The place and time the release was issued, expressed as a PublicationEvent.",
    "types": [
      "PublicationEvent"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "educationalFramework": {
    "title": "educationalFramework",
    "classes": [
      "AlignmentObject"
    ],
    "description": "The framework to which the resource being described is aligned.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "educationalLevel": {
    "title": "educationalLevel",
    "classes": [
      "EducationEvent",
      "CreativeWork",
      "EducationalOccupationalCredential",
      "LearningResource"
    ],
    "description": "The level in terms of progression through an educational or training context. Examples of educational levels include 'beginner', 'intermediate' or 'advanced', and formal sets of level indicators.",
    "types": [
      "URL",
      "Text",
      "DefinedTerm"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "vendor": {
    "title": "vendor",
    "classes": [
      "BuyAction"
    ],
    "description": "'vendor' is an earlier term for 'seller'.",
    "types": [
      "Organization",
      "Person"
    ],
    "subPropertyOf": [
      "participant"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "hasVariant": {
    "title": "hasVariant",
    "classes": [
      "ProductGroup"
    ],
    "description": "Indicates a [[Product]] that is a member of this [[ProductGroup]] (or [[ProductModel]]).",
    "types": [
      "Product"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "elevation": {
    "title": "elevation",
    "classes": [
      "GeoCoordinates",
      "GeoShape",
      "Place"
    ],
    "description": "The elevation of a location ([WGS 84](https://en.wikipedia.org/wiki/World_Geodetic_System)). Values may be of the form 'NUMBER UNIT\\_OF\\_MEASUREMENT' (e.g., '1,000 m', '3,200 ft') while numbers alone should be assumed to be a value in meters.\naverage elevation above the sea level\nThe elevation of a location (<a href=\"https://en.wikipedia.org/wiki/World_Geodetic_System\">WGS 84</a>). Values may be of the form 'NUMBER UNIT<em>OF</em>MEASUREMENT' (e.g., '1,000 m', '3,200 ft') while numbers alone should be assumed to be a value in meters.",
    "types": [
      "Number",
      "Text",
      "XMLSchema#double",
      "QuantitativeValue"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia",
      "YAGO"
    ]
  },
  "observationPeriod": {
    "title": "observationPeriod",
    "classes": [
      "Observation"
    ],
    "description": "The length of time an Observation took place over. The format follows `P[0-9]*[Y|M|D|h|m|s]`. For example, P1Y is Period 1 Year, P3M is Period 3 Months, P3h is Period 3 hours.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "usedToDiagnose": {
    "title": "usedToDiagnose",
    "classes": [
      "MedicalTest"
    ],
    "description": "A condition the test is used to diagnose.",
    "types": [
      "MedicalCondition"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "processorRequirements": {
    "title": "processorRequirements",
    "classes": [
      "SoftwareApplication"
    ],
    "description": "Processor architecture required to run the application (e.g. IA64).",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "arrivalTerminal": {
    "title": "arrivalTerminal",
    "classes": [
      "Flight"
    ],
    "description": "Identifier of the flight's arrival terminal.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "physicalRequirement": {
    "title": "physicalRequirement",
    "classes": [
      "JobPosting"
    ],
    "description": "A description of the types of physical activity associated with the job. Defined terms such as those in O*net may be used, but note that there is no way to specify the level of ability as well as its nature when using a defined term.",
    "types": [
      "URL",
      "Text",
      "DefinedTerm"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "featureList": {
    "title": "featureList",
    "classes": [
      "SoftwareApplication"
    ],
    "description": "Features or modules provided by this application (and possibly required by other applications).",
    "types": [
      "URL",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "potentialUse": {
    "title": "potentialUse",
    "classes": [
      "ChemicalSubstance",
      "MolecularEntity"
    ],
    "description": "Intended use of the BioChemEntity by humans.",
    "types": [
      "DefinedTerm"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "termDuration": {
    "title": "termDuration",
    "classes": [
      "EducationalOccupationalProgram"
    ],
    "description": "The amount of time in a term as defined by the institution. A term is a length of time where students take one or more classes. Semesters and quarters are common units for term.",
    "types": [
      "Duration"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "carbohydrateContent": {
    "title": "carbohydrateContent",
    "classes": [
      "NutritionInformation"
    ],
    "description": "The number of grams of carbohydrates.",
    "types": [
      "Mass"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "deliveryStatus": {
    "title": "deliveryStatus",
    "classes": [
      "ParcelDelivery"
    ],
    "description": "New entry added as the package passes through each leg of its journey (from shipment to final delivery).",
    "types": [
      "DeliveryEvent"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "appliesToPaymentMethod": {
    "title": "appliesToPaymentMethod",
    "classes": [
      "PaymentChargeSpecification"
    ],
    "description": "The payment method(s) to which the payment charge specification applies.",
    "types": [
      "PaymentMethod"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "paymentMethodType": {
    "title": "paymentMethodType",
    "classes": [
      "PaymentMethod"
    ],
    "description": "The type of a payment method.",
    "types": [
      "PaymentMethodType"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "nutrition": {
    "title": "nutrition",
    "classes": [
      "MenuItem",
      "Recipe"
    ],
    "description": "Nutrition information about the recipe or menu item.",
    "types": [
      "NutritionInformation"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "ratingCount": {
    "title": "ratingCount",
    "classes": [
      "AggregateRating"
    ],
    "description": "The count of total number of ratings.",
    "types": [
      "Integer"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "hasCategoryCode": {
    "title": "hasCategoryCode",
    "classes": [
      "CategoryCodeSet"
    ],
    "description": "A Category code contained in this code set.",
    "types": [
      "CategoryCode"
    ],
    "subPropertyOf": [
      "hasDefinedTerm"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "courseCode": {
    "title": "courseCode",
    "classes": [
      "Course"
    ],
    "description": "The identifier for the [[Course]] used by the course [[provider]] (e.g. CS101 or 6.001).",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "agentInteractionStatistic": {
    "title": "agentInteractionStatistic",
    "classes": [
      "Organization",
      "Person"
    ],
    "description": "The number of completed interactions for this entity, in a particular role (the 'agent'), in a particular action (indicated in the statistic), and in a particular context (i.e. interactionService).",
    "types": [
      "InteractionCounter"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "usNPI": {
    "title": "usNPI",
    "classes": [
      "Physician"
    ],
    "description": "A <a href=\"https://en.wikipedia.org/wiki/National_Provider_Identifier\">National Provider Identifier</a> (NPI) \n    is a unique 10-digit identification number issued to health care providers in the United States by the Centers for Medicare and Medicaid Services.",
    "types": [
      "Text"
    ],
    "subPropertyOf": [
      "identifier"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "shippingLabel": {
    "title": "shippingLabel",
    "classes": [
      "ShippingRateSettings",
      "OfferShippingDetails"
    ],
    "description": "Label to match an [[OfferShippingDetails]] with a [[ShippingRateSettings]] (within the context of a [[shippingSettingsLink]] cross-reference).",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "blogPost": {
    "title": "blogPost",
    "classes": [
      "Blog"
    ],
    "description": "A posting that is part of this blog.",
    "types": [
      "BlogPosting"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "lyrics": {
    "title": "lyrics",
    "classes": [
      "MusicComposition",
      "MusicalWork"
    ],
    "description": "The words in the song.\nCreator of the text of a MusicalWork, eg Musical, Opera or Song",
    "types": [
      "CreativeWork",
      "Person"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ]
  },
  "blogPosts": {
    "title": "blogPosts",
    "classes": [
      "Blog"
    ],
    "description": "Indicates a post that is part of a [[Blog]]. Note that historically, what we term a \"Blog\" was once known as a \"weblog\", and that what we term a \"BlogPosting\" is now often colloquially referred to as a \"blog\".",
    "types": [
      "BlogPosting"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "timeRequired": {
    "title": "timeRequired",
    "classes": [
      "CreativeWork"
    ],
    "description": "Approximate or typical time it usually takes to work with or through the content of this work for the typical or target audience.",
    "types": [
      "Duration"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "targetUrl": {
    "title": "targetUrl",
    "classes": [
      "AlignmentObject"
    ],
    "description": "The URL of a node in an established educational framework.",
    "types": [
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "loanPaymentFrequency": {
    "title": "loanPaymentFrequency",
    "classes": [
      "RepaymentSpecification"
    ],
    "description": "Frequency of payments due, i.e. number of months between payments. This is defined as a frequency, i.e. the reciprocal of a period of time.",
    "types": [
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "busName": {
    "title": "busName",
    "classes": [
      "BusTrip"
    ],
    "description": "The name of the bus (e.g. Bolt Express).",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "inStoreReturnsOffered": {
    "title": "inStoreReturnsOffered",
    "classes": [
      "MerchantReturnPolicy"
    ],
    "description": "Are in-store returns offered? (For more advanced return methods use the [[returnMethod]] property.)",
    "types": [
      "Boolean"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "benefits": {
    "title": "benefits",
    "classes": [
      "JobPosting"
    ],
    "description": "Description of benefits associated with the job.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "financialAidEligible": {
    "title": "financialAidEligible",
    "classes": [
      "Course",
      "EducationalOccupationalProgram"
    ],
    "description": "A financial aid type or program which students may use to pay for tuition or fees associated with the program.",
    "types": [
      "DefinedTerm",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "sha256": {
    "title": "sha256",
    "classes": [
      "MediaObject"
    ],
    "description": "The [SHA-2](https://en.wikipedia.org/wiki/SHA-2) SHA256 hash of the content of the item. For example, a zero-length input has value 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855'.",
    "types": [
      "Text"
    ],
    "subPropertyOf": [
      "description"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "valueAddedTaxIncluded": {
    "title": "valueAddedTaxIncluded",
    "classes": [
      "PriceSpecification"
    ],
    "description": "Specifies whether the applicable value-added tax (VAT) is included in the price specification or not.",
    "types": [
      "Boolean"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "relatedCondition": {
    "title": "relatedCondition",
    "classes": [
      "AnatomicalSystem",
      "AnatomicalStructure",
      "SuperficialAnatomy"
    ],
    "description": "A medical condition associated with this anatomy.",
    "types": [
      "MedicalCondition"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "latitude": {
    "title": "latitude",
    "classes": [
      "GeoCoordinates",
      "Place"
    ],
    "description": "The latitude of a location. For example ```37.42242``` ([WGS 84](https://en.wikipedia.org/wiki/World_Geodetic_System)).\nThe latitude of a location. For example <code>37.42242</code> (<a href=\"https://en.wikipedia.org/wiki/World_Geodetic_System\">WGS 84</a>).",
    "types": [
      "Text",
      "Number",
      "XMLSchema#double"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "hiringOrganization": {
    "title": "hiringOrganization",
    "classes": [
      "JobPosting"
    ],
    "description": "Organization or Person offering the job position.",
    "types": [
      "Organization",
      "Person"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "videoFrameSize": {
    "title": "videoFrameSize",
    "classes": [
      "VideoObject"
    ],
    "description": "The frame size of the video.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "title": {
    "title": "title",
    "classes": [
      "JobPosting"
    ],
    "description": "The title of the job.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "manufacturer": {
    "title": "manufacturer",
    "classes": [
      "Product"
    ],
    "description": "The manufacturer of the product.",
    "types": [
      "Organization"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "issueNumber": {
    "title": "issueNumber",
    "classes": [
      "PublicationIssue"
    ],
    "description": "Identifies the issue of publication; for example, \"iii\" or \"2\".",
    "types": [
      "Integer",
      "Text",
      "XMLSchema#string"
    ],
    "subPropertyOf": [
      "position"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "bioChemInteraction": {
    "title": "bioChemInteraction",
    "classes": [
      "BioChemEntity"
    ],
    "description": "A BioChemEntity that is known to interact with this item.",
    "types": [
      "BioChemEntity"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "offeredBy": {
    "title": "offeredBy",
    "classes": [
      "Offer"
    ],
    "description": "A pointer to the organization or person making the offer.",
    "types": [
      "Organization",
      "Person"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "numberOfAvailableAccommodationUnits": {
    "title": "numberOfAvailableAccommodationUnits",
    "classes": [
      "ApartmentComplex",
      "FloorPlan"
    ],
    "description": "Indicates the number of available accommodation units in an [[ApartmentComplex]], or the number of accommodation units for a specific [[FloorPlan]] (within its specific [[ApartmentComplex]]). See also [[numberOfAccommodationUnits]].",
    "types": [
      "QuantitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "estimatedFlightDuration": {
    "title": "estimatedFlightDuration",
    "classes": [
      "Flight"
    ],
    "description": "The estimated time the flight will take.",
    "types": [
      "Text",
      "Duration"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "providesBroadcastService": {
    "title": "providesBroadcastService",
    "classes": [
      "BroadcastChannel"
    ],
    "description": "The BroadcastService offered on this channel.",
    "types": [
      "BroadcastService"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "programmingModel": {
    "title": "programmingModel",
    "classes": [
      "APIReference"
    ],
    "description": "Indicates whether API is managed or unmanaged.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "makesOffer": {
    "title": "makesOffer",
    "classes": [
      "Organization",
      "Person"
    ],
    "description": "A pointer to products or services offered by the organization or person.",
    "types": [
      "Offer"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "isLocatedInSubcellularLocation": {
    "title": "isLocatedInSubcellularLocation",
    "classes": [
      "BioChemEntity"
    ],
    "description": "Subcellular location where this BioChemEntity is located; please use PropertyValue if you want to include any evidence.",
    "types": [
      "PropertyValue",
      "DefinedTerm",
      "URL",
      "Thing"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "gameTip": {
    "title": "gameTip",
    "classes": [
      "VideoGame"
    ],
    "description": "Links to tips, tactics, etc.",
    "types": [
      "CreativeWork"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "procedureType": {
    "title": "procedureType",
    "classes": [
      "MedicalProcedure"
    ],
    "description": "The type of procedure, for example Surgical, Noninvasive, or Percutaneous.",
    "types": [
      "MedicalProcedureType"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "earlyPrepaymentPenalty": {
    "title": "earlyPrepaymentPenalty",
    "classes": [
      "RepaymentSpecification"
    ],
    "description": "The amount to be paid as a penalty in the event of early payment of the loan.",
    "types": [
      "MonetaryAmount"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "browserRequirements": {
    "title": "browserRequirements",
    "classes": [
      "WebApplication"
    ],
    "description": "Specifies browser requirements in human-readable text. For example, 'requires HTML5 support'.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "prescribingInfo": {
    "title": "prescribingInfo",
    "classes": [
      "Drug"
    ],
    "description": "Link to prescribing information for the drug.",
    "types": [
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "isicV4": {
    "title": "isicV4",
    "classes": [
      "Organization",
      "Person",
      "Place"
    ],
    "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "volumeNumber": {
    "title": "volumeNumber",
    "classes": [
      "PublicationVolume"
    ],
    "description": "Identifies the volume of publication or multi-part work; for example, \"iii\" or \"2\".",
    "types": [
      "Integer",
      "Text",
      "XMLSchema#string"
    ],
    "subPropertyOf": [
      "position"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "iso6523Code": {
    "title": "iso6523Code",
    "classes": [
      "Organization"
    ],
    "description": "An organization identifier as defined in [ISO 6523(-1)](https://en.wikipedia.org/wiki/ISO/IEC_6523). The identifier should be in the `XXXX:YYYYYY:ZZZ` or `XXXX:YYYYYY`format. Where `XXXX` is a 4 digit _ICD_ (International Code Designator), `YYYYYY` is an _OID_ (Organization Identifier) with all formatting characters (dots, dashes, spaces) removed with a maximal length of 35 characters, and `ZZZ` is an optional OPI (Organization Part Identifier) with a maximum length of 35 characters. The various components (ICD, OID, OPI) are joined with a colon character (ASCII `0x3a`). Note that many existing organization identifiers defined as attributes like [leiCode](https://schema.org/leiCode) (`0199`), [duns](https://schema.org/duns) (`0060`) or [GLN](https://schema.org/globalLocationNumber) (`0088`) can be expressed using ISO-6523. If possible, ISO-6523 codes should be preferred to populating [vatID](https://schema.org/vatID) or [taxID](https://schema.org/taxID), as ISO identifiers are less ambiguous.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "priceType": {
    "title": "priceType",
    "classes": [
      "UnitPriceSpecification",
      "CompoundPriceSpecification"
    ],
    "description": "Defines the type of a price specified for an offered product, for example a list price, a (temporary) sale price or a manufacturer suggested retail price. If multiple prices are specified for an offer the [[priceType]] property can be used to identify the type of each such specified price. The value of priceType can be specified as a value from enumeration PriceTypeEnumeration or as a free form text string for price types that are not already predefined in PriceTypeEnumeration.",
    "types": [
      "PriceTypeEnumeration",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "rangeIncludes": {
    "title": "rangeIncludes",
    "classes": [
      "Property"
    ],
    "description": "Relates a property to a class that constitutes (one of) the expected type(s) for values of the property.",
    "types": [
      "Class"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "albums": {
    "title": "albums",
    "classes": [
      "MusicGroup"
    ],
    "description": "A collection of music albums.",
    "types": [
      "MusicAlbum"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "commentCount": {
    "title": "commentCount",
    "classes": [
      "CreativeWork"
    ],
    "description": "The number of comments this CreativeWork (e.g. Article, Question or Answer) has received. This is most applicable to works published in Web sites with commenting system; additional comments may exist elsewhere.",
    "types": [
      "Integer"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "flightNumber": {
    "title": "flightNumber",
    "classes": [
      "Flight"
    ],
    "description": "The unique identifier for a flight including the airline IATA code. For example, if describing United flight 110, where the IATA code for United is 'UA', the flightNumber is 'UA110'.",
    "types": [
      "Text"
    ],
    "subPropertyOf": [
      "identifier"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "recordedIn": {
    "title": "recordedIn",
    "classes": [
      "Event",
      "MusicalWork"
    ],
    "description": "The CreativeWork that captured all or part of this Event.",
    "types": [
      "CreativeWork",
      "PopulatedPlace"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ]
  },
  "email": {
    "title": "email",
    "classes": [
      "ContactPoint",
      "Organization",
      "Person"
    ],
    "description": "Email address.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "issuedThrough": {
    "title": "issuedThrough",
    "classes": [
      "Permit"
    ],
    "description": "The service through which the permit was granted.",
    "types": [
      "Service"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "sourcedFrom": {
    "title": "sourcedFrom",
    "classes": [
      "Nerve"
    ],
    "description": "The neurological pathway that originates the neurons.",
    "types": [
      "BrainStructure"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "postOfficeBoxNumber": {
    "title": "postOfficeBoxNumber",
    "classes": [
      "PostalAddress"
    ],
    "description": "The post office box number for PO box addresses.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "schoolClosuresInfo": {
    "title": "schoolClosuresInfo",
    "classes": [
      "SpecialAnnouncement"
    ],
    "description": "Information about school closures.",
    "types": [
      "URL",
      "WebContent"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "itemListOrder": {
    "title": "itemListOrder",
    "classes": [
      "ItemList"
    ],
    "description": "Type of ordering (e.g. Ascending, Descending, Unordered).",
    "types": [
      "Text",
      "ItemListOrderType"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "salaryCurrency": {
    "title": "salaryCurrency",
    "classes": [
      "EmployeeRole",
      "JobPosting"
    ],
    "description": "The currency (coded using [ISO 4217](http://en.wikipedia.org/wiki/ISO_4217)) used for the main salary information in this job posting or for this employee.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "runsTo": {
    "title": "runsTo",
    "classes": [
      "LymphaticVessel"
    ],
    "description": "The vasculature the lymphatic structure runs, or efferents, to.",
    "types": [
      "Vessel"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "digitalSourceType": {
    "title": "digitalSourceType",
    "classes": [
      "CreativeWork"
    ],
    "description": "Indicates an IPTCDigitalSourceEnumeration code indicating the nature of the digital source(s) for some [[CreativeWork]].",
    "types": [
      "IPTCDigitalSourceEnumeration"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "discountCurrency": {
    "title": "discountCurrency",
    "classes": [
      "Order"
    ],
    "description": "The currency of the discount.\\n\\nUse standard formats: [ISO 4217 currency format](http://en.wikipedia.org/wiki/ISO_4217), e.g. \"USD\"; [Ticker symbol](https://en.wikipedia.org/wiki/List_of_cryptocurrencies) for cryptocurrencies, e.g. \"BTC\"; well known names for [Local Exchange Trading Systems](https://en.wikipedia.org/wiki/Local_exchange_trading_system) (LETS) and other currency types, e.g. \"Ithaca HOUR\".",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "alternativeHeadline": {
    "title": "alternativeHeadline",
    "classes": [
      "CreativeWork"
    ],
    "description": "A secondary title of the CreativeWork.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "industry": {
    "title": "industry",
    "classes": [
      "JobPosting",
      "Company"
    ],
    "description": "The industry associated with the job position.",
    "types": [
      "Text",
      "DefinedTerm"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ],
    "subPropertyOf": [
      "DUL.owl#isClassifiedBy"
    ]
  },
  "servingSize": {
    "title": "servingSize",
    "classes": [
      "NutritionInformation",
      "Food"
    ],
    "description": "The serving size, in terms of the number of volume or mass.\nDefault serving size (eg \"100 g\" for the standard 100 g serving size). approximateCalories apply to this serving size",
    "types": [
      "Text",
      "XMLSchema#double"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ]
  },
  "contraindication": {
    "title": "contraindication",
    "classes": [
      "MedicalDevice",
      "MedicalTherapy"
    ],
    "description": "A contraindication for this therapy.",
    "types": [
      "MedicalContraindication",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "minValue": {
    "title": "minValue",
    "classes": [
      "QuantitativeValue",
      "PropertyValue",
      "PropertyValueSpecification",
      "MonetaryAmount"
    ],
    "description": "The lower value of some characteristic or property.",
    "types": [
      "Number",
      "XMLSchema#decimal"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "isUnlabelledFallback": {
    "title": "isUnlabelledFallback",
    "classes": [
      "DeliveryTimeSettings",
      "ShippingRateSettings"
    ],
    "description": "This can be marked 'true' to indicate that some published [[DeliveryTimeSettings]] or [[ShippingRateSettings]] are intended to apply to all [[OfferShippingDetails]] published by the same merchant, when referenced by a [[shippingSettingsLink]] in those settings. It is not meaningful to use a 'true' value for this property alongside a transitTimeLabel (for [[DeliveryTimeSettings]]) or shippingLabel (for [[ShippingRateSettings]]), since this property is for use with unlabelled settings.",
    "types": [
      "Boolean"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "creativeWorkStatus": {
    "title": "creativeWorkStatus",
    "classes": [
      "CreativeWork"
    ],
    "description": "The status of a creative work in terms of its stage in a lifecycle. Example terms include Incomplete, Draft, Published, Obsolete. Some organizations define a set of terms for the stages of their publication lifecycle.",
    "types": [
      "Text",
      "DefinedTerm"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "requiredGender": {
    "title": "requiredGender",
    "classes": [
      "PeopleAudience"
    ],
    "description": "Audiences defined by a person's gender.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "attendee": {
    "title": "attendee",
    "classes": [
      "Event"
    ],
    "description": "A person or organization attending the event.",
    "types": [
      "Organization",
      "Person"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "eligibleCustomerType": {
    "title": "eligibleCustomerType",
    "classes": [
      "Demand",
      "Offer"
    ],
    "description": "The type(s) of customers for which the given offer is valid.",
    "types": [
      "BusinessEntityType"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "primaryImageOfPage": {
    "title": "primaryImageOfPage",
    "classes": [
      "WebPage"
    ],
    "description": "Indicates the main image on the page.",
    "types": [
      "ImageObject"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "issuedBy": {
    "title": "issuedBy",
    "classes": [
      "Permit",
      "Ticket",
      "Certification"
    ],
    "description": "The organization issuing the item, for example a [[Permit]], [[Ticket]], or [[Certification]].",
    "types": [
      "Organization"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "childMaxAge": {
    "title": "childMaxAge",
    "classes": [
      "ParentAudience"
    ],
    "description": "Maximal age of the child.",
    "types": [
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "broker": {
    "title": "broker",
    "classes": [
      "Service",
      "Reservation",
      "Order",
      "Invoice"
    ],
    "description": "An entity that arranges for an exchange between a buyer and a seller.  In most cases a broker never acquires or releases ownership of a product or service involved in an exchange.  If it is not clear whether an entity is a broker, seller, or buyer, the latter two terms are preferred.",
    "types": [
      "Person",
      "Organization"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "geoTouches": {
    "title": "geoTouches",
    "classes": [
      "GeospatialGeometry",
      "Place"
    ],
    "description": "Represents spatial relations in which two geometries (or the places they represent) touch: \"they have at least one boundary point in common, but no interior points.\" (A symmetric relationship, as defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).)",
    "types": [
      "GeospatialGeometry",
      "Place"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "layoutImage": {
    "title": "layoutImage",
    "classes": [
      "FloorPlan"
    ],
    "description": "A schematic image showing the floorplan layout.",
    "types": [
      "ImageObject",
      "URL"
    ],
    "subPropertyOf": [
      "image"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "serviceAudience": {
    "title": "serviceAudience",
    "classes": [
      "Service"
    ],
    "description": "The audience eligible for this service.",
    "types": [
      "Audience"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "infectiousAgent": {
    "title": "infectiousAgent",
    "classes": [
      "InfectiousDisease"
    ],
    "description": "The actual infectious agent, such as a specific bacterium.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "suggestedGender": {
    "title": "suggestedGender",
    "classes": [
      "PeopleAudience",
      "SizeSpecification"
    ],
    "description": "The suggested gender of the intended person or audience, for example \"male\", \"female\", or \"unisex\".",
    "types": [
      "GenderType",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "locationCreated": {
    "title": "locationCreated",
    "classes": [
      "CreativeWork"
    ],
    "description": "The location where the CreativeWork was created, which may not be the same as the location depicted in the CreativeWork.",
    "types": [
      "Place"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "founders": {
    "title": "founders",
    "classes": [
      "Organization"
    ],
    "description": "A person who founded this organization.",
    "types": [
      "Person"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "typeOfBed": {
    "title": "typeOfBed",
    "classes": [
      "BedDetails"
    ],
    "description": "The type of bed to which the BedDetail refers, i.e. the type of bed available in the quantity indicated by quantity.",
    "types": [
      "Text",
      "BedType"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "serviceUrl": {
    "title": "serviceUrl",
    "classes": [
      "ServiceChannel"
    ],
    "description": "The website to access the service.",
    "types": [
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "median": {
    "title": "median",
    "classes": [
      "QuantitativeValueDistribution"
    ],
    "description": "The median value.",
    "types": [
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "departureTerminal": {
    "title": "departureTerminal",
    "classes": [
      "Flight"
    ],
    "description": "Identifier of the flight's departure terminal.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "cvdNumVent": {
    "title": "cvdNumVent",
    "classes": [
      "CDCPMDRecord"
    ],
    "description": "numvent - MECHANICAL VENTILATORS: Total number of ventilators available.",
    "types": [
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "containedInPlace": {
    "title": "containedInPlace",
    "classes": [
      "Place"
    ],
    "description": "The basic containment relation between a place and one that contains it.",
    "types": [
      "Place"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "significantLink": {
    "title": "significantLink",
    "classes": [
      "WebPage"
    ],
    "description": "One of the more significant URLs on the page. Typically, these are the non-navigation links that are clicked on the most.",
    "types": [
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "practicesAt": {
    "title": "practicesAt",
    "classes": [
      "IndividualPhysician"
    ],
    "description": "A [[MedicalOrganization]] where the [[IndividualPhysician]] practices.",
    "types": [
      "MedicalOrganization"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "availableChannel": {
    "title": "availableChannel",
    "classes": [
      "Service"
    ],
    "description": "A means of accessing the service (e.g. a phone bank, a web site, a location, etc.).",
    "types": [
      "ServiceChannel"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "maximumPhysicalAttendeeCapacity": {
    "title": "maximumPhysicalAttendeeCapacity",
    "classes": [
      "Event"
    ],
    "description": "The maximum physical attendee capacity of an [[Event]] whose [[eventAttendanceMode]] is [[OfflineEventAttendanceMode]] (or the offline aspects, in the case of a [[MixedEventAttendanceMode]]). ",
    "types": [
      "Integer"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "supersededBy": {
    "title": "supersededBy",
    "classes": [
      "Class",
      "Enumeration",
      "Property"
    ],
    "description": "Relates a term (i.e. a property, class or enumeration) to one that supersedes it.",
    "types": [
      "Class",
      "Enumeration",
      "Property"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "publicAccess": {
    "title": "publicAccess",
    "classes": [
      "Place"
    ],
    "description": "A flag to signal that the [[Place]] is open to public visitors.  If this property is omitted there is no assumed default boolean value.",
    "types": [
      "Boolean"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "programMembershipUsed": {
    "title": "programMembershipUsed",
    "classes": [
      "Reservation"
    ],
    "description": "Any membership in a frequent flyer, hotel loyalty program, etc. being applied to the reservation.",
    "types": [
      "ProgramMembership"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "previousItem": {
    "title": "previousItem",
    "classes": [
      "ListItem"
    ],
    "description": "A link to the ListItem that precedes the current one.",
    "types": [
      "ListItem"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "applicationSubCategory": {
    "title": "applicationSubCategory",
    "classes": [
      "SoftwareApplication"
    ],
    "description": "Subcategory of the application, e.g. 'Arcade Game'.",
    "types": [
      "URL",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "openingHoursSpecification": {
    "title": "openingHoursSpecification",
    "classes": [
      "Place"
    ],
    "description": "The opening hours of a certain place.",
    "types": [
      "OpeningHoursSpecification"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "nonEqual": {
    "title": "nonEqual",
    "classes": [
      "QualitativeValue"
    ],
    "description": "This ordering relation for qualitative values indicates that the subject is not equal to the object.",
    "types": [
      "QualitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "utterances": {
    "title": "utterances",
    "classes": [
      "HyperTocEntry"
    ],
    "description": "Text of an utterances (spoken words, lyrics etc.) that occurs at a certain section of a media object, represented as a [[HyperTocEntry]].",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "paymentAccepted": {
    "title": "paymentAccepted",
    "classes": [
      "LocalBusiness"
    ],
    "description": "Cash, Credit Card, Cryptocurrency, Local Exchange Tradings System, etc.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "totalJobOpenings": {
    "title": "totalJobOpenings",
    "classes": [
      "JobPosting"
    ],
    "description": "The number of positions open for this job posting. Use a positive integer. Do not use if the number of positions is unclear or not known.",
    "types": [
      "Integer"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "line": {
    "title": "line",
    "classes": [
      "GeoShape"
    ],
    "description": "A line is a point-to-point path consisting of two or more points. A line is expressed as a series of two or more point objects separated by space.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "legislationLegalValue": {
    "title": "legislationLegalValue",
    "classes": [
      "LegislationObject"
    ],
    "description": "The legal value of this legislation file. The same legislation can be written in multiple files with different legal values. Typically a digitally signed PDF have a \"stronger\" legal value than the HTML file of the same act.",
    "types": [
      "LegalValueLevel"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "reviewCount": {
    "title": "reviewCount",
    "classes": [
      "AggregateRating"
    ],
    "description": "The count of total number of reviews.",
    "types": [
      "Integer"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "courseMode": {
    "title": "courseMode",
    "classes": [
      "CourseInstance"
    ],
    "description": "The medium or means of delivery of the course instance or the mode of study, either as a text label (e.g. \"online\", \"onsite\" or \"blended\"; \"synchronous\" or \"asynchronous\"; \"full-time\" or \"part-time\") or as a URL reference to a term from a controlled vocabulary (e.g. https://ceds.ed.gov/element/001311#Asynchronous).",
    "types": [
      "URL",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "eligibleQuantity": {
    "title": "eligibleQuantity",
    "classes": [
      "PriceSpecification",
      "Demand",
      "Offer"
    ],
    "description": "The interval and unit of measurement of ordering quantities for which the offer or price specification is valid. This allows e.g. specifying that a certain freight charge is valid only for a certain quantity.",
    "types": [
      "QuantitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "frequency": {
    "title": "frequency",
    "classes": [
      "DoseSchedule"
    ],
    "description": "How often the dose is taken, e.g. 'daily'.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "emissionsCO2": {
    "title": "emissionsCO2",
    "classes": [
      "Vehicle"
    ],
    "description": "The CO2 emissions in g/km. When used in combination with a QuantitativeValue, put \"g/km\" into the unitText property of that value, since there is no UN/CEFACT Common Code for \"g/km\".",
    "types": [
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "trialDesign": {
    "title": "trialDesign",
    "classes": [
      "MedicalTrial"
    ],
    "description": "Specifics about the trial design (enumerated).",
    "types": [
      "MedicalTrialDesign"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "aircraft": {
    "title": "aircraft",
    "classes": [
      "Flight"
    ],
    "description": "The kind of aircraft (e.g., \"Boeing 747\").",
    "types": [
      "Vehicle",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "reviewedBy": {
    "title": "reviewedBy",
    "classes": [
      "WebPage"
    ],
    "description": "People or organizations that have reviewed the content on this web page for accuracy and/or completeness.",
    "types": [
      "Organization",
      "Person"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "percentile90": {
    "title": "percentile90",
    "classes": [
      "QuantitativeValueDistribution"
    ],
    "description": "The 90th percentile value.",
    "types": [
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "alcoholWarning": {
    "title": "alcoholWarning",
    "classes": [
      "Drug"
    ],
    "description": "Any precaution, guidance, contraindication, etc. related to consumption of alcohol while taking this drug.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "appliesToDeliveryMethod": {
    "title": "appliesToDeliveryMethod",
    "classes": [
      "DeliveryChargeSpecification",
      "PaymentChargeSpecification"
    ],
    "description": "The delivery method(s) to which the delivery charge or payment charge specification applies.",
    "types": [
      "DeliveryMethod"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "mechanismOfAction": {
    "title": "mechanismOfAction",
    "classes": [
      "Drug",
      "DietarySupplement"
    ],
    "description": "The specific biochemical interaction through which this drug or supplement produces its pharmacological effect.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "legislationApplies": {
    "title": "legislationApplies",
    "classes": [
      "Legislation"
    ],
    "description": "Indicates that this legislation (or part of a legislation) somehow transfers another legislation in a different legislative context. This is an informative link, and it has no legal value. For legally-binding links of transposition, use the <a href=\"/legislationTransposes\">legislationTransposes</a> property. For example an informative consolidated law of a European Union's member state \"applies\" the consolidated version of the European Directive implemented in it.",
    "types": [
      "Legislation"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "unitText": {
    "title": "unitText",
    "classes": [
      "UnitPriceSpecification",
      "QuantitativeValue",
      "PropertyValue",
      "TypeAndQuantityNode"
    ],
    "description": "A string or text indicating the unit of measurement. Useful if you cannot provide a standard unit code for\n<a href='unitCode'>unitCode</a>.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "restockingFee": {
    "title": "restockingFee",
    "classes": [
      "MerchantReturnPolicy",
      "MerchantReturnPolicySeasonalOverride"
    ],
    "description": "Use [[MonetaryAmount]] to specify a fixed restocking fee for product returns, or use [[Number]] to specify a percentage of the product price paid by the customer.",
    "types": [
      "Number",
      "MonetaryAmount"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "performer": {
    "title": "performer",
    "classes": [
      "Event",
      "FictionalCharacter"
    ],
    "description": "A performer at the event&#x2014;for example, a presenter, musician, musical group or actor.",
    "types": [
      "Organization",
      "Person"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ]
  },
  "typicalAgeRange": {
    "title": "typicalAgeRange",
    "classes": [
      "Event",
      "CreativeWork"
    ],
    "description": "The typical expected age range, e.g. '7-9', '11-'.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "engineType": {
    "title": "engineType",
    "classes": [
      "EngineSpecification",
      "MeanOfTransportation"
    ],
    "description": "The type of engine or engines powering the vehicle.",
    "types": [
      "URL",
      "QualitativeValue",
      "Text"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ],
    "subPropertyOf": [
      "DUL.owl#isClassifiedBy"
    ]
  },
  "globalLocationNumber": {
    "title": "globalLocationNumber",
    "classes": [
      "Place",
      "Organization",
      "Person"
    ],
    "description": "The [Global Location Number](http://www.gs1.org/gln) (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
    "types": [
      "Text"
    ],
    "subPropertyOf": [
      "identifier"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "encodingType": {
    "title": "encodingType",
    "classes": [
      "EntryPoint"
    ],
    "description": "The supported encoding type(s) for an EntryPoint request.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "quest": {
    "title": "quest",
    "classes": [
      "VideoGameSeries",
      "Game"
    ],
    "description": "The task that a player-controlled character, or group of characters may complete in order to gain a reward.",
    "types": [
      "Thing"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "menu": {
    "title": "menu",
    "classes": [
      "FoodEstablishment"
    ],
    "description": "Either the actual menu as a structured representation, as text, or a URL of the menu.",
    "types": [
      "Text",
      "URL",
      "Menu"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "bioChemSimilarity": {
    "title": "bioChemSimilarity",
    "classes": [
      "BioChemEntity"
    ],
    "description": "A similar BioChemEntity, e.g., obtained by fingerprint similarity algorithms.",
    "types": [
      "BioChemEntity"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "tracks": {
    "title": "tracks",
    "classes": [
      "MusicGroup",
      "MusicPlaylist"
    ],
    "description": "A music recording (track)&#x2014;usually a single song.",
    "types": [
      "MusicRecording"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "isTierOf": {
    "title": "isTierOf",
    "classes": [
      "MemberProgramTier"
    ],
    "description": "The member program this tier is a part of.",
    "types": [
      "MemberProgram"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "followup": {
    "title": "followup",
    "classes": [
      "MedicalProcedure"
    ],
    "description": "Typical or recommended followup care after the procedure is performed.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "acceptedPaymentMethod": {
    "title": "acceptedPaymentMethod",
    "classes": [
      "Offer",
      "Organization",
      "Demand"
    ],
    "description": "The payment method(s) that are accepted in general by an organization, or for some specific demand or offer.",
    "types": [
      "LoanOrCredit",
      "PaymentMethod"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "contactPoint": {
    "title": "contactPoint",
    "classes": [
      "HealthInsurancePlan",
      "Organization",
      "Person"
    ],
    "description": "A contact point for a person or organization.",
    "types": [
      "ContactPoint"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "fileSize": {
    "title": "fileSize",
    "classes": [
      "SoftwareApplication",
      "Software",
      "Work"
    ],
    "description": "Size of the application / package (e.g. 18MB). In the absence of a unit (MB, KB etc.), KB will be assumed.\nsize of a file or software",
    "types": [
      "Text",
      "XMLSchema#double",
      "megabyte"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ]
  },
  "gtin14": {
    "title": "gtin14",
    "classes": [
      "Product",
      "Demand",
      "Offer"
    ],
    "description": "The GTIN-14 code of the product, or the product to which the offer refers. See [GS1 GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) for more details.",
    "types": [
      "Text"
    ],
    "subPropertyOf": [
      "identifier",
      "gtin"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "offersPrescriptionByMail": {
    "title": "offersPrescriptionByMail",
    "classes": [
      "HealthPlanFormulary"
    ],
    "description": "Whether prescriptions can be delivered by mail.",
    "types": [
      "Boolean"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "recipeInstructions": {
    "title": "recipeInstructions",
    "classes": [
      "Recipe"
    ],
    "description": "A step in making the recipe, in the form of a single item (document, video, etc.) or an ordered list with HowToStep and/or HowToSection items.",
    "types": [
      "ItemList",
      "Text",
      "CreativeWork"
    ],
    "subPropertyOf": [
      "step"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "termsOfService": {
    "title": "termsOfService",
    "classes": [
      "Service"
    ],
    "description": "Human-readable terms of service documentation.",
    "types": [
      "URL",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "slogan": {
    "title": "slogan",
    "classes": [
      "Product",
      "Brand",
      "Place",
      "Service",
      "Organization"
    ],
    "description": "A slogan or motto associated with the item.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "postalCodeRange": {
    "title": "postalCodeRange",
    "classes": [
      "DefinedRegion"
    ],
    "description": "A defined range of postal codes.",
    "types": [
      "PostalCodeRangeSpecification"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "recipeYield": {
    "title": "recipeYield",
    "classes": [
      "Recipe"
    ],
    "description": "The quantity produced by the recipe (for example, number of people served, number of servings, etc).",
    "types": [
      "QuantitativeValue",
      "Text"
    ],
    "subPropertyOf": [
      "yield"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "language": {
    "title": "language",
    "classes": [
      "WriteAction",
      "CommunicateAction"
    ],
    "description": "A sub property of instrument. The language used on this action.",
    "types": [
      "Language"
    ],
    "subPropertyOf": [
      "instrument"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "gamePlatform": {
    "title": "gamePlatform",
    "classes": [
      "VideoGame",
      "VideoGameSeries"
    ],
    "description": "The electronic systems used to play <a href=\"http://en.wikipedia.org/wiki/Category:Video_game_platforms\">video games</a>.",
    "types": [
      "Text",
      "Thing",
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "doseValue": {
    "title": "doseValue",
    "classes": [
      "DoseSchedule"
    ],
    "description": "The value of the dose, e.g. 500.",
    "types": [
      "QualitativeValue",
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "relatedTherapy": {
    "title": "relatedTherapy",
    "classes": [
      "AnatomicalStructure",
      "SuperficialAnatomy",
      "AnatomicalSystem"
    ],
    "description": "A medical therapy related to this anatomy.",
    "types": [
      "MedicalTherapy"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "monoisotopicMolecularWeight": {
    "title": "monoisotopicMolecularWeight",
    "classes": [
      "MolecularEntity"
    ],
    "description": "The monoisotopic mass is the sum of the masses of the atoms in a molecule using the unbound, ground-state, rest mass of the principal (most abundant) isotope for each element instead of the isotopic average mass. Please include the units in the form '&lt;Number&gt; &lt;unit&gt;', for example '770.230488 g/mol' or as '&lt;QuantitativeValue&gt;.",
    "types": [
      "QuantitativeValue",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "guidelineDate": {
    "title": "guidelineDate",
    "classes": [
      "MedicalGuideline"
    ],
    "description": "Date on which this guideline's recommendation was made.",
    "types": [
      "Date"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "departurePlatform": {
    "title": "departurePlatform",
    "classes": [
      "TrainTrip"
    ],
    "description": "The platform from which the train departs.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "contentRating": {
    "title": "contentRating",
    "classes": [
      "CreativeWork"
    ],
    "description": "Official rating of a piece of content&#x2014;for example, 'MPAA PG-13'.",
    "types": [
      "Text",
      "Rating"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "performerIn": {
    "title": "performerIn",
    "classes": [
      "Person"
    ],
    "description": "Event that this person is a performer or participant in.",
    "types": [
      "Event"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "maximumVirtualAttendeeCapacity": {
    "title": "maximumVirtualAttendeeCapacity",
    "classes": [
      "Event"
    ],
    "description": "The maximum virtual attendee capacity of an [[Event]] whose [[eventAttendanceMode]] is [[OnlineEventAttendanceMode]] (or the online aspects, in the case of a [[MixedEventAttendanceMode]]). ",
    "types": [
      "Integer"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "interactionService": {
    "title": "interactionService",
    "classes": [
      "InteractionCounter"
    ],
    "description": "The WebSite or SoftwareApplication where the interactions took place.",
    "types": [
      "WebSite",
      "SoftwareApplication"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "deliveryLeadTime": {
    "title": "deliveryLeadTime",
    "classes": [
      "Demand",
      "Offer"
    ],
    "description": "The typical delay between the receipt of the order and the goods either leaving the warehouse or being prepared for pickup, in case the delivery method is on site pickup.",
    "types": [
      "QuantitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "valuePattern": {
    "title": "valuePattern",
    "classes": [
      "PropertyValueSpecification"
    ],
    "description": "Specifies a regular expression for testing literal values according to the HTML spec.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "isEncodedByBioChemEntity": {
    "title": "isEncodedByBioChemEntity",
    "classes": [
      "BioChemEntity"
    ],
    "description": "Another BioChemEntity encoding by this one.",
    "types": [
      "Gene"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "breastfeedingWarning": {
    "title": "breastfeedingWarning",
    "classes": [
      "Drug"
    ],
    "description": "Any precaution, guidance, contraindication, etc. related to this drug's use by breastfeeding mothers.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "coverageStartTime": {
    "title": "coverageStartTime",
    "classes": [
      "LiveBlogPosting"
    ],
    "description": "The time when the live blog will begin covering the Event. Note that coverage may begin before the Event's start time. The LiveBlogPosting may also be created before coverage begins.",
    "types": [
      "DateTime"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "event": {
    "title": "event",
    "classes": [
      "PlayAction",
      "Organization",
      "LeaveAction",
      "InviteAction",
      "InformAction",
      "Place",
      "JoinAction"
    ],
    "description": "Upcoming or past event associated with this place, organization, or action.",
    "types": [
      "Event"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "suggestedMaxAge": {
    "title": "suggestedMaxAge",
    "classes": [
      "PeopleAudience"
    ],
    "description": "Maximum recommended age in years for the audience or user.",
    "types": [
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "sender": {
    "title": "sender",
    "classes": [
      "Message",
      "ReceiveAction"
    ],
    "description": "A sub property of participant. The participant who is at the sending end of the action.",
    "types": [
      "Organization",
      "Audience",
      "Person"
    ],
    "subPropertyOf": [
      "participant"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "speed": {
    "title": "speed",
    "classes": [
      "Vehicle"
    ],
    "description": "The speed range of the vehicle. If the vehicle is powered by an engine, the upper limit of the speed range (indicated by [[maxValue]]) should be the maximum speed achievable under regular conditions.\\n\\nTypical unit code(s): KMH for km/h, HM for mile per hour (0.447 04 m/s), KNT for knot\\n\\n*Note 1: Use [[minValue]] and [[maxValue]] to indicate the range. Typically, the minimal value is zero.\\n* Note 2: There are many different ways of measuring the speed range. You can link to information about how the given value has been determined using the [[valueReference]] property.",
    "types": [
      "QuantitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "healthPlanCopayOption": {
    "title": "healthPlanCopayOption",
    "classes": [
      "HealthPlanCostSharingSpecification"
    ],
    "description": "Whether the copay is before or after deductible, etc. TODO: Is this a closed set?",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "byMonthDay": {
    "title": "byMonthDay",
    "classes": [
      "Schedule"
    ],
    "description": "Defines the day(s) of the month on which a recurring [[Event]] takes place. Specified as an [[Integer]] between 1-31.",
    "types": [
      "Integer"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "includesHealthPlanFormulary": {
    "title": "includesHealthPlanFormulary",
    "classes": [
      "HealthInsurancePlan"
    ],
    "description": "Formularies covered by this plan.",
    "types": [
      "HealthPlanFormulary"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "accessibilityHazard": {
    "title": "accessibilityHazard",
    "classes": [
      "CreativeWork"
    ],
    "description": "A characteristic of the described resource that is physiologically dangerous to some users. Related to WCAG 2.0 guideline 2.3. Values should be drawn from the [approved vocabulary](https://www.w3.org/2021/a11y-discov-vocab/latest/#accessibilityHazard-vocabulary).",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "dateVehicleFirstRegistered": {
    "title": "dateVehicleFirstRegistered",
    "classes": [
      "Vehicle"
    ],
    "description": "The date of the first registration of the vehicle with the respective public authorities.",
    "types": [
      "Date"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "postalCodePrefix": {
    "title": "postalCodePrefix",
    "classes": [
      "DefinedRegion"
    ],
    "description": "A defined range of postal codes indicated by a common textual prefix. Used for non-numeric systems such as UK.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "annualPercentageRate": {
    "title": "annualPercentageRate",
    "classes": [
      "FinancialProduct"
    ],
    "description": "The annual rate that is charged for borrowing (or made by investing), expressed as a single percentage number that represents the actual yearly cost of funds over the term of a loan. This includes any fees or additional costs associated with the transaction.",
    "types": [
      "Number",
      "QuantitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "text": {
    "title": "text",
    "classes": [
      "CreativeWork"
    ],
    "description": "The textual content of this CreativeWork.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "torque": {
    "title": "torque",
    "classes": [
      "EngineSpecification"
    ],
    "description": "The torque (turning force) of the vehicle's engine.\\n\\nTypical unit code(s): NU for newton metre (N m), F17 for pound-force per foot, or F48 for pound-force per inch\\n\\n* Note 1: You can link to information about how the given value has been determined (e.g. reference RPM) using the [[valueReference]] property.\\n* Note 2: You can use [[minValue]] and [[maxValue]] to indicate ranges.",
    "types": [
      "QuantitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "serviceSmsNumber": {
    "title": "serviceSmsNumber",
    "classes": [
      "ServiceChannel"
    ],
    "description": "The number to access the service by text message.",
    "types": [
      "ContactPoint"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "programmingLanguage": {
    "title": "programmingLanguage",
    "classes": [
      "SoftwareSourceCode",
      "Software"
    ],
    "description": "The computer programming language.",
    "types": [
      "ComputerLanguage",
      "Text"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ],
    "subPropertyOf": [
      "DUL.owl#isExpressedBy"
    ]
  },
  "hasDriveThroughService": {
    "title": "hasDriveThroughService",
    "classes": [
      "Place"
    ],
    "description": "Indicates whether some facility (e.g. [[FoodEstablishment]], [[CovidTestingFacility]]) offers a service that can be used by driving through in a car. In the case of [[CovidTestingFacility]] such facilities could potentially help with social distancing from other potentially-infected users.",
    "types": [
      "Boolean"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "numberOfAccommodationUnits": {
    "title": "numberOfAccommodationUnits",
    "classes": [
      "ApartmentComplex",
      "FloorPlan"
    ],
    "description": "Indicates the total (available plus unavailable) number of accommodation units in an [[ApartmentComplex]], or the number of accommodation units for a specific [[FloorPlan]] (within its specific [[ApartmentComplex]]). See also [[numberOfAvailableAccommodationUnits]].",
    "types": [
      "QuantitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "vehicleInteriorColor": {
    "title": "vehicleInteriorColor",
    "classes": [
      "Vehicle"
    ],
    "description": "The color or color combination of the interior of the vehicle.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "geoContains": {
    "title": "geoContains",
    "classes": [
      "GeospatialGeometry",
      "Place"
    ],
    "description": "Represents a relationship between two geometries (or the places they represent), relating a containing geometry to a contained geometry. \"a contains b iff no points of b lie in the exterior of a, and at least one point of the interior of b lies in the interior of a\". As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).",
    "types": [
      "GeospatialGeometry",
      "Place"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "inPlaylist": {
    "title": "inPlaylist",
    "classes": [
      "MusicRecording"
    ],
    "description": "The playlist to which this recording belongs.",
    "types": [
      "MusicPlaylist"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "duringMedia": {
    "title": "duringMedia",
    "classes": [
      "HowToDirection"
    ],
    "description": "A media object representing the circumstances while performing this direction.",
    "types": [
      "URL",
      "MediaObject"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "includedDataCatalog": {
    "title": "includedDataCatalog",
    "classes": [
      "Dataset"
    ],
    "description": "A data catalog which contains this dataset (this property was previously 'catalog', preferred name is now 'includedInDataCatalog').",
    "types": [
      "DataCatalog"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "numberOfPlayers": {
    "title": "numberOfPlayers",
    "classes": [
      "VideoGameSeries",
      "Game",
      "Activity"
    ],
    "description": "Indicate how many people can play this game (minimum, maximum, or range).",
    "types": [
      "QuantitativeValue",
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ]
  },
  "actor": {
    "title": "actor",
    "classes": [
      "PodcastSeries",
      "VideoObject",
      "Movie",
      "Episode",
      "RadioSeries",
      "CreativeWorkSeason",
      "MovieSeries",
      "VideoGame",
      "VideoGameSeries",
      "Event",
      "Clip",
      "TVSeries",
      "Ne083dbf4c7694bb5b763ef7cf4635141"
    ],
    "description": "An actor, e.g. in TV, radio, movie, video games etc., or in an event. Actors can be associated with individual items or with a series, episode, clip.",
    "types": [
      "Person"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "hostingOrganization": {
    "title": "hostingOrganization",
    "classes": [
      "ProgramMembership",
      "MemberProgram"
    ],
    "description": "The Organization (airline, travelers' club, retailer, etc.) the membership is made with or which offers the  MemberProgram.",
    "types": [
      "Organization"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "serialNumber": {
    "title": "serialNumber",
    "classes": [
      "IndividualProduct",
      "Demand",
      "Offer"
    ],
    "description": "The serial number or any alphanumeric identifier of a particular product. When attached to an offer, it is a shortcut for the serial number of the product included in the offer.",
    "types": [
      "Text"
    ],
    "subPropertyOf": [
      "identifier"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "providerMobility": {
    "title": "providerMobility",
    "classes": [
      "Service"
    ],
    "description": "Indicates the mobility of a provided service (e.g. 'static', 'dynamic').",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "amount": {
    "title": "amount",
    "classes": [
      "LoanOrCredit",
      "MonetaryGrant",
      "DatedMoneySpecification",
      "MoneyTransfer",
      "InvestmentOrDeposit"
    ],
    "description": "The amount of money.",
    "types": [
      "MonetaryAmount",
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "shippingDestination": {
    "title": "shippingDestination",
    "classes": [
      "ShippingRateSettings",
      "OfferShippingDetails",
      "DeliveryTimeSettings"
    ],
    "description": "indicates (possibly multiple) shipping destinations. These can be defined in several ways, e.g. postalCode ranges.",
    "types": [
      "DefinedRegion"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "foodEstablishment": {
    "title": "foodEstablishment",
    "classes": [
      "CookAction"
    ],
    "description": "A sub property of location. The specific food establishment where the action occurred.",
    "types": [
      "FoodEstablishment",
      "Place"
    ],
    "subPropertyOf": [
      "location"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "exerciseRelatedDiet": {
    "title": "exerciseRelatedDiet",
    "classes": [
      "ExerciseAction"
    ],
    "description": "A sub property of instrument. The diet used in this action.",
    "types": [
      "Diet"
    ],
    "subPropertyOf": [
      "instrument"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "normalRange": {
    "title": "normalRange",
    "classes": [
      "MedicalTest"
    ],
    "description": "Range of acceptable values for a typical patient, when applicable.",
    "types": [
      "MedicalEnumeration",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "hasCourseInstance": {
    "title": "hasCourseInstance",
    "classes": [
      "Course"
    ],
    "description": "An offering of the course at a specific time and place or through specific media or mode of study or to a specific section of students.",
    "types": [
      "CourseInstance"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "free": {
    "title": "free",
    "classes": [
      "PublicationEvent",
      "FictionalCharacter"
    ],
    "description": "A flag to signal that the item, event, or place is accessible for free.",
    "types": [
      "Boolean",
      "XMLSchema#string"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ]
  },
  "result": {
    "title": "result",
    "classes": [
      "Action",
      "MilitaryConflict"
    ],
    "description": "The result produced in the action. E.g. John wrote *a book*.",
    "types": [
      "Thing",
      "XMLSchema#string"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ]
  },
  "foodEvent": {
    "title": "foodEvent",
    "classes": [
      "CookAction"
    ],
    "description": "A sub property of location. The specific food event where the action occurred.",
    "types": [
      "FoodEvent"
    ],
    "subPropertyOf": [
      "location"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "timeToComplete": {
    "title": "timeToComplete",
    "classes": [
      "EducationalOccupationalProgram"
    ],
    "description": "The expected length of time to complete the program if attending full-time.",
    "types": [
      "Duration"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "identifier": {
    "title": "identifier",
    "classes": [
      "Thing"
    ],
    "description": "The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.\n        ",
    "types": [
      "Text",
      "URL",
      "PropertyValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "deliveryAddress": {
    "title": "deliveryAddress",
    "classes": [
      "ParcelDelivery"
    ],
    "description": "Destination address.",
    "types": [
      "PostalAddress"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "publishingPrinciples": {
    "title": "publishingPrinciples",
    "classes": [
      "Organization",
      "CreativeWork",
      "Person"
    ],
    "description": "The publishingPrinciples property indicates (typically via [[URL]]) a document describing the editorial principles of an [[Organization]] (or individual, e.g. a [[Person]] writing a blog) that relate to their activities as a publisher, e.g. ethics or diversity policies. When applied to a [[CreativeWork]] (e.g. [[NewsArticle]]) the principles are those of the party primarily responsible for the creation of the [[CreativeWork]].\n\nWhile such policies are most typically expressed in natural language, sometimes related information (e.g. indicating a [[funder]]) can be expressed using schema.org terminology.\n",
    "types": [
      "CreativeWork",
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "servicePostalAddress": {
    "title": "servicePostalAddress",
    "classes": [
      "ServiceChannel"
    ],
    "description": "The address for accessing the service by mail.",
    "types": [
      "PostalAddress"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "urlTemplate": {
    "title": "urlTemplate",
    "classes": [
      "EntryPoint"
    ],
    "description": "An url template (RFC6570) that will be used to construct the target of the execution of the action.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "billingPeriod": {
    "title": "billingPeriod",
    "classes": [
      "Invoice"
    ],
    "description": "The time interval used to compute the invoice.",
    "types": [
      "Duration"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "includedInHealthInsurancePlan": {
    "title": "includedInHealthInsurancePlan",
    "classes": [
      "Drug"
    ],
    "description": "The insurance plans that cover this drug.",
    "types": [
      "HealthInsurancePlan"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "mainContentOfPage": {
    "title": "mainContentOfPage",
    "classes": [
      "WebPage"
    ],
    "description": "Indicates if this web page element is the main subject of the page.",
    "types": [
      "WebPageElement"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "hasOfferCatalog": {
    "title": "hasOfferCatalog",
    "classes": [
      "Person",
      "Service",
      "Organization"
    ],
    "description": "Indicates an OfferCatalog listing for this Organization, Person, or Service.",
    "types": [
      "OfferCatalog"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "originatesFrom": {
    "title": "originatesFrom",
    "classes": [
      "LymphaticVessel"
    ],
    "description": "The vasculature the lymphatic structure originates, or afferents, from.",
    "types": [
      "Vessel"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "educationalAlignment": {
    "title": "educationalAlignment",
    "classes": [
      "LearningResource",
      "CreativeWork"
    ],
    "description": "An alignment to an established educational framework.\n\nThis property should not be used where the nature of the alignment can be described using a simple property, for example to express that a resource [[teaches]] or [[assesses]] a competency.",
    "types": [
      "AlignmentObject"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "postOp": {
    "title": "postOp",
    "classes": [
      "MedicalDevice"
    ],
    "description": "A description of the postoperative procedures, care, and/or followups for this device.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "holdingArchive": {
    "title": "holdingArchive",
    "classes": [
      "ArchiveComponent"
    ],
    "description": "[[ArchiveOrganization]] that holds, keeps or maintains the [[ArchiveComponent]].",
    "types": [
      "ArchiveOrganization"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "labelDetails": {
    "title": "labelDetails",
    "classes": [
      "Drug"
    ],
    "description": "Link to the drug's label details.",
    "types": [
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "albumProductionType": {
    "title": "albumProductionType",
    "classes": [
      "MusicAlbum"
    ],
    "description": "Classification of the album by its type of content: soundtrack, live album, studio album, etc.",
    "types": [
      "MusicAlbumProductionType"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "cvdNumC19OverflowPats": {
    "title": "cvdNumC19OverflowPats",
    "classes": [
      "CDCPMDRecord"
    ],
    "description": "numc19overflowpats - ED/OVERFLOW: Patients with suspected or confirmed COVID-19 who are in the ED or any overflow location awaiting an inpatient bed.",
    "types": [
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "award": {
    "title": "award",
    "classes": [
      "Service",
      "Product",
      "Organization",
      "CreativeWork",
      "Person",
      "N6bb3569a8e7b4affbd6517614aca3df4"
    ],
    "description": "An award won by or for this item.",
    "types": [
      "Text",
      "Thing"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "datasetTimeInterval": {
    "title": "datasetTimeInterval",
    "classes": [
      "Dataset"
    ],
    "description": "The range of temporal applicability of a dataset, e.g. for a 2011 census dataset, the year 2011 (in ISO 8601 time interval format).",
    "types": [
      "DateTime"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "monthlyMinimumRepaymentAmount": {
    "title": "monthlyMinimumRepaymentAmount",
    "classes": [
      "PaymentCard"
    ],
    "description": "The minimum payment is the lowest amount of money that one is required to pay on a credit card statement each month.",
    "types": [
      "MonetaryAmount",
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "healthPlanCopay": {
    "title": "healthPlanCopay",
    "classes": [
      "HealthPlanCostSharingSpecification"
    ],
    "description": "The copay amount.",
    "types": [
      "PriceSpecification"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "variesBy": {
    "title": "variesBy",
    "classes": [
      "ProductGroup"
    ],
    "description": "Indicates the property or properties by which the variants in a [[ProductGroup]] vary, e.g. their size, color etc. Schema.org properties can be referenced by their short name e.g. \"color\"; terms defined elsewhere can be referenced with their URIs.",
    "types": [
      "DefinedTerm",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "mainEntityOfPage": {
    "title": "mainEntityOfPage",
    "classes": [
      "Thing"
    ],
    "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.",
    "types": [
      "CreativeWork",
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "option": {
    "title": "option",
    "classes": [
      "ChooseAction"
    ],
    "description": "A sub property of object. The options subject to this action.",
    "types": [
      "Text",
      "Thing"
    ],
    "subPropertyOf": [
      "object"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "citation": {
    "title": "citation",
    "classes": [
      "CreativeWork"
    ],
    "description": "A citation or reference to another creative work, such as another publication, web page, scholarly article, etc.",
    "types": [
      "Text",
      "CreativeWork"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "numAdults": {
    "title": "numAdults",
    "classes": [
      "LodgingReservation"
    ],
    "description": "The number of adults staying in the unit.",
    "types": [
      "Integer",
      "QuantitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "diversityStaffingReport": {
    "title": "diversityStaffingReport",
    "classes": [
      "Organization",
      "NewsMediaOrganization"
    ],
    "description": "For an [[Organization]] (often but not necessarily a [[NewsMediaOrganization]]), a report on staffing diversity issues. In a news context this might be for example ASNE or RTDNA (US) reports, or self-reported.",
    "types": [
      "URL",
      "Article"
    ],
    "subPropertyOf": [
      "publishingPrinciples"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "passengerSequenceNumber": {
    "title": "passengerSequenceNumber",
    "classes": [
      "FlightReservation"
    ],
    "description": "The passenger's sequence number as assigned by the airline.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "healthcareReportingData": {
    "title": "healthcareReportingData",
    "classes": [
      "Hospital"
    ],
    "description": "Indicates data describing a hospital, e.g. a CDC [[CDCPMDRecord]] or as some kind of [[Dataset]].",
    "types": [
      "Dataset",
      "CDCPMDRecord"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "statType": {
    "title": "statType",
    "classes": [
      "StatisticalVariable"
    ],
    "description": "Indicates the kind of statistic represented by a [[StatisticalVariable]], e.g. mean, count etc. The value of statType is a property, either from within Schema.org (e.g. [[median]], [[marginOfError]], [[maxValue]], [[minValue]]) or from other compatible (e.g. RDF) systems such as DataCommons.org or Wikidata.org. ",
    "types": [
      "URL",
      "Text",
      "Property"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "publicTransportClosuresInfo": {
    "title": "publicTransportClosuresInfo",
    "classes": [
      "SpecialAnnouncement"
    ],
    "description": "Information about public transport closures.",
    "types": [
      "WebContent",
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "xpath": {
    "title": "xpath",
    "classes": [
      "SpeakableSpecification",
      "WebPageElement"
    ],
    "description": "An XPath, e.g. of a [[SpeakableSpecification]] or [[WebPageElement]]. In the latter case, multiple matches within a page can constitute a single conceptual \"Web page element\".",
    "types": [
      "XPathType"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "audienceType": {
    "title": "audienceType",
    "classes": [
      "Audience"
    ],
    "description": "The target group associated with a given audience (e.g. veterans, car owners, musicians, etc.).",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "softwareVersion": {
    "title": "softwareVersion",
    "classes": [
      "SoftwareApplication"
    ],
    "description": "Version of the software instance.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "numberOfFullBathrooms": {
    "title": "numberOfFullBathrooms",
    "classes": [
      "FloorPlan",
      "Accommodation"
    ],
    "description": "Number of full bathrooms - The total number of full and \u00be bathrooms in an [[Accommodation]]. This corresponds to the [BathroomsFull field in RESO](https://ddwiki.reso.org/display/DDW17/BathroomsFull+Field).",
    "types": [
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "potentialAction": {
    "title": "potentialAction",
    "classes": [
      "Thing"
    ],
    "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
    "types": [
      "Action"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "toRecipient": {
    "title": "toRecipient",
    "classes": [
      "Message"
    ],
    "description": "A sub property of recipient. The recipient who was directly sent the message.",
    "types": [
      "Organization",
      "Audience",
      "Person",
      "ContactPoint"
    ],
    "subPropertyOf": [
      "recipient"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "guidelineSubject": {
    "title": "guidelineSubject",
    "classes": [
      "MedicalGuideline"
    ],
    "description": "The medical conditions, treatments, etc. that are the subject of the guideline.",
    "types": [
      "MedicalEntity"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "coverageEndTime": {
    "title": "coverageEndTime",
    "classes": [
      "LiveBlogPosting"
    ],
    "description": "The time when the live blog will stop covering the Event. Note that coverage may continue after the Event concludes.",
    "types": [
      "DateTime"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "providesService": {
    "title": "providesService",
    "classes": [
      "ServiceChannel"
    ],
    "description": "The service provided by this channel.",
    "types": [
      "Service"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "possibleComplication": {
    "title": "possibleComplication",
    "classes": [
      "MedicalCondition"
    ],
    "description": "A possible unexpected and unfavorable evolution of a medical condition. Complications may include worsening of the signs or symptoms of the disease, extension of the condition to other organ systems, etc.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "callSign": {
    "title": "callSign",
    "classes": [
      "BroadcastService",
      "Person",
      "Vehicle",
      "N499abfa00fa04df384756f11079e1fe7"
    ],
    "description": "A [callsign](https://en.wikipedia.org/wiki/Call_sign), as used in broadcasting and radio communications to identify people, radio and TV stations, or vehicles.",
    "types": [
      "Text",
      "XMLSchema#string"
    ],
    "subPropertyOf": [
      "identifier"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "sponsor": {
    "title": "sponsor",
    "classes": [
      "Event",
      "Organization",
      "MedicalStudy",
      "Grant",
      "CreativeWork",
      "Person",
      "N4a1d1bc3f7994c77b6e5e8932ad0f9a0"
    ],
    "description": "A person or organization that supports a thing through a pledge, promise, or financial contribution. E.g. a sponsor of a Medical Study or a corporate sponsor of an event.",
    "types": [
      "Person",
      "Organization",
      "N67689f2aa2ef4645b1d6524d063fa838"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "tongueWeight": {
    "title": "tongueWeight",
    "classes": [
      "Vehicle"
    ],
    "description": "The permitted vertical load (TWR) of a trailer attached to the vehicle. Also referred to as Tongue Load Rating (TLR) or Vertical Load Rating (VLR).\\n\\nTypical unit code(s): KGM for kilogram, LBR for pound\\n\\n* Note 1: You can indicate additional information in the [[name]] of the [[QuantitativeValue]] node.\\n* Note 2: You may also link to a [[QualitativeValue]] node that provides additional information using [[valueReference]].\\n* Note 3: Note that you can use [[minValue]] and [[maxValue]] to indicate ranges.",
    "types": [
      "QuantitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "webFeed": {
    "title": "webFeed",
    "classes": [
      "PodcastSeries",
      "SpecialAnnouncement"
    ],
    "description": "The URL for a feed, e.g. associated with a podcast series, blog, or series of date-stamped updates. This is usually RSS or Atom.",
    "types": [
      "DataFeed",
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "geoCoveredBy": {
    "title": "geoCoveredBy",
    "classes": [
      "GeospatialGeometry",
      "Place"
    ],
    "description": "Represents a relationship between two geometries (or the places they represent), relating a geometry to another that covers it. As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).",
    "types": [
      "GeospatialGeometry",
      "Place"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "knows": {
    "title": "knows",
    "classes": [
      "Person"
    ],
    "description": "The most generic bi-directional social/work relation.",
    "types": [
      "Person"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "geoMidpoint": {
    "title": "geoMidpoint",
    "classes": [
      "GeoCircle"
    ],
    "description": "Indicates the GeoCoordinates at the centre of a GeoShape, e.g. GeoCircle.",
    "types": [
      "GeoCoordinates"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "vehicleSeatingCapacity": {
    "title": "vehicleSeatingCapacity",
    "classes": [
      "Vehicle"
    ],
    "description": "The number of passengers that can be seated in the vehicle, both in terms of the physical space available, and in terms of limitations set by law.\\n\\nTypical unit code(s): C62 for persons.",
    "types": [
      "Number",
      "QuantitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "lesser": {
    "title": "lesser",
    "classes": [
      "QualitativeValue"
    ],
    "description": "This ordering relation for qualitative values indicates that the subject is lesser than the object.",
    "types": [
      "QualitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "runtime": {
    "title": "runtime",
    "classes": [
      "SoftwareSourceCode",
      "Work"
    ],
    "description": "Runtime platform or script interpreter dependencies (example: Java v1, Python 2.3, .NET Framework 3.0).",
    "types": [
      "Text",
      "XMLSchema#double",
      "minute"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ]
  },
  "partOfSystem": {
    "title": "partOfSystem",
    "classes": [
      "AnatomicalStructure"
    ],
    "description": "The anatomical or organ system that this structure is part of.",
    "types": [
      "AnatomicalSystem"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "workPresented": {
    "title": "workPresented",
    "classes": [
      "ScreeningEvent"
    ],
    "description": "The movie presented during this event.",
    "types": [
      "Movie"
    ],
    "subPropertyOf": [
      "workFeatured"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "recourseLoan": {
    "title": "recourseLoan",
    "classes": [
      "LoanOrCredit"
    ],
    "description": "The only way you get the money back in the event of default is the security. Recourse is where you still have the opportunity to go back to the borrower for the rest of the money.",
    "types": [
      "Boolean"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "calories": {
    "title": "calories",
    "classes": [
      "NutritionInformation"
    ],
    "description": "The number of calories.",
    "types": [
      "Energy"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "contentReferenceTime": {
    "title": "contentReferenceTime",
    "classes": [
      "CreativeWork"
    ],
    "description": "The specific time described by a creative work, for works (e.g. articles, video objects etc.) that emphasise a particular moment within an Event.",
    "types": [
      "DateTime"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "eventAttendanceMode": {
    "title": "eventAttendanceMode",
    "classes": [
      "Event"
    ],
    "description": "The eventAttendanceMode of an event indicates whether it occurs online, offline, or a mix.",
    "types": [
      "EventAttendanceModeEnumeration"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "billingAddress": {
    "title": "billingAddress",
    "classes": [
      "Order"
    ],
    "description": "The billing address for the order.",
    "types": [
      "PostalAddress"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "merchantReturnDays": {
    "title": "merchantReturnDays",
    "classes": [
      "MerchantReturnPolicy",
      "MerchantReturnPolicySeasonalOverride"
    ],
    "description": "Specifies either a fixed return date or the number of days (from the delivery date) that a product can be returned. Used when the [[returnPolicyCategory]] property is specified as [[MerchantReturnFiniteReturnWindow]].",
    "types": [
      "Integer",
      "DateTime",
      "Date"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "album": {
    "title": "album",
    "classes": [
      "MusicGroup"
    ],
    "description": "A music album.",
    "types": [
      "MusicAlbum"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "lender": {
    "title": "lender",
    "classes": [
      "BorrowAction"
    ],
    "description": "A sub property of participant. The person that lends the object being borrowed.",
    "types": [
      "Organization",
      "Person"
    ],
    "subPropertyOf": [
      "participant"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "processingTime": {
    "title": "processingTime",
    "classes": [
      "ServiceChannel"
    ],
    "description": "Estimated processing time for the service using this channel.",
    "types": [
      "Duration"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "ticketToken": {
    "title": "ticketToken",
    "classes": [
      "Ticket"
    ],
    "description": "Reference to an asset (e.g., Barcode, QR code image or PDF) usable for entrance.",
    "types": [
      "URL",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "scheduledPaymentDate": {
    "title": "scheduledPaymentDate",
    "classes": [
      "Invoice"
    ],
    "description": "The date the invoice is scheduled to be paid.",
    "types": [
      "Date"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "shippingSettingsLink": {
    "title": "shippingSettingsLink",
    "classes": [
      "OfferShippingDetails"
    ],
    "description": "Link to a page containing [[ShippingRateSettings]] and [[DeliveryTimeSettings]] details.",
    "types": [
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "query": {
    "title": "query",
    "classes": [
      "SearchAction"
    ],
    "description": "A sub property of instrument. The query used on this action.",
    "types": [
      "Text"
    ],
    "subPropertyOf": [
      "instrument"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "afterMedia": {
    "title": "afterMedia",
    "classes": [
      "HowToDirection"
    ],
    "description": "A media object representing the circumstances after performing this direction.",
    "types": [
      "MediaObject",
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "variantCover": {
    "title": "variantCover",
    "classes": [
      "ComicIssue"
    ],
    "description": "A description of the variant cover\n    \tfor the issue, if the issue is a variant printing. For example, \"Bryan Hitch\n    \tVariant Cover\" or \"2nd Printing Variant\".",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "bitrate": {
    "title": "bitrate",
    "classes": [
      "MediaObject"
    ],
    "description": "The bitrate of the media object.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "numberOfPartialBathrooms": {
    "title": "numberOfPartialBathrooms",
    "classes": [
      "FloorPlan",
      "Accommodation"
    ],
    "description": "Number of partial bathrooms - The total number of half and \u00bc bathrooms in an [[Accommodation]]. This corresponds to the [BathroomsPartial field in RESO](https://ddwiki.reso.org/display/DDW17/BathroomsPartial+Field). ",
    "types": [
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "sdLicense": {
    "title": "sdLicense",
    "classes": [
      "CreativeWork"
    ],
    "description": "A license document that applies to this structured data, typically indicated by URL.",
    "types": [
      "CreativeWork",
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "encoding": {
    "title": "encoding",
    "classes": [
      "CreativeWork"
    ],
    "description": "A media object that encodes this CreativeWork. This property is a synonym for associatedMedia.",
    "types": [
      "MediaObject"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "isLiveBroadcast": {
    "title": "isLiveBroadcast",
    "classes": [
      "BroadcastEvent"
    ],
    "description": "True if the broadcast is of a live event.",
    "types": [
      "Boolean"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "dataset": {
    "title": "dataset",
    "classes": [
      "DataCatalog"
    ],
    "description": "A dataset contained in this catalog.",
    "types": [
      "Dataset"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "estimatedCost": {
    "title": "estimatedCost",
    "classes": [
      "HowTo",
      "HowToSupply"
    ],
    "description": "The estimated cost of the supply or supplies consumed when performing instructions.",
    "types": [
      "Text",
      "MonetaryAmount"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "validForMemberTier": {
    "title": "validForMemberTier",
    "classes": [
      "PriceSpecification",
      "Offer",
      "MerchantReturnPolicy",
      "OfferShippingDetails"
    ],
    "description": "The membership program tier an Offer (or a PriceSpecification, OfferShippingDetails, or MerchantReturnPolicy under an Offer) is valid for.",
    "types": [
      "MemberProgramTier"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "modifiedTime": {
    "title": "modifiedTime",
    "classes": [
      "Reservation"
    ],
    "description": "The date and time the reservation was modified.",
    "types": [
      "DateTime"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "homeLocation": {
    "title": "homeLocation",
    "classes": [
      "Person"
    ],
    "description": "A contact location for a person's residence.",
    "types": [
      "Place",
      "ContactPoint"
    ],
    "subPropertyOf": [
      "location"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "ownershipFundingInfo": {
    "title": "ownershipFundingInfo",
    "classes": [
      "Organization",
      "NewsMediaOrganization"
    ],
    "description": "For an [[Organization]] (often but not necessarily a [[NewsMediaOrganization]]), a description of organizational ownership structure; funding and grants. In a news/media setting, this is with particular reference to editorial independence.   Note that the [[funder]] is also available and can be used to make basic funder information machine-readable.",
    "types": [
      "CreativeWork",
      "URL",
      "AboutPage",
      "Text"
    ],
    "subPropertyOf": [
      "publishingPrinciples"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "diet": {
    "title": "diet",
    "classes": [
      "ExerciseAction"
    ],
    "description": "A sub property of instrument. The diet used in this action.",
    "types": [
      "Diet"
    ],
    "subPropertyOf": [
      "instrument"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "albumReleaseType": {
    "title": "albumReleaseType",
    "classes": [
      "MusicAlbum"
    ],
    "description": "The kind of release which this album is: single, EP or album.",
    "types": [
      "MusicAlbumReleaseType"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "gtin13": {
    "title": "gtin13",
    "classes": [
      "Product",
      "Demand",
      "Offer"
    ],
    "description": "The GTIN-13 code of the product, or the product to which the offer refers. This is equivalent to 13-digit ISBN codes and EAN UCC-13. Former 12-digit UPC codes can be converted into a GTIN-13 code by simply adding a preceding zero. See [GS1 GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) for more details.",
    "types": [
      "Text"
    ],
    "subPropertyOf": [
      "identifier",
      "gtin"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "duns": {
    "title": "duns",
    "classes": [
      "Person",
      "Organization"
    ],
    "description": "The Dun & Bradstreet DUNS number for identifying an organization or business person.",
    "types": [
      "Text",
      "XMLSchema#string"
    ],
    "subPropertyOf": [
      "identifier"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "tocEntry": {
    "title": "tocEntry",
    "classes": [
      "HyperToc"
    ],
    "description": "Indicates a [[HyperTocEntry]] in a [[HyperToc]].",
    "types": [
      "HyperTocEntry"
    ],
    "subPropertyOf": [
      "hasPart"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "archiveHeld": {
    "title": "archiveHeld",
    "classes": [
      "ArchiveOrganization"
    ],
    "description": "Collection, [fonds](https://en.wikipedia.org/wiki/Fonds), or item held, kept or maintained by an [[ArchiveOrganization]].",
    "types": [
      "ArchiveComponent"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "followee": {
    "title": "followee",
    "classes": [
      "FollowAction"
    ],
    "description": "A sub property of object. The person or organization being followed.",
    "types": [
      "Organization",
      "Person"
    ],
    "subPropertyOf": [
      "object"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "birthPlace": {
    "title": "birthPlace",
    "classes": [
      "Person"
    ],
    "description": "The place where the person was born.\nwhere the person was born\nThe place where the person was born.",
    "types": [
      "Place"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia",
      "YAGO"
    ],
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ]
  },
  "nsn": {
    "title": "nsn",
    "classes": [
      "Product"
    ],
    "description": "Indicates the [NATO stock number](https://en.wikipedia.org/wiki/NATO_Stock_Number) (nsn) of a [[Product]]. ",
    "types": [
      "Text"
    ],
    "subPropertyOf": [
      "identifier"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "publishedOn": {
    "title": "publishedOn",
    "classes": [
      "PublicationEvent"
    ],
    "description": "A broadcast service associated with the publication event.",
    "types": [
      "BroadcastService"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "salaryUponCompletion": {
    "title": "salaryUponCompletion",
    "classes": [
      "EducationalOccupationalProgram"
    ],
    "description": "The expected salary upon completing the training.",
    "types": [
      "MonetaryAmountDistribution"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "hasDeliveryMethod": {
    "title": "hasDeliveryMethod",
    "classes": [
      "DeliveryEvent",
      "ParcelDelivery"
    ],
    "description": "Method used for delivery or shipping.",
    "types": [
      "DeliveryMethod"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "productGroupID": {
    "title": "productGroupID",
    "classes": [
      "ProductGroup"
    ],
    "description": "Indicates a textual identifier for a ProductGroup.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "hasBioChemEntityPart": {
    "title": "hasBioChemEntityPart",
    "classes": [
      "BioChemEntity"
    ],
    "description": "Indicates a BioChemEntity that (in some sense) has this BioChemEntity as a part. ",
    "types": [
      "BioChemEntity"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "inProductGroupWithID": {
    "title": "inProductGroupWithID",
    "classes": [
      "Product"
    ],
    "description": "Indicates the [[productGroupID]] for a [[ProductGroup]] that this product [[isVariantOf]]. ",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "dissolutionDate": {
    "title": "dissolutionDate",
    "classes": [
      "Organization",
      "PopulatedPlace"
    ],
    "description": "The date that this organization was dissolved.",
    "types": [
      "Date",
      "XMLSchema#date",
      "N3f54c1f626144092b1776b090f0ba74e"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia",
      "YAGO"
    ]
  },
  "measurementMethod": {
    "title": "measurementMethod",
    "classes": [
      "Observation",
      "DataDownload",
      "PropertyValue",
      "DataCatalog",
      "StatisticalVariable",
      "Dataset"
    ],
    "description": "A subproperty of [[measurementTechnique]] that can be used for specifying specific methods, in particular via [[MeasurementMethodEnum]].",
    "types": [
      "DefinedTerm",
      "URL",
      "MeasurementMethodEnum",
      "Text"
    ],
    "subPropertyOf": [
      "measurementTechnique"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "course": {
    "title": "course",
    "classes": [
      "ExerciseAction",
      "GrandPrix"
    ],
    "description": "A sub property of location. The course where this action was taken.",
    "types": [
      "Place",
      "kilometre",
      "XMLSchema#double"
    ],
    "subPropertyOf": [
      "location"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ]
  },
  "disambiguatingDescription": {
    "title": "disambiguatingDescription",
    "classes": [
      "Thing"
    ],
    "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.",
    "types": [
      "Text"
    ],
    "subPropertyOf": [
      "description"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "location": {
    "title": "location",
    "classes": [
      "Action",
      "Event",
      "InteractionCounter",
      "Organization",
      "N8f4d518e6a154d29bca5e51d3d044ab4"
    ],
    "description": "The location of, for example, where an event is happening, where an organization is located, or where an action takes place.",
    "types": [
      "Place",
      "Text",
      "PostalAddress",
      "VirtualLocation"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "circle": {
    "title": "circle",
    "classes": [
      "GeoShape",
      "PopulatedPlace"
    ],
    "description": "A circle is the circular region of a specified radius centered at a specified latitude and longitude. A circle is expressed as a pair followed by a radius in meters.",
    "types": [
      "Text",
      "XMLSchema#string"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ]
  },
  "review": {
    "title": "review",
    "classes": [
      "Place",
      "Service",
      "Event",
      "Organization",
      "CreativeWork",
      "Product",
      "Brand",
      "Offer",
      "Album"
    ],
    "description": "A review of the item.",
    "types": [
      "Review",
      "XMLSchema#anyURI"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ]
  },
  "associatedClaimReview": {
    "title": "associatedClaimReview",
    "classes": [
      "Review"
    ],
    "description": "An associated [[ClaimReview]], related by specific common content, topic or claim. The expectation is that this property would be most typically used in cases where a single activity is conducting both claim reviews and media reviews, in which case [[relatedMediaReview]] would commonly be used on a [[ClaimReview]], while [[relatedClaimReview]] would be used on [[MediaReview]].",
    "types": [
      "Review"
    ],
    "subPropertyOf": [
      "associatedReview"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "thumbnail": {
    "title": "thumbnail",
    "classes": [
      "CreativeWork"
    ],
    "description": "Thumbnail image for an image or video.",
    "types": [
      "ImageObject"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "broadcastChannelId": {
    "title": "broadcastChannelId",
    "classes": [
      "BroadcastChannel"
    ],
    "description": "The unique address by which the BroadcastService can be identified in a provider lineup. In US, this is typically a number.",
    "types": [
      "Text",
      "XMLSchema#string"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "eduQuestionType": {
    "title": "eduQuestionType",
    "classes": [
      "Question",
      "SolveMathAction"
    ],
    "description": "For questions that are part of learning resources (e.g. Quiz), eduQuestionType indicates the format of question being given. Example: \"Multiple choice\", \"Open ended\", \"Flashcard\".",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "size": {
    "title": "size",
    "classes": [
      "CreativeWork",
      "Product"
    ],
    "description": "A standardized size of a product or creative work, specified either through a simple textual string (for example 'XL', '32Wx34L'), a  QuantitativeValue with a unitCode, or a comprehensive and structured [[SizeSpecification]]; in other cases, the [[width]], [[height]], [[depth]] and [[weight]] properties may be more applicable. ",
    "types": [
      "QuantitativeValue",
      "Text",
      "DefinedTerm",
      "SizeSpecification"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "legislationType": {
    "title": "legislationType",
    "classes": [
      "Legislation"
    ],
    "description": "The type of the legislation. Examples of values are \"law\", \"act\", \"directive\", \"decree\", \"regulation\", \"statutory instrument\", \"loi organique\", \"r\u00e8glement grand-ducal\", etc., depending on the country.",
    "types": [
      "Text",
      "CategoryCode"
    ],
    "subPropertyOf": [
      "genre"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "isProprietary": {
    "title": "isProprietary",
    "classes": [
      "Drug",
      "DietarySupplement"
    ],
    "description": "True if this item's name is a proprietary/brand name (vs. generic name).",
    "types": [
      "Boolean"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "gtin12": {
    "title": "gtin12",
    "classes": [
      "Product",
      "Demand",
      "Offer"
    ],
    "description": "The GTIN-12 code of the product, or the product to which the offer refers. The GTIN-12 is the 12-digit GS1 Identification Key composed of a U.P.C. Company Prefix, Item Reference, and Check Digit used to identify trade items. See [GS1 GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) for more details.",
    "types": [
      "Text"
    ],
    "subPropertyOf": [
      "gtin",
      "identifier"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "model": {
    "title": "model",
    "classes": [
      "Product",
      "Sales"
    ],
    "description": "The model of the product. Use with the URL of a ProductModel or a textual representation of the model identifier. The URL of the ProductModel can be from an external source. It is recommended to additionally provide strong product identifiers via the gtin8/gtin13/gtin14 and mpn properties.",
    "types": [
      "Text",
      "ProductModel",
      "XMLSchema#string"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ]
  },
  "includedComposition": {
    "title": "includedComposition",
    "classes": [
      "MusicComposition"
    ],
    "description": "Smaller compositions included in this work (e.g. a movement in a symphony).",
    "types": [
      "MusicComposition"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "areaServed": {
    "title": "areaServed",
    "classes": [
      "Offer",
      "ContactPoint",
      "Service",
      "DeliveryChargeSpecification",
      "Organization",
      "Demand"
    ],
    "description": "The geographic area where a service or offered item is provided.",
    "types": [
      "AdministrativeArea",
      "Place",
      "Text",
      "GeoShape"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "transcript": {
    "title": "transcript",
    "classes": [
      "AudioObject",
      "VideoObject"
    ],
    "description": "If this MediaObject is an AudioObject or VideoObject, the transcript of that object.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "applicableCountry": {
    "title": "applicableCountry",
    "classes": [
      "MerchantReturnPolicy"
    ],
    "description": "A country where a particular merchant return policy applies to, for example the two-letter ISO 3166-1 alpha-2 country code.",
    "types": [
      "Text",
      "Country"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "box": {
    "title": "box",
    "classes": [
      "GeoShape"
    ],
    "description": "A box is the area enclosed by the rectangle formed by two points. The first point is the lower corner, the second point is the upper corner. A box is expressed as two points separated by a space character.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "legislationConsolidates": {
    "title": "legislationConsolidates",
    "classes": [
      "Legislation"
    ],
    "description": "Indicates another legislation taken into account in this consolidated legislation (which is usually the product of an editorial process that revises the legislation). This property should be used multiple times to refer to both the original version or the previous consolidated version, and to the legislations making the change.",
    "types": [
      "Legislation"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "trackingUrl": {
    "title": "trackingUrl",
    "classes": [
      "ParcelDelivery"
    ],
    "description": "Tracking url for the parcel delivery.",
    "types": [
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "additionalType": {
    "title": "additionalType",
    "classes": [
      "Thing"
    ],
    "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. Typically the value is a URI-identified RDF class, and in this case corresponds to the\n    use of rdf:type in RDF. Text values can be used sparingly, for cases where useful information can be added without their being an appropriate schema to reference. In the case of text values, the class label should follow the schema.org <a href=\"https://schema.org/docs/styleguide.html\">style guide</a>.",
    "types": [
      "URL",
      "Text"
    ],
    "subPropertyOf": [
      "type"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "healthPlanDrugOption": {
    "title": "healthPlanDrugOption",
    "classes": [
      "HealthInsurancePlan"
    ],
    "description": "TODO.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "yearsInOperation": {
    "title": "yearsInOperation",
    "classes": [
      "BusinessAudience"
    ],
    "description": "The age of the business.",
    "types": [
      "QuantitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "duplicateTherapy": {
    "title": "duplicateTherapy",
    "classes": [
      "MedicalTherapy"
    ],
    "description": "A therapy that duplicates or overlaps this one.",
    "types": [
      "MedicalTherapy"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "roofLoad": {
    "title": "roofLoad",
    "classes": [
      "Car",
      "BusOrCoach"
    ],
    "description": "The permitted total weight of cargo and installations (e.g. a roof rack) on top of the vehicle.\\n\\nTypical unit code(s): KGM for kilogram, LBR for pound\\n\\n* Note 1: You can indicate additional information in the [[name]] of the [[QuantitativeValue]] node.\\n* Note 2: You may also link to a [[QualitativeValue]] node that provides additional information using [[valueReference]]\\n* Note 3: Note that you can use [[minValue]] and [[maxValue]] to indicate ranges.",
    "types": [
      "QuantitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "arterialBranch": {
    "title": "arterialBranch",
    "classes": [
      "Artery"
    ],
    "description": "The branches that comprise the arterial structure.",
    "types": [
      "AnatomicalStructure"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "materialExtent": {
    "title": "materialExtent",
    "classes": [
      "CreativeWork"
    ],
    "description": "The quantity of the materials being described or an expression of the physical space they occupy.",
    "types": [
      "QuantitativeValue",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "worstRating": {
    "title": "worstRating",
    "classes": [
      "Rating"
    ],
    "description": "The lowest value allowed in this rating system.",
    "types": [
      "Number",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "bookFormat": {
    "title": "bookFormat",
    "classes": [
      "Book"
    ],
    "description": "The format of the book.",
    "types": [
      "BookFormatType"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "reservationFor": {
    "title": "reservationFor",
    "classes": [
      "Reservation"
    ],
    "description": "The thing -- flight, event, restaurant, etc. being reserved.",
    "types": [
      "Thing"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "realEstateAgent": {
    "title": "realEstateAgent",
    "classes": [
      "RentAction"
    ],
    "description": "A sub property of participant. The real estate agent involved in the action.",
    "types": [
      "RealEstateAgent"
    ],
    "subPropertyOf": [
      "participant"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "warrantyScope": {
    "title": "warrantyScope",
    "classes": [
      "WarrantyPromise"
    ],
    "description": "The scope of the warranty promise.",
    "types": [
      "WarrantyScope"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "releaseDate": {
    "title": "releaseDate",
    "classes": [
      "Product"
    ],
    "description": "The release date of a product or product model. This can be used to distinguish the exact variant of a product.",
    "types": [
      "Date"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "startOffset": {
    "title": "startOffset",
    "classes": [
      "Clip",
      "SeekToAction"
    ],
    "description": "The start time of the clip expressed as the number of seconds from the beginning of the work.",
    "types": [
      "HyperTocEntry",
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "isAcceptingNewPatients": {
    "title": "isAcceptingNewPatients",
    "classes": [
      "MedicalOrganization"
    ],
    "description": "Whether the provider is accepting new patients.",
    "types": [
      "Boolean"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "priceComponentType": {
    "title": "priceComponentType",
    "classes": [
      "UnitPriceSpecification"
    ],
    "description": "Identifies a price component (for example, a line item on an invoice), part of the total price for an offer.",
    "types": [
      "PriceComponentTypeEnumeration"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "mathExpression": {
    "title": "mathExpression",
    "classes": [
      "MathSolver"
    ],
    "description": "A mathematical expression (e.g. 'x^2-3x=0') that may be solved for a specific variable, simplified, or transformed. This can take many formats, e.g. LaTeX, Ascii-Math, or math as you would write with a keyboard.",
    "types": [
      "SolveMathAction",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "numberOfAxles": {
    "title": "numberOfAxles",
    "classes": [
      "Vehicle"
    ],
    "description": "The number of axles.\\n\\nTypical unit code(s): C62.",
    "types": [
      "Number",
      "QuantitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "paymentUrl": {
    "title": "paymentUrl",
    "classes": [
      "Order"
    ],
    "description": "The URL for sending a payment.",
    "types": [
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "primaryPrevention": {
    "title": "primaryPrevention",
    "classes": [
      "MedicalCondition"
    ],
    "description": "A preventative therapy used to prevent an initial occurrence of the medical condition, such as vaccination.",
    "types": [
      "MedicalTherapy"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "isConsumableFor": {
    "title": "isConsumableFor",
    "classes": [
      "Product"
    ],
    "description": "A pointer to another product (or multiple products) for which this product is a consumable.",
    "types": [
      "Product"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "prepTime": {
    "title": "prepTime",
    "classes": [
      "HowToDirection",
      "HowTo"
    ],
    "description": "The length of time it takes to prepare the items to be used in instructions or a direction, in [ISO 8601 duration format](http://en.wikipedia.org/wiki/ISO_8601).",
    "types": [
      "Duration"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "targetCollection": {
    "title": "targetCollection",
    "classes": [
      "UpdateAction"
    ],
    "description": "A sub property of object. The collection target of the action.",
    "types": [
      "Thing"
    ],
    "subPropertyOf": [
      "object"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "signOrSymptom": {
    "title": "signOrSymptom",
    "classes": [
      "MedicalCondition"
    ],
    "description": "A sign or symptom of this condition. Signs are objective or physically observable manifestations of the medical condition while symptoms are the subjective experience of the medical condition.",
    "types": [
      "MedicalSignOrSymptom"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "warrantyPromise": {
    "title": "warrantyPromise",
    "classes": [
      "BuyAction",
      "SellAction"
    ],
    "description": "The warranty promise(s) included in the offer.",
    "types": [
      "WarrantyPromise"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "weightTotal": {
    "title": "weightTotal",
    "classes": [
      "Vehicle"
    ],
    "description": "The permitted total weight of the loaded vehicle, including passengers and cargo and the weight of the empty vehicle.\\n\\nTypical unit code(s): KGM for kilogram, LBR for pound\\n\\n* Note 1: You can indicate additional information in the [[name]] of the [[QuantitativeValue]] node.\\n* Note 2: You may also link to a [[QualitativeValue]] node that provides additional information using [[valueReference]].\\n* Note 3: Note that you can use [[minValue]] and [[maxValue]] to indicate ranges.",
    "types": [
      "QuantitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "valueMaxLength": {
    "title": "valueMaxLength",
    "classes": [
      "PropertyValueSpecification"
    ],
    "description": "Specifies the allowed range for number of characters in a literal value.",
    "types": [
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "awards": {
    "title": "awards",
    "classes": [
      "CreativeWork",
      "Product",
      "Organization",
      "Person"
    ],
    "description": "Awards won by or for this item.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "recipe": {
    "title": "recipe",
    "classes": [
      "CookAction"
    ],
    "description": "A sub property of instrument. The recipe/instructions used to perform the action.",
    "types": [
      "Recipe"
    ],
    "subPropertyOf": [
      "instrument"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "suitableForDiet": {
    "title": "suitableForDiet",
    "classes": [
      "MenuItem",
      "Recipe"
    ],
    "description": "Indicates a dietary restriction or guideline for which this recipe or menu item is suitable, e.g. diabetic, halal etc.",
    "types": [
      "RestrictedDiet"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "preOp": {
    "title": "preOp",
    "classes": [
      "MedicalDevice"
    ],
    "description": "A description of the workup, testing, and other preparations required before implanting this device.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "upvoteCount": {
    "title": "upvoteCount",
    "classes": [
      "Comment"
    ],
    "description": "The number of upvotes this question, answer or comment has received from the community.",
    "types": [
      "Integer"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "grantee": {
    "title": "grantee",
    "classes": [
      "DigitalDocumentPermission"
    ],
    "description": "The person, organization, contact point, or audience that has been granted this permission.",
    "types": [
      "Organization",
      "Audience",
      "Person",
      "ContactPoint"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "workLocation": {
    "title": "workLocation",
    "classes": [
      "Person"
    ],
    "description": "A contact location for a person's place of work.",
    "types": [
      "Place",
      "ContactPoint"
    ],
    "subPropertyOf": [
      "location"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "orderedItem": {
    "title": "orderedItem",
    "classes": [
      "Order",
      "OrderItem"
    ],
    "description": "The item ordered.",
    "types": [
      "Product",
      "OrderItem",
      "Service"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "device": {
    "title": "device",
    "classes": [
      "SoftwareApplication"
    ],
    "description": "Device required to run the application. Used in cases where a specific make/model is required to run the application.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "competitor": {
    "title": "competitor",
    "classes": [
      "SportsEvent"
    ],
    "description": "A competitor in a sports event.",
    "types": [
      "Person",
      "SportsTeam",
      "Nb94e3c59627448fbad8dfd8bcc482664"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "produces": {
    "title": "produces",
    "classes": [
      "Service"
    ],
    "description": "The tangible thing generated by the service, e.g. a passport, permit, etc.",
    "types": [
      "Thing"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "healthPlanCoinsuranceRate": {
    "title": "healthPlanCoinsuranceRate",
    "classes": [
      "HealthPlanCostSharingSpecification"
    ],
    "description": "The rate of coinsurance expressed as a number between 0.0 and 1.0.",
    "types": [
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "confirmationNumber": {
    "title": "confirmationNumber",
    "classes": [
      "Order",
      "Invoice"
    ],
    "description": "A number that confirms the given order or payment has been received.",
    "types": [
      "Text"
    ],
    "subPropertyOf": [
      "identifier"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "parents": {
    "title": "parents",
    "classes": [
      "Person"
    ],
    "description": "A parents of the person.",
    "types": [
      "Person"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "membershipNumber": {
    "title": "membershipNumber",
    "classes": [
      "ProgramMembership"
    ],
    "description": "A unique identifier for the membership.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "readonlyValue": {
    "title": "readonlyValue",
    "classes": [
      "PropertyValueSpecification"
    ],
    "description": "Whether or not a property is mutable.  Default is false. Specifying this for a property that also has a value makes it act similar to a \"hidden\" input in an HTML form.",
    "types": [
      "Boolean"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "originalMediaLink": {
    "title": "originalMediaLink",
    "classes": [
      "MediaReview"
    ],
    "description": "Link to the page containing an original version of the content, or directly to an online copy of the original [[MediaObject]] content, e.g. video file.",
    "types": [
      "URL",
      "MediaObject",
      "WebPage"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "certificationStatus": {
    "title": "certificationStatus",
    "classes": [
      "Certification"
    ],
    "description": "Indicates the current status of a certification: active or inactive. See also  [gs1:certificationStatus](https://www.gs1.org/voc/certificationStatus).",
    "types": [
      "CertificationStatusEnumeration"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "numTracks": {
    "title": "numTracks",
    "classes": [
      "MusicPlaylist"
    ],
    "description": "The number of tracks in this album or playlist.",
    "types": [
      "Integer"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "successorOf": {
    "title": "successorOf",
    "classes": [
      "ProductModel"
    ],
    "description": "A pointer from a newer variant of a product  to its previous, often discontinued predecessor.",
    "types": [
      "ProductModel"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "noBylinesPolicy": {
    "title": "noBylinesPolicy",
    "classes": [
      "NewsMediaOrganization"
    ],
    "description": "For a [[NewsMediaOrganization]] or other news-related [[Organization]], a statement explaining when authors of articles are not named in bylines.",
    "types": [
      "CreativeWork",
      "URL"
    ],
    "subPropertyOf": [
      "publishingPrinciples"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "missionCoveragePrioritiesPolicy": {
    "title": "missionCoveragePrioritiesPolicy",
    "classes": [
      "NewsMediaOrganization"
    ],
    "description": "For a [[NewsMediaOrganization]], a statement on coverage priorities, including any public agenda or stance on issues.",
    "types": [
      "URL",
      "CreativeWork"
    ],
    "subPropertyOf": [
      "publishingPrinciples"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "healthPlanNetworkTier": {
    "title": "healthPlanNetworkTier",
    "classes": [
      "HealthPlanNetwork"
    ],
    "description": "The tier(s) for this network.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "requiredMinAge": {
    "title": "requiredMinAge",
    "classes": [
      "PeopleAudience"
    ],
    "description": "Audiences defined by a person's minimum age.",
    "types": [
      "Integer"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "pregnancyCategory": {
    "title": "pregnancyCategory",
    "classes": [
      "Drug"
    ],
    "description": "Pregnancy category of this drug.",
    "types": [
      "DrugPregnancyCategory"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "instructor": {
    "title": "instructor",
    "classes": [
      "CourseInstance"
    ],
    "description": "A person assigned to instruct or provide instructional assistance for the [[CourseInstance]].",
    "types": [
      "Person"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "isbn": {
    "title": "isbn",
    "classes": [
      "Book",
      "WrittenWork"
    ],
    "description": "The ISBN of the book.\nThe International Standard Book Number (ISBN) is a unique numeric commercial book identifier based upon the 9-digit Standard Book Numbering (SBN) code.\nThe ISBN of the book.",
    "types": [
      "Text",
      "XMLSchema#string"
    ],
    "subPropertyOf": [
      "identifier"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia",
      "YAGO"
    ]
  },
  "characterName": {
    "title": "characterName",
    "classes": [
      "PerformanceRole"
    ],
    "description": "The name of a character played in some acting or performing role, i.e. in a PerformanceRole.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "answerCount": {
    "title": "answerCount",
    "classes": [
      "Question"
    ],
    "description": "The number of answers this question has received.",
    "types": [
      "Integer"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "character": {
    "title": "character",
    "classes": [
      "CreativeWork"
    ],
    "description": "Fictional person connected with a creative work.",
    "types": [
      "Person"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "children": {
    "title": "children",
    "classes": [
      "Person"
    ],
    "description": "A child of the person.",
    "types": [
      "Person"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "loanTerm": {
    "title": "loanTerm",
    "classes": [
      "LoanOrCredit"
    ],
    "description": "The duration of the loan or credit agreement.",
    "types": [
      "QuantitativeValue"
    ],
    "subPropertyOf": [
      "duration"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "partOfInvoice": {
    "title": "partOfInvoice",
    "classes": [
      "Order"
    ],
    "description": "The order is being paid as part of the referenced Invoice.",
    "types": [
      "Invoice"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "checkinTime": {
    "title": "checkinTime",
    "classes": [
      "LodgingBusiness",
      "LodgingReservation"
    ],
    "description": "The earliest someone may check into a lodging establishment.",
    "types": [
      "Time",
      "DateTime"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "founder": {
    "title": "founder",
    "classes": [
      "Organization"
    ],
    "description": "A person or organization who founded this organization.\nA person who founded this organization.",
    "types": [
      "Organization",
      "Person"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "freeShippingThreshold": {
    "title": "freeShippingThreshold",
    "classes": [
      "ShippingRateSettings"
    ],
    "description": "A monetary value above (or at) which the shipping rate becomes free. Intended to be used via an [[OfferShippingDetails]] with [[shippingSettingsLink]] matching this [[ShippingRateSettings]].",
    "types": [
      "MonetaryAmount",
      "DeliveryChargeSpecification"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "parentTaxon": {
    "title": "parentTaxon",
    "classes": [
      "Taxon"
    ],
    "description": "Closest parent taxon of the taxon in question.",
    "types": [
      "URL",
      "Text",
      "Taxon"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "iupacName": {
    "title": "iupacName",
    "classes": [
      "MolecularEntity",
      "Drug"
    ],
    "description": "Systematic method of naming chemical compounds as recommended by the International Union of Pure and Applied Chemistry (IUPAC).",
    "types": [
      "Text",
      "22-rdf-syntax-ns#langString"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ]
  },
  "surface": {
    "title": "surface",
    "classes": [
      "VisualArtwork"
    ],
    "description": "A material used as a surface in some artwork, e.g. Canvas, Paper, Wood, Board, etc.",
    "types": [
      "Text",
      "URL"
    ],
    "subPropertyOf": [
      "material"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "episodeNumber": {
    "title": "episodeNumber",
    "classes": [
      "Episode",
      "TelevisionEpisode"
    ],
    "description": "Position of the episode within an ordered group of episodes.\nThe episode number of the TelevisionEpisode.",
    "types": [
      "Text",
      "Integer",
      "XMLSchema#nonNegativeInteger"
    ],
    "subPropertyOf": [
      "position"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ]
  },
  "partOfSeries": {
    "title": "partOfSeries",
    "classes": [
      "Clip",
      "Episode",
      "CreativeWorkSeason",
      "N2081cf825f6843999094a41521d4bcee"
    ],
    "description": "The series to which this episode or season belongs.",
    "types": [
      "CreativeWorkSeries"
    ],
    "subPropertyOf": [
      "isPartOf"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "program": {
    "title": "program",
    "classes": [
      "ProgramMembership"
    ],
    "description": "The [MemberProgram](https://schema.org/MemberProgram) associated with a [ProgramMembership](https://schema.org/ProgramMembership).",
    "types": [
      "MemberProgram"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "ticketedSeat": {
    "title": "ticketedSeat",
    "classes": [
      "Ticket"
    ],
    "description": "The seat associated with the ticket.",
    "types": [
      "Seat"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "reviewAspect": {
    "title": "reviewAspect",
    "classes": [
      "Review",
      "Rating",
      "Guide"
    ],
    "description": "This Review or Rating is relevant to this part or facet of the itemReviewed.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "itemShipped": {
    "title": "itemShipped",
    "classes": [
      "ParcelDelivery"
    ],
    "description": "Item(s) being shipped.",
    "types": [
      "Product"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "increasesRiskOf": {
    "title": "increasesRiskOf",
    "classes": [
      "MedicalRiskFactor"
    ],
    "description": "The condition, complication, etc. influenced by this factor.",
    "types": [
      "MedicalEntity"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "workHours": {
    "title": "workHours",
    "classes": [
      "JobPosting"
    ],
    "description": "The typical working hours for this job (e.g. 1st shift, night shift, 8am-5pm).",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "performTime": {
    "title": "performTime",
    "classes": [
      "HowToDirection",
      "HowTo"
    ],
    "description": "The length of time it takes to perform instructions or a direction (not including time to prepare the supplies), in [ISO 8601 duration format](http://en.wikipedia.org/wiki/ISO_8601).",
    "types": [
      "Duration"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "beneficiaryBank": {
    "title": "beneficiaryBank",
    "classes": [
      "MoneyTransfer"
    ],
    "description": "A bank or bank\u2019s branch, financial institution or international financial institution operating the beneficiary\u2019s bank account or releasing funds for the beneficiary.",
    "types": [
      "BankOrCreditUnion",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "customerRemorseReturnShippingFeesAmount": {
    "title": "customerRemorseReturnShippingFeesAmount",
    "classes": [
      "MerchantReturnPolicy"
    ],
    "description": "The amount of shipping costs if a product is returned due to customer remorse. Applicable when property [[customerRemorseReturnFees]] equals [[ReturnShippingFees]].",
    "types": [
      "MonetaryAmount"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "screenshot": {
    "title": "screenshot",
    "classes": [
      "SoftwareApplication"
    ],
    "description": "A link to a screenshot image of the app.",
    "types": [
      "URL",
      "ImageObject"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "toLocation": {
    "title": "toLocation",
    "classes": [
      "MoveAction",
      "TransferAction",
      "ExerciseAction",
      "InsertAction"
    ],
    "description": "A sub property of location. The final location of the object or the agent after the action.",
    "types": [
      "Place"
    ],
    "subPropertyOf": [
      "location"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "productID": {
    "title": "productID",
    "classes": [
      "Product"
    ],
    "description": "The product identifier, such as ISBN. For example: ``` meta itemprop=\"productID\" content=\"isbn:123-456-789\" ```.",
    "types": [
      "Text"
    ],
    "subPropertyOf": [
      "identifier"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "translationOfWork": {
    "title": "translationOfWork",
    "classes": [
      "CreativeWork"
    ],
    "description": "The work that this work has been translated from. E.g. \u7269\u79cd\u8d77\u6e90 is a translationOf \u201cOn the Origin of Species\u201d.",
    "types": [
      "CreativeWork"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "modelDate": {
    "title": "modelDate",
    "classes": [
      "Vehicle"
    ],
    "description": "The release date of a vehicle model (often used to differentiate versions of the same make and model).",
    "types": [
      "Date"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "isPartOfBioChemEntity": {
    "title": "isPartOfBioChemEntity",
    "classes": [
      "BioChemEntity"
    ],
    "description": "Indicates a BioChemEntity that is (in some sense) a part of this BioChemEntity. ",
    "types": [
      "BioChemEntity"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "publisherImprint": {
    "title": "publisherImprint",
    "classes": [
      "CreativeWork"
    ],
    "description": "The publishing division which published the comic.",
    "types": [
      "Organization"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "observationAbout": {
    "title": "observationAbout",
    "classes": [
      "Observation"
    ],
    "description": "The [[observationAbout]] property identifies an entity, often a [[Place]], associated with an [[Observation]].",
    "types": [
      "Thing",
      "Place"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "cargoVolume": {
    "title": "cargoVolume",
    "classes": [
      "Vehicle"
    ],
    "description": "The available volume for cargo or luggage. For automobiles, this is usually the trunk volume.\\n\\nTypical unit code(s): LTR for liters, FTQ for cubic foot/feet\\n\\nNote: You can use [[minValue]] and [[maxValue]] to indicate ranges.",
    "types": [
      "QuantitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "partySize": {
    "title": "partySize",
    "classes": [
      "FoodEstablishmentReservation",
      "TaxiReservation"
    ],
    "description": "Number of people the reservation should accommodate.",
    "types": [
      "QuantitativeValue",
      "Integer"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "typicalTest": {
    "title": "typicalTest",
    "classes": [
      "MedicalCondition"
    ],
    "description": "A medical test typically performed given this condition.",
    "types": [
      "MedicalTest"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "dosageForm": {
    "title": "dosageForm",
    "classes": [
      "Drug"
    ],
    "description": "A dosage form in which this drug/supplement is available, e.g. 'tablet', 'suspension', 'injection'.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "accessModeSufficient": {
    "title": "accessModeSufficient",
    "classes": [
      "CreativeWork"
    ],
    "description": "A list of single or combined accessModes that are sufficient to understand all the intellectual content of a resource. Values should be drawn from the [approved vocabulary](https://www.w3.org/2021/a11y-discov-vocab/latest/#accessModeSufficient-vocabulary).",
    "types": [
      "ItemList"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "occupationLocation": {
    "title": "occupationLocation",
    "classes": [
      "Occupation"
    ],
    "description": " The region/country for which this occupational description is appropriate. Note that educational requirements and qualifications can vary between jurisdictions.",
    "types": [
      "AdministrativeArea"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "specialCommitments": {
    "title": "specialCommitments",
    "classes": [
      "JobPosting"
    ],
    "description": "Any special commitments associated with this job posting. Valid entries include VeteranCommit, MilitarySpouseCommit, etc.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "ratingExplanation": {
    "title": "ratingExplanation",
    "classes": [
      "Rating"
    ],
    "description": "A short explanation (e.g. one to two sentences) providing background context and other information that led to the conclusion expressed in the rating. This is particularly applicable to ratings associated with \"fact check\" markup using [[ClaimReview]].",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "diseaseSpreadStatistics": {
    "title": "diseaseSpreadStatistics",
    "classes": [
      "SpecialAnnouncement"
    ],
    "description": "Statistical information about the spread of a disease, either as [[WebContent]], or\n  described directly as a [[Dataset]], or the specific [[Observation]]s in the dataset. When a [[WebContent]] URL is\n  provided, the page indicated might also contain more such markup.",
    "types": [
      "WebContent",
      "Dataset",
      "Observation",
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "author": {
    "title": "author",
    "classes": [
      "CreativeWork",
      "Rating",
      "Work"
    ],
    "description": "The author of this content or rating. Please note that author is special in that HTML 5 provides a special mechanism for indicating authorship via the rel tag. That is equivalent to this and may be used interchangeably.",
    "types": [
      "Organization",
      "Person",
      "N5a24214c26db45b3aa73063e176e3236"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia",
      "YAGO"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ]
  },
  "floorLevel": {
    "title": "floorLevel",
    "classes": [
      "Accommodation"
    ],
    "description": "The floor level for an [[Accommodation]] in a multi-storey building. Since counting\n  systems [vary internationally](https://en.wikipedia.org/wiki/Storey#Consecutive_number_floor_designations), the local system should be used where possible.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "valueRequired": {
    "title": "valueRequired",
    "classes": [
      "PropertyValueSpecification"
    ],
    "description": "Whether the property must be filled in to complete the action.  Default is false.",
    "types": [
      "Boolean"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "cvdNumC19MechVentPats": {
    "title": "cvdNumC19MechVentPats",
    "classes": [
      "CDCPMDRecord"
    ],
    "description": "numc19mechventpats - HOSPITALIZED and VENTILATED: Patients hospitalized in an NHSN inpatient care location who have suspected or confirmed COVID-19 and are on a mechanical ventilator.",
    "types": [
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "acquireLicensePage": {
    "title": "acquireLicensePage",
    "classes": [
      "CreativeWork"
    ],
    "description": "Indicates a page documenting how licenses can be purchased or otherwise acquired, for the current item.",
    "types": [
      "CreativeWork",
      "URL"
    ],
    "subPropertyOf": [
      "usageInfo"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "partOfTVSeries": {
    "title": "partOfTVSeries",
    "classes": [
      "TVSeason",
      "TVEpisode",
      "TVClip"
    ],
    "description": "The TV series to which this episode or season belongs.",
    "types": [
      "TVSeries"
    ],
    "subPropertyOf": [
      "isPartOf"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "correctionsPolicy": {
    "title": "correctionsPolicy",
    "classes": [
      "Organization",
      "NewsMediaOrganization"
    ],
    "description": "For an [[Organization]] (e.g. [[NewsMediaOrganization]]), a statement describing (in news media, the newsroom\u2019s) disclosure and correction policy for errors.",
    "types": [
      "CreativeWork",
      "URL"
    ],
    "subPropertyOf": [
      "publishingPrinciples"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "smiles": {
    "title": "smiles",
    "classes": [
      "MolecularEntity",
      "ChemicalCompound"
    ],
    "description": "A specification in form of a line notation for describing the structure of chemical species using short ASCII strings.  Double bond stereochemistry \\ indicators may need to be escaped in the string in formats where the backslash is an escape character.\nThe Simplified Molecular-Input Line-Entry System or SMILES is a specification in form of a line notation for describing the structure of chemical molecules using short ASCII strings.",
    "types": [
      "Text",
      "XMLSchema#string"
    ],
    "subPropertyOf": [
      "hasRepresentation"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia",
      "YAGO"
    ]
  },
  "minimumPaymentDue": {
    "title": "minimumPaymentDue",
    "classes": [
      "Invoice"
    ],
    "description": "The minimum payment required at this time.",
    "types": [
      "MonetaryAmount",
      "PriceSpecification"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "accessCode": {
    "title": "accessCode",
    "classes": [
      "DeliveryEvent"
    ],
    "description": "Password, PIN, or access code needed for delivery (e.g. from a locker).",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "colorist": {
    "title": "colorist",
    "classes": [
      "ComicIssue",
      "VisualArtwork",
      "ComicStory",
      "N2b08f98685db45aa85187925a9306355"
    ],
    "description": "The individual who adds color to inked drawings.",
    "types": [
      "Person"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "sportsTeam": {
    "title": "sportsTeam",
    "classes": [
      "ExerciseAction"
    ],
    "description": "A sub property of participant. The sports team that participated on this action.",
    "types": [
      "SportsTeam"
    ],
    "subPropertyOf": [
      "participant"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "diagram": {
    "title": "diagram",
    "classes": [
      "AnatomicalStructure"
    ],
    "description": "An image containing a diagram that illustrates the structure and/or its component substructures and/or connections with other structures.",
    "types": [
      "ImageObject"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "sensoryUnit": {
    "title": "sensoryUnit",
    "classes": [
      "Nerve"
    ],
    "description": "The neurological pathway extension that inputs and sends information to the brain or spinal cord.",
    "types": [
      "AnatomicalStructure",
      "SuperficialAnatomy"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "assemblyVersion": {
    "title": "assemblyVersion",
    "classes": [
      "APIReference"
    ],
    "description": "Associated product/technology version. E.g., .NET Framework 4.5.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "distinguishingSign": {
    "title": "distinguishingSign",
    "classes": [
      "DDxElement"
    ],
    "description": "One of a set of signs and symptoms that can be used to distinguish this diagnosis from others in the differential diagnosis.",
    "types": [
      "MedicalSignOrSymptom"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "penciler": {
    "title": "penciler",
    "classes": [
      "ComicStory",
      "ComicIssue",
      "VisualArtwork"
    ],
    "description": "The individual who draws the primary narrative artwork.",
    "types": [
      "Person"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "position": {
    "title": "position",
    "classes": [
      "CreativeWork",
      "ListItem"
    ],
    "description": "The position of an item in a series or sequence of items.",
    "types": [
      "Integer",
      "Text",
      "XMLSchema#integer"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "healthPlanDrugTier": {
    "title": "healthPlanDrugTier",
    "classes": [
      "HealthInsurancePlan",
      "HealthPlanFormulary"
    ],
    "description": "The tier(s) of drugs offered by this formulary or insurance plan.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "playersOnline": {
    "title": "playersOnline",
    "classes": [
      "GameServer"
    ],
    "description": "Number of players on the server.",
    "types": [
      "Integer"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "bodyLocation": {
    "title": "bodyLocation",
    "classes": [
      "MedicalProcedure",
      "AnatomicalStructure"
    ],
    "description": "Location in the body of the anatomical structure.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "broadcastAffiliateOf": {
    "title": "broadcastAffiliateOf",
    "classes": [
      "BroadcastService"
    ],
    "description": "The media network(s) whose content is broadcast on this station.",
    "types": [
      "Organization"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "asin": {
    "title": "asin",
    "classes": [
      "Product",
      "Demand",
      "Offer"
    ],
    "description": "An Amazon Standard Identification Number (ASIN) is a 10-character alphanumeric unique identifier assigned by Amazon.com and its partners for product identification within the Amazon organization (summary from [Wikipedia](https://en.wikipedia.org/wiki/Amazon_Standard_Identification_Number)'s article).\n\nNote also that this is a definition for how to include ASINs in Schema.org data, and not a definition of ASINs in general - see documentation from Amazon for authoritative details.\nASINs are most commonly encoded as text strings, but the [asin] property supports URL/URI as potential values too.",
    "types": [
      "URL",
      "Text"
    ],
    "subPropertyOf": [
      "identifier"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "loanType": {
    "title": "loanType",
    "classes": [
      "LoanOrCredit"
    ],
    "description": "The type of a loan or credit.",
    "types": [
      "Text",
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "incentiveCompensation": {
    "title": "incentiveCompensation",
    "classes": [
      "JobPosting"
    ],
    "description": "Description of bonus and commission compensation aspects of the job.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "superEvent": {
    "title": "superEvent",
    "classes": [
      "Event"
    ],
    "description": "An event that this event is a part of. For example, a collection of individual music performances might each have a music festival as their superEvent.",
    "types": [
      "Event"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "productionDate": {
    "title": "productionDate",
    "classes": [
      "Product",
      "Vehicle"
    ],
    "description": "The date of production of the item, e.g. vehicle.",
    "types": [
      "Date"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "arrivalBusStop": {
    "title": "arrivalBusStop",
    "classes": [
      "BusTrip"
    ],
    "description": "The stop or station from which the bus arrives.",
    "types": [
      "BusStop",
      "BusStation"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "price": {
    "title": "price",
    "classes": [
      "TradeAction",
      "Offer",
      "PriceSpecification",
      "DonateAction"
    ],
    "description": "The offer price of a product, or of a price component when attached to PriceSpecification and its subtypes.\\n\\nUsage guidelines:\\n\\n* Use the [[priceCurrency]] property (with standard formats: [ISO 4217 currency format](http://en.wikipedia.org/wiki/ISO_4217), e.g. \"USD\"; [Ticker symbol](https://en.wikipedia.org/wiki/List_of_cryptocurrencies) for cryptocurrencies, e.g. \"BTC\"; well known names for [Local Exchange Trading Systems](https://en.wikipedia.org/wiki/Local_exchange_trading_system) (LETS) and other currency types, e.g. \"Ithaca HOUR\") instead of including [ambiguous symbols](http://en.wikipedia.org/wiki/Dollar_sign#Currencies_that_use_the_dollar_or_peso_sign) such as '$' in the value.\\n* Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.\\n* Note that both [RDFa](http://www.w3.org/TR/xhtml-rdfa-primer/#using-the-content-attribute) and Microdata syntax allow the use of a \"content=\" attribute for publishing simple machine-readable values alongside more human-friendly formatting.\\n* Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similar Unicode symbols.\n      ",
    "types": [
      "Number",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "amenityFeature": {
    "title": "amenityFeature",
    "classes": [
      "Accommodation",
      "Place",
      "FloorPlan",
      "LodgingBusiness"
    ],
    "description": "An amenity feature (e.g. a characteristic or service) of the Accommodation. This generic property does not make a statement about whether the feature is included in an offer for the main accommodation or available at extra costs.",
    "types": [
      "LocationFeatureSpecification"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "vehicleEngine": {
    "title": "vehicleEngine",
    "classes": [
      "Vehicle"
    ],
    "description": "Information about the engine or engines of the vehicle.",
    "types": [
      "EngineSpecification"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "legislationChanges": {
    "title": "legislationChanges",
    "classes": [
      "Legislation"
    ],
    "description": "Another legislation that this legislation changes. This encompasses the notions of amendment, replacement, correction, repeal, or other types of change. This may be a direct change (textual or non-textual amendment) or a consequential or indirect change. The property is to be used to express the existence of a change relationship between two acts rather than the existence of a consolidated version of the text that shows the result of the change. For consolidation relationships, use the <a href=\"/legislationConsolidates\">legislationConsolidates</a> property.",
    "types": [
      "Legislation"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "lesserOrEqual": {
    "title": "lesserOrEqual",
    "classes": [
      "QualitativeValue"
    ],
    "description": "This ordering relation for qualitative values indicates that the subject is lesser than or equal to the object.",
    "types": [
      "QualitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "medicalSpecialty": {
    "title": "medicalSpecialty",
    "classes": [
      "Hospital",
      "MedicalClinic",
      "MedicalOrganization",
      "Physician"
    ],
    "description": "A medical specialty of the provider.",
    "types": [
      "MedicalSpecialty"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "validThrough": {
    "title": "validThrough",
    "classes": [
      "Demand",
      "Offer",
      "MonetaryAmount",
      "JobPosting",
      "OpeningHoursSpecification",
      "LocationFeatureSpecification",
      "PriceSpecification"
    ],
    "description": "The date after when the item is not valid. For example the end of an offer, salary period, or a period of opening hours.",
    "types": [
      "DateTime",
      "Date"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "hasMemberProgram": {
    "title": "hasMemberProgram",
    "classes": [
      "Organization"
    ],
    "description": "MemberProgram offered by an Organization, for example an eCommerce merchant or an airline.",
    "types": [
      "MemberProgram"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "thumbnailUrl": {
    "title": "thumbnailUrl",
    "classes": [
      "CreativeWork"
    ],
    "description": "A thumbnail image relevant to the Thing.",
    "types": [
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "characterAttribute": {
    "title": "characterAttribute",
    "classes": [
      "VideoGameSeries",
      "Game"
    ],
    "description": "A piece of data that represents a particular aspect of a fictional character (skill, power, character points, advantage, disadvantage).",
    "types": [
      "Thing"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "returnFees": {
    "title": "returnFees",
    "classes": [
      "MerchantReturnPolicy",
      "MerchantReturnPolicySeasonalOverride"
    ],
    "description": "The type of return fees for purchased products (for any return reason).",
    "types": [
      "ReturnFeesEnumeration"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "employmentUnit": {
    "title": "employmentUnit",
    "classes": [
      "JobPosting"
    ],
    "description": "Indicates the department, unit and/or facility where the employee reports and/or in which the job is to be performed.",
    "types": [
      "Organization"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "procedure": {
    "title": "procedure",
    "classes": [
      "MedicalDevice",
      "Case"
    ],
    "description": "A description of the procedure involved in setting up, using, and/or installing the device.\nThe name designating a formal collection of steps to be taken to complete the case",
    "types": [
      "Text",
      "XMLSchema#string"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ]
  },
  "tripOrigin": {
    "title": "tripOrigin",
    "classes": [
      "Trip"
    ],
    "description": "The location of origin of the trip, prior to any destination(s).",
    "types": [
      "Place"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "pagination": {
    "title": "pagination",
    "classes": [
      "PublicationIssue",
      "Chapter",
      "Article",
      "PublicationVolume",
      "N0badd65e05ab4381948259834d874712"
    ],
    "description": "Any description of pages that is not separated into pageStart and pageEnd; for example, \"1-6, 9, 55\" or \"10-12, 46-49\".",
    "types": [
      "Text",
      "XMLSchema#string"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "inAlbum": {
    "title": "inAlbum",
    "classes": [
      "MusicRecording"
    ],
    "description": "The album to which this recording belongs.",
    "types": [
      "MusicAlbum"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "parent": {
    "title": "parent",
    "classes": [
      "Person"
    ],
    "description": "A parent of this person.",
    "types": [
      "Person"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia",
      "YAGO"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ]
  },
  "saturatedFatContent": {
    "title": "saturatedFatContent",
    "classes": [
      "NutritionInformation"
    ],
    "description": "The number of grams of saturated fat.",
    "types": [
      "Mass"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "studySubject": {
    "title": "studySubject",
    "classes": [
      "MedicalStudy"
    ],
    "description": "A subject of the study, i.e. one of the medical conditions, therapies, devices, drugs, etc. investigated by the study.",
    "types": [
      "MedicalEntity"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "geo": {
    "title": "geo",
    "classes": [
      "Place"
    ],
    "description": "The geo coordinates of the place.",
    "types": [
      "GeoShape",
      "GeoCoordinates"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "merchantReturnLink": {
    "title": "merchantReturnLink",
    "classes": [
      "MerchantReturnPolicy"
    ],
    "description": "Specifies a Web page or service by URL, for product returns.",
    "types": [
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "costCurrency": {
    "title": "costCurrency",
    "classes": [
      "DrugCost"
    ],
    "description": "The currency (in 3-letter) of the drug cost. See: http://en.wikipedia.org/wiki/ISO_4217. ",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "audio": {
    "title": "audio",
    "classes": [
      "CreativeWork"
    ],
    "description": "An embedded audio object.",
    "types": [
      "Clip",
      "AudioObject",
      "MusicRecording"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "availabilityEnds": {
    "title": "availabilityEnds",
    "classes": [
      "Demand",
      "Offer",
      "ActionAccessSpecification"
    ],
    "description": "The end of the availability of the product or service included in the offer.",
    "types": [
      "Time",
      "DateTime",
      "Date"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "acrissCode": {
    "title": "acrissCode",
    "classes": [
      "Car",
      "BusOrCoach"
    ],
    "description": "The ACRISS Car Classification Code is a code used by many car rental companies, for classifying vehicles. ACRISS stands for Association of Car Rental Industry Systems and Standards.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "naics": {
    "title": "naics",
    "classes": [
      "Organization",
      "Person"
    ],
    "description": "The North American Industry Classification System (NAICS) code for a particular organization or business person.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "priceRange": {
    "title": "priceRange",
    "classes": [
      "LocalBusiness"
    ],
    "description": "The price range of the business, for example ```$$$```.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "interestRate": {
    "title": "interestRate",
    "classes": [
      "FinancialProduct"
    ],
    "description": "The interest rate, charged or paid, applicable to the financial product. Note: This is different from the calculated annualPercentageRate.",
    "types": [
      "Number",
      "QuantitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "game": {
    "title": "game",
    "classes": [
      "GameServer"
    ],
    "description": "Video game which is played on this server.",
    "types": [
      "VideoGame"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "usesDevice": {
    "title": "usesDevice",
    "classes": [
      "MedicalTest"
    ],
    "description": "Device used to perform the test.",
    "types": [
      "MedicalDevice"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "measuredProperty": {
    "title": "measuredProperty",
    "classes": [
      "StatisticalVariable",
      "Observation"
    ],
    "description": "The measuredProperty of an [[Observation]], typically via its [[StatisticalVariable]]. There are various kinds of applicable [[Property]]: a schema.org property, a property from other RDF-compatible systems, e.g. W3C RDF Data Cube, Data Commons, Wikidata, or schema.org extensions such as [GS1's](https://www.gs1.org/voc/?show=properties).",
    "types": [
      "Property"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "diversityPolicy": {
    "title": "diversityPolicy",
    "classes": [
      "Organization",
      "NewsMediaOrganization"
    ],
    "description": "Statement on diversity policy by an [[Organization]] e.g. a [[NewsMediaOrganization]]. For a [[NewsMediaOrganization]], a statement describing the newsroom\u2019s diversity policy on both staffing and sources, typically providing staffing data.",
    "types": [
      "URL",
      "CreativeWork"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "serverStatus": {
    "title": "serverStatus",
    "classes": [
      "GameServer"
    ],
    "description": "Status of a game server.",
    "types": [
      "GameServerStatus"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "hasPart": {
    "title": "hasPart",
    "classes": [
      "CreativeWork"
    ],
    "description": "Indicates an item or CreativeWork that is part of this item, or CreativeWork (in some sense).",
    "types": [
      "CreativeWork"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "gender": {
    "title": "gender",
    "classes": [
      "Person",
      "SportsTeam"
    ],
    "description": "Gender of something, typically a [[Person]], but possibly also fictional characters, animals, etc. While https://schema.org/Male and https://schema.org/Female may be used, text strings are also acceptable for people who do not identify as a binary gender. The [[gender]] property can also be used in an extended sense to cover e.g. the gender of sports teams. As with the gender of individuals, we do not try to enumerate all possibilities. A mixed-gender [[SportsTeam]] can be indicated with a text value of \"Mixed\".\nGender of something, typically a <a class=\"localLink\" href=\"http://schema.org/Person\">Person</a>, but possibly also fictional characters, animals, etc. While http://schema.org/Male and http://schema.org/Female may be used, text strings are also acceptable for people who do not identify as a binary gender. The <a class=\"localLink\" href=\"http://schema.org/gender\">gender</a> property can also be used in an extended sense to cover e.g. the gender of sports teams. As with the gender of individuals, we do not try to enumerate all possibilities. A mixed-gender <a class=\"localLink\" href=\"http://schema.org/SportsTeam\">SportsTeam</a> can be indicated with a text value of \"Mixed\".",
    "types": [
      "GenderType",
      "Text",
      "Thing"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "accountablePerson": {
    "title": "accountablePerson",
    "classes": [
      "CreativeWork"
    ],
    "description": "Specifies the Person that is legally accountable for the CreativeWork.",
    "types": [
      "Person"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "trainingSalary": {
    "title": "trainingSalary",
    "classes": [
      "WorkBasedProgram",
      "EducationalOccupationalProgram"
    ],
    "description": "The estimated salary earned while in the program.",
    "types": [
      "MonetaryAmountDistribution"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "parentService": {
    "title": "parentService",
    "classes": [
      "BroadcastService"
    ],
    "description": "A broadcast service to which the broadcast service may belong to such as regional variations of a national channel.",
    "types": [
      "BroadcastService"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "hasRepresentation": {
    "title": "hasRepresentation",
    "classes": [
      "BioChemEntity"
    ],
    "description": "A common representation such as a protein sequence or chemical structure for this entity. For images use schema.org/image.",
    "types": [
      "Text",
      "PropertyValue",
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "clipNumber": {
    "title": "clipNumber",
    "classes": [
      "Clip"
    ],
    "description": "Position of the clip within an ordered group of clips.",
    "types": [
      "Text",
      "Integer"
    ],
    "subPropertyOf": [
      "position"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "returnShippingFeesAmount": {
    "title": "returnShippingFeesAmount",
    "classes": [
      "MerchantReturnPolicySeasonalOverride",
      "MerchantReturnPolicy"
    ],
    "description": "Amount of shipping costs for product returns (for any reason). Applicable when property [[returnFees]] equals [[ReturnShippingFees]].",
    "types": [
      "MonetaryAmount"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "additionalProperty": {
    "title": "additionalProperty",
    "classes": [
      "QuantitativeValue",
      "MerchantReturnPolicy",
      "Product",
      "Offer",
      "Place",
      "QualitativeValue"
    ],
    "description": "A property-value pair representing an additional characteristic of the entity, e.g. a product feature or another characteristic for which there is no matching property in schema.org.\\n\\nNote: Publishers should be aware that applications designed to use specific schema.org properties (e.g. https://schema.org/width, https://schema.org/color, https://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.\n",
    "types": [
      "PropertyValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "eventSchedule": {
    "title": "eventSchedule",
    "classes": [
      "Event"
    ],
    "description": "Associates an [[Event]] with a [[Schedule]]. There are circumstances where it is preferable to share a schedule for a series of\n      repeating events rather than data on the individual events themselves. For example, a website or application might prefer to publish a schedule for a weekly\n      gym class rather than provide data on every event. A schedule could be processed by applications to add forthcoming events to a calendar. An [[Event]] that\n      is associated with a [[Schedule]] using this property should not have [[startDate]] or [[endDate]] properties. These are instead defined within the associated\n      [[Schedule]], this avoids any ambiguity for clients using the data. The property might have repeated values to specify different schedules, e.g. for different months\n      or seasons.",
    "types": [
      "Schedule"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "qualifications": {
    "title": "qualifications",
    "classes": [
      "Occupation",
      "JobPosting"
    ],
    "description": "Specific qualifications required for this role or Occupation.",
    "types": [
      "EducationalOccupationalCredential",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "multipleValues": {
    "title": "multipleValues",
    "classes": [
      "PropertyValueSpecification"
    ],
    "description": "Whether multiple values are allowed for the property.  Default is false.",
    "types": [
      "Boolean"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "prescriptionStatus": {
    "title": "prescriptionStatus",
    "classes": [
      "Drug"
    ],
    "description": "Indicates the status of drug prescription, e.g. local catalogs classifications or whether the drug is available by prescription or over-the-counter, etc.",
    "types": [
      "Text",
      "DrugPrescriptionStatus"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "availableDeliveryMethod": {
    "title": "availableDeliveryMethod",
    "classes": [
      "Demand",
      "Offer"
    ],
    "description": "The delivery method(s) available for this offer.",
    "types": [
      "DeliveryMethod"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "ticketNumber": {
    "title": "ticketNumber",
    "classes": [
      "Ticket"
    ],
    "description": "The unique identifier for the ticket.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "geoRadius": {
    "title": "geoRadius",
    "classes": [
      "GeoCircle"
    ],
    "description": "Indicates the approximate radius of a GeoCircle (metres unless indicated otherwise via Distance notation).",
    "types": [
      "Number",
      "Text",
      "Distance"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "courseWorkload": {
    "title": "courseWorkload",
    "classes": [
      "CourseInstance"
    ],
    "description": "The amount of work expected of students taking the course, often provided as a figure per week or per month, and may be broken down by type. For example, \"2 hours of lectures, 1 hour of lab work and 3 hours of independent study per week\".",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "itemLocation": {
    "title": "itemLocation",
    "classes": [
      "ArchiveComponent"
    ],
    "description": "Current location of the item.",
    "types": [
      "PostalAddress",
      "Place",
      "Text"
    ],
    "subPropertyOf": [
      "location"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "courseSchedule": {
    "title": "courseSchedule",
    "classes": [
      "CourseInstance"
    ],
    "description": "Represents the length and pace of a course, expressed as a [[Schedule]].",
    "types": [
      "Schedule"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "typeOfGood": {
    "title": "typeOfGood",
    "classes": [
      "TypeAndQuantityNode",
      "OwnershipInfo"
    ],
    "description": "The product that this structured value is referring to.",
    "types": [
      "Service",
      "Product"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "hasPOS": {
    "title": "hasPOS",
    "classes": [
      "Organization",
      "Person"
    ],
    "description": "Points-of-Sales operated by the organization or person.",
    "types": [
      "Place"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "sibling": {
    "title": "sibling",
    "classes": [
      "Person"
    ],
    "description": "A sibling of the person.",
    "types": [
      "Person"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ]
  },
  "instrument": {
    "title": "instrument",
    "classes": [
      "Action",
      "Artist"
    ],
    "description": "The object that helped the agent perform the action. E.g. John wrote a book with *a pen*.",
    "types": [
      "Thing",
      "Instrument"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ]
  },
  "department": {
    "title": "department",
    "classes": [
      "Organization",
      "PopulatedPlace"
    ],
    "description": "A relationship between an organization and a department of that organization, also described as an organization (allowing different urls, logos, opening hours). For example: a store with a pharmacy, or a bakery with a cafe.",
    "types": [
      "Organization",
      "PopulatedPlace"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ],
    "subPropertyOf": [
      "DUL.owl#isPartOf"
    ]
  },
  "inBroadcastLineup": {
    "title": "inBroadcastLineup",
    "classes": [
      "BroadcastChannel"
    ],
    "description": "The CableOrSatelliteService offering the channel.",
    "types": [
      "CableOrSatelliteService"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "geoIntersects": {
    "title": "geoIntersects",
    "classes": [
      "GeospatialGeometry",
      "Place"
    ],
    "description": "Represents spatial relations in which two geometries (or the places they represent) have at least one point in common. As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).",
    "types": [
      "GeospatialGeometry",
      "Place"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "actionApplication": {
    "title": "actionApplication",
    "classes": [
      "EntryPoint"
    ],
    "description": "An application that can complete the request.",
    "types": [
      "SoftwareApplication"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "competencyRequired": {
    "title": "competencyRequired",
    "classes": [
      "EducationalOccupationalCredential",
      "LearningResource"
    ],
    "description": "Knowledge, skill, ability or personal attribute that must be demonstrated by a person or other entity in order to do something such as earn an Educational Occupational Credential or understand a LearningResource.",
    "types": [
      "DefinedTerm",
      "URL",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "documentation": {
    "title": "documentation",
    "classes": [
      "WebAPI"
    ],
    "description": "Further documentation describing the Web API in more detail.",
    "types": [
      "CreativeWork",
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "stepValue": {
    "title": "stepValue",
    "classes": [
      "PropertyValueSpecification"
    ],
    "description": "The stepValue attribute indicates the granularity that is expected (and required) of the value in a PropertyValueSpecification.",
    "types": [
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "expectedArrivalFrom": {
    "title": "expectedArrivalFrom",
    "classes": [
      "ParcelDelivery"
    ],
    "description": "The earliest date the package may arrive.",
    "types": [
      "DateTime",
      "Date"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "artMedium": {
    "title": "artMedium",
    "classes": [
      "VisualArtwork"
    ],
    "description": "The material used. (E.g. Oil, Watercolour, Acrylic, Linoprint, Marble, Cyanotype, Digital, Lithograph, DryPoint, Intaglio, Pastel, Woodcut, Pencil, Mixed Media, etc.)",
    "types": [
      "URL",
      "Text"
    ],
    "subPropertyOf": [
      "material"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "vehicleTransmission": {
    "title": "vehicleTransmission",
    "classes": [
      "Vehicle"
    ],
    "description": "The type of component used for transmitting the power from a rotating power source to the wheels or other relevant component(s) (\"gearbox\" for cars).",
    "types": [
      "URL",
      "QualitativeValue",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "geoEquals": {
    "title": "geoEquals",
    "classes": [
      "GeospatialGeometry",
      "Place"
    ],
    "description": "Represents spatial relations in which two geometries (or the places they represent) are topologically equal, as defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM). \"Two geometries are topologically equal if their interiors intersect and no part of the interior or boundary of one geometry intersects the exterior of the other\" (a symmetric relationship).",
    "types": [
      "Place",
      "GeospatialGeometry"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "administrationRoute": {
    "title": "administrationRoute",
    "classes": [
      "Drug"
    ],
    "description": "A route by which this drug may be administered, e.g. 'oral'.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "appearance": {
    "title": "appearance",
    "classes": [
      "Claim"
    ],
    "description": "Indicates an occurrence of a [[Claim]] in some [[CreativeWork]].",
    "types": [
      "CreativeWork"
    ],
    "subPropertyOf": [
      "workExample"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "candidate": {
    "title": "candidate",
    "classes": [
      "VoteAction"
    ],
    "description": "A sub property of object. The candidate subject of this action.",
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "object"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "contributor": {
    "title": "contributor",
    "classes": [
      "CreativeWork",
      "Event",
      "N8684b5c7de31468da48ace8544c707d5"
    ],
    "description": "A secondary contributor to the CreativeWork or Event.",
    "types": [
      "Organization",
      "Person",
      "N1c753da889564cc5a49eeec66951e5b3"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "fuelEfficiency": {
    "title": "fuelEfficiency",
    "classes": [
      "Vehicle"
    ],
    "description": "The distance traveled per unit of fuel used; most commonly miles per gallon (mpg) or kilometers per liter (km/L).\\n\\n* Note 1: There are unfortunately no standard unit codes for miles per gallon or kilometers per liter. Use [[unitText]] to indicate the unit of measurement, e.g. mpg or km/L.\\n* Note 2: There are two ways of indicating the fuel consumption, [[fuelConsumption]] (e.g. 8 liters per 100 km) and [[fuelEfficiency]] (e.g. 30 miles per gallon). They are reciprocal.\\n* Note 3: Often, the absolute value is useful only when related to driving speed (\"at 80 km/h\") or usage pattern (\"city traffic\"). You can use [[valueReference]] to link the value for the fuel economy to another value.",
    "types": [
      "QuantitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "applicationDeadline": {
    "title": "applicationDeadline",
    "classes": [
      "EducationalOccupationalProgram"
    ],
    "description": "The date at which the program stops collecting applications for the next enrollment cycle.",
    "types": [
      "Date"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "priceSpecification": {
    "title": "priceSpecification",
    "classes": [
      "DonateAction",
      "TradeAction",
      "Demand",
      "Offer"
    ],
    "description": "One or more detailed price specifications, indicating the unit price and delivery or payment charges.",
    "types": [
      "PriceSpecification"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "fromLocation": {
    "title": "fromLocation",
    "classes": [
      "TransferAction",
      "ExerciseAction",
      "MoveAction"
    ],
    "description": "A sub property of location. The original location of the object or the agent before the action.",
    "types": [
      "Place"
    ],
    "subPropertyOf": [
      "location"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "countryOfAssembly": {
    "title": "countryOfAssembly",
    "classes": [
      "Product"
    ],
    "description": "The place where the product was assembled.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "deliveryTime": {
    "title": "deliveryTime",
    "classes": [
      "OfferShippingDetails",
      "DeliveryTimeSettings"
    ],
    "description": "The total delay between the receipt of the order and the goods reaching the final customer.",
    "types": [
      "ShippingDeliveryTime"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "payload": {
    "title": "payload",
    "classes": [
      "Vehicle"
    ],
    "description": "The permitted weight of passengers and cargo, EXCLUDING the weight of the empty vehicle.\\n\\nTypical unit code(s): KGM for kilogram, LBR for pound\\n\\n* Note 1: Many databases specify the permitted TOTAL weight instead, which is the sum of [[weight]] and [[payload]]\\n* Note 2: You can indicate additional information in the [[name]] of the [[QuantitativeValue]] node.\\n* Note 3: You may also link to a [[QualitativeValue]] node that provides additional information using [[valueReference]].\\n* Note 4: Note that you can use [[minValue]] and [[maxValue]] to indicate ranges.",
    "types": [
      "QuantitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "healthPlanPharmacyCategory": {
    "title": "healthPlanPharmacyCategory",
    "classes": [
      "HealthPlanCostSharingSpecification"
    ],
    "description": "The category or type of pharmacy associated with this cost sharing.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "orderStatus": {
    "title": "orderStatus",
    "classes": [
      "Order"
    ],
    "description": "The current status of the order.",
    "types": [
      "OrderStatus"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "iswcCode": {
    "title": "iswcCode",
    "classes": [
      "MusicComposition"
    ],
    "description": "The International Standard Musical Work Code for the composition.",
    "types": [
      "Text",
      "XMLSchema#string"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "arrivalBoatTerminal": {
    "title": "arrivalBoatTerminal",
    "classes": [
      "BoatTrip"
    ],
    "description": "The terminal or port from which the boat arrives.",
    "types": [
      "BoatTerminal"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "replacee": {
    "title": "replacee",
    "classes": [
      "ReplaceAction"
    ],
    "description": "A sub property of object. The object that is being replaced.",
    "types": [
      "Thing"
    ],
    "subPropertyOf": [
      "object"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "checkoutPageURLTemplate": {
    "title": "checkoutPageURLTemplate",
    "classes": [
      "Offer"
    ],
    "description": "A URL template (RFC 6570) for a checkout page for an offer. This approach allows merchants to specify a URL for online checkout of the offered product, by interpolating parameters such as the logged in user ID, product ID, quantity, discount code etc. Parameter naming and standardization are not specified here.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "license": {
    "title": "license",
    "classes": [
      "CreativeWork",
      "Work"
    ],
    "description": "A license document that applies to this content, typically indicated by URL.",
    "types": [
      "CreativeWork",
      "URL"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia",
      "YAGO"
    ],
    "subPropertyOf": [
      "DUL.owl#isDescribedBy"
    ]
  },
  "track": {
    "title": "track",
    "classes": [
      "MusicGroup",
      "MusicPlaylist"
    ],
    "description": "A music recording (track)&#x2014;usually a single song. If an ItemList is given, the list should contain items of type MusicRecording.",
    "types": [
      "MusicRecording",
      "ItemList"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "childTaxon": {
    "title": "childTaxon",
    "classes": [
      "Taxon"
    ],
    "description": "Closest child taxa of the taxon in question.",
    "types": [
      "Text",
      "Taxon",
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "iataCode": {
    "title": "iataCode",
    "classes": [
      "Airline",
      "Airport",
      "Nffbad28332b8421c8b811e4e0fd6f04a"
    ],
    "description": "IATA identifier for an airline or airport.",
    "types": [
      "Text",
      "XMLSchema#string"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "exampleOfWork": {
    "title": "exampleOfWork",
    "classes": [
      "CreativeWork"
    ],
    "description": "A creative work that this work is an example/instance/realization/derivation of.",
    "types": [
      "CreativeWork"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "permitAudience": {
    "title": "permitAudience",
    "classes": [
      "Permit"
    ],
    "description": "The target audience for this permit.",
    "types": [
      "Audience"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "availableIn": {
    "title": "availableIn",
    "classes": [
      "DrugStrength"
    ],
    "description": "The location in which the strength is available.",
    "types": [
      "AdministrativeArea"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "provider": {
    "title": "provider",
    "classes": [
      "EducationalOccupationalProgram",
      "Action",
      "Invoice",
      "Service",
      "Reservation",
      "Trip",
      "CreativeWork",
      "ParcelDelivery"
    ],
    "description": "The service provider, service operator, or service performer; the goods producer. Another party (a seller) may offer those services or goods on behalf of the provider. A provider may also serve as the seller.",
    "types": [
      "Person",
      "Organization",
      "N9bfb117145be4fe3bf0c0886d07af8ff"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "spouse": {
    "title": "spouse",
    "classes": [
      "Person"
    ],
    "description": "The person's spouse.\nthe person they are married to\nThe person's spouse.",
    "types": [
      "Person"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia",
      "YAGO"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ]
  },
  "musicBy": {
    "title": "musicBy",
    "classes": [
      "Clip",
      "VideoObject",
      "Movie",
      "Episode",
      "RadioSeries",
      "MovieSeries",
      "VideoGame",
      "VideoGameSeries",
      "TVSeries",
      "Musical",
      "N763705ce1a0a42df8ec73d22b66cf706"
    ],
    "description": "The composer of the soundtrack.",
    "types": [
      "MusicGroup",
      "Person",
      "N16cf94a3882c4523a54e643aec3d1eaa"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia",
      "YAGO"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ]
  },
  "embedUrl": {
    "title": "embedUrl",
    "classes": [
      "MediaObject"
    ],
    "description": "A URL pointing to a player for a specific video. In general, this is the information in the ```src``` element of an ```embed``` tag and should not be the same as the content of the ```loc``` tag.",
    "types": [
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "vehicleModelDate": {
    "title": "vehicleModelDate",
    "classes": [
      "Vehicle"
    ],
    "description": "The release date of a vehicle model (often used to differentiate versions of the same make and model).",
    "types": [
      "Date"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "workFeatured": {
    "title": "workFeatured",
    "classes": [
      "Event"
    ],
    "description": "A work featured in some event, e.g. exhibited in an ExhibitionEvent.\n       Specific subproperties are available for workPerformed (e.g. a play), or a workPresented (a Movie at a ScreeningEvent).",
    "types": [
      "CreativeWork"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "pickupLocation": {
    "title": "pickupLocation",
    "classes": [
      "TaxiReservation",
      "RentalCarReservation"
    ],
    "description": "Where a taxi will pick up a passenger or a rental car can be picked up.",
    "types": [
      "Place"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "leaseLength": {
    "title": "leaseLength",
    "classes": [
      "RealEstateListing",
      "Accommodation",
      "Offer"
    ],
    "description": "Length of the lease for some [[Accommodation]], either particular to some [[Offer]] or in some cases intrinsic to the property.",
    "types": [
      "QuantitativeValue",
      "Duration"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "sdDatePublished": {
    "title": "sdDatePublished",
    "classes": [
      "CreativeWork"
    ],
    "description": "Indicates the date on which the current structured data was generated / published. Typically used alongside [[sdPublisher]].",
    "types": [
      "Date"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "buyer": {
    "title": "buyer",
    "classes": [
      "SellAction"
    ],
    "description": "A sub property of participant. The participant/person/organization that bought the object.",
    "types": [
      "Organization",
      "Person"
    ],
    "subPropertyOf": [
      "participant"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "permissions": {
    "title": "permissions",
    "classes": [
      "SoftwareApplication"
    ],
    "description": "Permission(s) required to run the app (for example, a mobile app may require full internet access or may run only on wifi).",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "requirements": {
    "title": "requirements",
    "classes": [
      "SoftwareApplication"
    ],
    "description": "Component dependency requirements for application. This includes runtime environments and shared libraries that are not included in the application distribution package, but required to run the application (examples: DirectX, Java or .NET runtime).",
    "types": [
      "URL",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "numberOfForwardGears": {
    "title": "numberOfForwardGears",
    "classes": [
      "Vehicle"
    ],
    "description": "The total number of forward gears available for the transmission system of the vehicle.\\n\\nTypical unit code(s): C62.",
    "types": [
      "Number",
      "QuantitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "relevantSpecialty": {
    "title": "relevantSpecialty",
    "classes": [
      "MedicalEntity"
    ],
    "description": "If applicable, a medical specialty in which this entity is relevant.",
    "types": [
      "MedicalSpecialty"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "steps": {
    "title": "steps",
    "classes": [
      "HowToSection",
      "HowTo"
    ],
    "description": "A single step item (as HowToStep, text, document, video, etc.) or a HowToSection (originally misnamed 'steps'; 'step' is preferred).",
    "types": [
      "ItemList",
      "Text",
      "CreativeWork"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "possibleTreatment": {
    "title": "possibleTreatment",
    "classes": [
      "MedicalCondition",
      "MedicalSignOrSymptom",
      "Nfd8bb39234984bc7856b5c5214772b4f"
    ],
    "description": "A possible treatment to address this condition, sign or symptom.",
    "types": [
      "MedicalTherapy"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "titleEIDR": {
    "title": "titleEIDR",
    "classes": [
      "TVSeries",
      "Movie",
      "TVSeason",
      "TVEpisode"
    ],
    "description": "An [EIDR](https://eidr.org/) (Entertainment Identifier Registry) [[identifier]] representing at the most general/abstract level, a work of film or television.\n\nFor example, the motion picture known as \"Ghostbusters\" has a titleEIDR of  \"10.5240/7EC7-228A-510A-053E-CBB8-J\". This title (or work) may have several variants, which EIDR calls \"edits\". See [[editEIDR]].\n\nSince schema.org types like [[Movie]], [[TVEpisode]], [[TVSeason]], and [[TVSeries]] can be used for both works and their multiple expressions, it is possible to use [[titleEIDR]] alone (for a general description), or alongside [[editEIDR]] for a more edit-specific description.\n",
    "types": [
      "Text",
      "URL"
    ],
    "subPropertyOf": [
      "identifier"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "bestRating": {
    "title": "bestRating",
    "classes": [
      "Rating"
    ],
    "description": "The highest value allowed in this rating system.",
    "types": [
      "Number",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "vehicleInteriorType": {
    "title": "vehicleInteriorType",
    "classes": [
      "Vehicle"
    ],
    "description": "The type or material of the interior of the vehicle (e.g. synthetic fabric, leather, wood, etc.). While most interior types are characterized by the material used, an interior type can also be based on vehicle usage or target audience.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "printEdition": {
    "title": "printEdition",
    "classes": [
      "NewsArticle"
    ],
    "description": "The edition of the print product in which the NewsArticle appears.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "assesses": {
    "title": "assesses",
    "classes": [
      "EducationEvent",
      "CreativeWork",
      "LearningResource"
    ],
    "description": "The item being described is intended to assess the competency or learning outcome defined by the referenced term.",
    "types": [
      "Text",
      "DefinedTerm"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "postalCodeBegin": {
    "title": "postalCodeBegin",
    "classes": [
      "PostalCodeRangeSpecification"
    ],
    "description": "First postal code in a range (included).",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "teaches": {
    "title": "teaches",
    "classes": [
      "EducationEvent",
      "CreativeWork",
      "LearningResource"
    ],
    "description": "The item being described is intended to help a person learn the competency or learning outcome defined by the referenced term.",
    "types": [
      "Text",
      "DefinedTerm"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "customerRemorseReturnFees": {
    "title": "customerRemorseReturnFees",
    "classes": [
      "MerchantReturnPolicy"
    ],
    "description": "The type of return fees if the product is returned due to customer remorse.",
    "types": [
      "ReturnFeesEnumeration"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "mediaAuthenticityCategory": {
    "title": "mediaAuthenticityCategory",
    "classes": [
      "MediaReview"
    ],
    "description": "Indicates a MediaManipulationRatingEnumeration classification of a media object (in the context of how it was published or shared).",
    "types": [
      "MediaManipulationRatingEnumeration"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "numberOfRooms": {
    "title": "numberOfRooms",
    "classes": [
      "House",
      "Suite",
      "FloorPlan",
      "SingleFamilyResidence",
      "Apartment",
      "LodgingBusiness",
      "Accommodation",
      "Hotel"
    ],
    "description": "The number of rooms (excluding bathrooms and closets) of the accommodation or lodging business.\nTypical unit code(s): ROM for room or C62 for no unit. The type of room can be put in the unitText property of the QuantitativeValue.",
    "types": [
      "Number",
      "QuantitativeValue",
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ]
  },
  "bed": {
    "title": "bed",
    "classes": [
      "HotelRoom",
      "Accommodation",
      "Suite"
    ],
    "description": "The type of bed or beds included in the accommodation. For the single case of just one bed of a certain type, you use bed directly with a text.\n      If you want to indicate the quantity of a certain kind of bed, use an instance of BedDetails. For more detailed information, use the amenityFeature property.",
    "types": [
      "BedDetails",
      "Text",
      "BedType"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "itemDefectReturnLabelSource": {
    "title": "itemDefectReturnLabelSource",
    "classes": [
      "MerchantReturnPolicy"
    ],
    "description": "The method (from an enumeration) by which the customer obtains a return shipping label for a defect product.",
    "types": [
      "ReturnLabelSourceEnumeration"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "lyricist": {
    "title": "lyricist",
    "classes": [
      "MusicComposition"
    ],
    "description": "The person who wrote the words.",
    "types": [
      "Person",
      "Ne0c1dd36ed2a46edb3f9494e3e868c85"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "proteinContent": {
    "title": "proteinContent",
    "classes": [
      "NutritionInformation"
    ],
    "description": "The number of grams of protein.",
    "types": [
      "Mass"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "domainIncludes": {
    "title": "domainIncludes",
    "classes": [
      "Property"
    ],
    "description": "Relates a property to a class that is (one of) the type(s) the property is expected to be used on.",
    "types": [
      "Class"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "accountMinimumInflow": {
    "title": "accountMinimumInflow",
    "classes": [
      "BankAccount"
    ],
    "description": "A minimum amount that has to be paid in every month.",
    "types": [
      "MonetaryAmount"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "correction": {
    "title": "correction",
    "classes": [
      "CreativeWork"
    ],
    "description": "Indicates a correction to a [[CreativeWork]], either via a [[CorrectionComment]], textually or in another document.",
    "types": [
      "CorrectionComment",
      "URL",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "servicePhone": {
    "title": "servicePhone",
    "classes": [
      "ServiceChannel"
    ],
    "description": "The phone number to use to access the service.",
    "types": [
      "ContactPoint"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "yearBuilt": {
    "title": "yearBuilt",
    "classes": [
      "Accommodation"
    ],
    "description": "The year an [[Accommodation]] was constructed. This corresponds to the [YearBuilt field in RESO](https://ddwiki.reso.org/display/DDW17/YearBuilt+Field). ",
    "types": [
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "illustrator": {
    "title": "illustrator",
    "classes": [
      "Book",
      "WrittenWork"
    ],
    "description": "The illustrator of the book.\nIllustrator (where used throughout and a major feature)\nThe illustrator of the book.",
    "types": [
      "Person"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia",
      "YAGO"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ]
  },
  "sportsEvent": {
    "title": "sportsEvent",
    "classes": [
      "ExerciseAction"
    ],
    "description": "A sub property of location. The sports event where this action occurred.",
    "types": [
      "SportsEvent"
    ],
    "subPropertyOf": [
      "location"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "itemDefectReturnFees": {
    "title": "itemDefectReturnFees",
    "classes": [
      "MerchantReturnPolicy"
    ],
    "description": "The type of return fees for returns of defect products.",
    "types": [
      "ReturnFeesEnumeration"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "installUrl": {
    "title": "installUrl",
    "classes": [
      "SoftwareApplication"
    ],
    "description": "URL at which the app may be installed, if different from the URL of the item.",
    "types": [
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "orderNumber": {
    "title": "orderNumber",
    "classes": [
      "Order"
    ],
    "description": "The identifier of the transaction.",
    "types": [
      "Text"
    ],
    "subPropertyOf": [
      "identifier"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "expectsAcceptanceOf": {
    "title": "expectsAcceptanceOf",
    "classes": [
      "MediaSubscription",
      "ActionAccessSpecification",
      "ConsumeAction"
    ],
    "description": "An Offer which must be accepted before the user can perform the Action. For example, the user may need to buy a movie before being able to watch it.",
    "types": [
      "Offer"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "validFor": {
    "title": "validFor",
    "classes": [
      "EducationalOccupationalCredential",
      "Permit"
    ],
    "description": "The duration of validity of a permit or similar thing.",
    "types": [
      "Duration"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "cvdNumBedsOcc": {
    "title": "cvdNumBedsOcc",
    "classes": [
      "CDCPMDRecord"
    ],
    "description": "numbedsocc - HOSPITAL INPATIENT BED OCCUPANCY: Total number of staffed inpatient beds that are occupied.",
    "types": [
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "doorTime": {
    "title": "doorTime",
    "classes": [
      "Event"
    ],
    "description": "The time admission will commence.",
    "types": [
      "Time",
      "DateTime"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "memoryRequirements": {
    "title": "memoryRequirements",
    "classes": [
      "SoftwareApplication"
    ],
    "description": "Minimum memory requirements.",
    "types": [
      "URL",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "countriesSupported": {
    "title": "countriesSupported",
    "classes": [
      "SoftwareApplication"
    ],
    "description": "Countries for which the application is supported. You can also provide the two-letter ISO 3166-1 alpha-2 country code.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "availabilityStarts": {
    "title": "availabilityStarts",
    "classes": [
      "Demand",
      "Offer",
      "ActionAccessSpecification"
    ],
    "description": "The beginning of the availability of the product or service included in the offer.",
    "types": [
      "Time",
      "Date",
      "DateTime"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "dateCreated": {
    "title": "dateCreated",
    "classes": [
      "CreativeWork",
      "DataFeedItem"
    ],
    "description": "The date on which the CreativeWork was created or the item was added to a DataFeed.",
    "types": [
      "DateTime",
      "Date",
      "N4eff8326662a4682ac88bfce6920f67d"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "relevantOccupation": {
    "title": "relevantOccupation",
    "classes": [
      "JobPosting"
    ],
    "description": "The Occupation for the JobPosting.",
    "types": [
      "Occupation"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "fuelType": {
    "title": "fuelType",
    "classes": [
      "Vehicle",
      "EngineSpecification",
      "AutomobileEngine"
    ],
    "description": "The type of fuel suitable for the engine or engines of the vehicle. If the vehicle has only one engine, this property can be attached directly to the vehicle.",
    "types": [
      "Text",
      "URL",
      "QualitativeValue",
      "fuelType"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ]
  },
  "cutoffTime": {
    "title": "cutoffTime",
    "classes": [
      "ShippingDeliveryTime"
    ],
    "description": "Order cutoff time allows merchants to describe the time after which they will no longer process orders received on that day. For orders processed after cutoff time, one day gets added to the delivery time estimate. This property is expected to be most typically used via the [[ShippingRateSettings]] publication pattern. The time is indicated using the ISO-8601 Time format, e.g. \"23:30:00-05:00\" would represent 6:30 pm Eastern Standard Time (EST) which is 5 hours behind Coordinated Universal Time (UTC).",
    "types": [
      "Time"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "hasCourse": {
    "title": "hasCourse",
    "classes": [
      "EducationalOccupationalProgram"
    ],
    "description": "A course or class that is one of the learning opportunities that constitute an educational / occupational program. No information is implied about whether the course is mandatory or optional; no guarantee is implied about whether the course will be available to everyone on the program.",
    "types": [
      "Course"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "newsUpdatesAndGuidelines": {
    "title": "newsUpdatesAndGuidelines",
    "classes": [
      "SpecialAnnouncement"
    ],
    "description": "Indicates a page with news updates and guidelines. This could often be (but is not required to be) the main page containing [[SpecialAnnouncement]] markup on a site.",
    "types": [
      "WebContent",
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "programType": {
    "title": "programType",
    "classes": [
      "EducationalOccupationalProgram"
    ],
    "description": "The type of educational or occupational program. For example, classroom, internship, alternance, etc.",
    "types": [
      "Text",
      "DefinedTerm"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "cssSelector": {
    "title": "cssSelector",
    "classes": [
      "SpeakableSpecification",
      "WebPageElement"
    ],
    "description": "A CSS selector, e.g. of a [[SpeakableSpecification]] or [[WebPageElement]]. In the latter case, multiple matches within a page can constitute a single conceptual \"Web page element\".",
    "types": [
      "CssSelectorType"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "previousStartDate": {
    "title": "previousStartDate",
    "classes": [
      "Event"
    ],
    "description": "Used in conjunction with eventStatus for rescheduled or cancelled events. This property contains the previously scheduled start date. For rescheduled events, the startDate property should be used for the newly scheduled start date. In the (rare) case of an event that has been postponed and rescheduled multiple times, this field may be repeated.",
    "types": [
      "Date"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "itemDefectReturnShippingFeesAmount": {
    "title": "itemDefectReturnShippingFeesAmount",
    "classes": [
      "MerchantReturnPolicy"
    ],
    "description": "Amount of shipping costs for defect product returns. Applicable when property [[itemDefectReturnFees]] equals [[ReturnShippingFees]].",
    "types": [
      "MonetaryAmount"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "expires": {
    "title": "expires",
    "classes": [
      "CreativeWork",
      "Certification"
    ],
    "description": "Date the content expires and is no longer useful or available. For example a [[VideoObject]] or [[NewsArticle]] whose availability or relevance is time-limited, a [[ClaimReview]] fact check whose publisher wants to indicate that it may no longer be relevant (or helpful to highlight) after some date, or a [[Certification]] the validity has expired.",
    "types": [
      "DateTime",
      "Date"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "hasTierRequirement": {
    "title": "hasTierRequirement",
    "classes": [
      "MemberProgramTier"
    ],
    "description": "A requirement for a user to join a membership tier, for example: a CreditCard if the tier requires sign up for a credit card, A UnitPriceSpecification if the user is required to pay a (periodic) fee, or a MonetaryAmount if the user needs to spend a minimum amount to join the tier. If a tier is free to join then this property does not need to be specified.",
    "types": [
      "Text",
      "CreditCard",
      "MonetaryAmount",
      "UnitPriceSpecification"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "distance": {
    "title": "distance",
    "classes": [
      "ExerciseAction",
      "TravelAction",
      "GrandPrix",
      "SpaceShuttle"
    ],
    "description": "The distance travelled, e.g. exercising or travelling.",
    "types": [
      "Distance",
      "kilometre",
      "XMLSchema#double"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ]
  },
  "lowPrice": {
    "title": "lowPrice",
    "classes": [
      "AggregateOffer"
    ],
    "description": "The lowest price of all offers available.\\n\\nUsage guidelines:\\n\\n* Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similar Unicode symbols.\\n* Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.",
    "types": [
      "Number",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "accessibilityAPI": {
    "title": "accessibilityAPI",
    "classes": [
      "CreativeWork"
    ],
    "description": "Indicates that the resource is compatible with the referenced accessibility API. Values should be drawn from the [approved vocabulary](https://www.w3.org/2021/a11y-discov-vocab/latest/#accessibilityAPI-vocabulary).",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "awayTeam": {
    "title": "awayTeam",
    "classes": [
      "SportsEvent"
    ],
    "description": "The away team in a sports event.",
    "types": [
      "Person",
      "SportsTeam"
    ],
    "subPropertyOf": [
      "competitor"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "videoQuality": {
    "title": "videoQuality",
    "classes": [
      "VideoObject"
    ],
    "description": "The quality of the video.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "shippingDetails": {
    "title": "shippingDetails",
    "classes": [
      "Offer"
    ],
    "description": "Indicates information about the shipping policies and options associated with an [[Offer]].",
    "types": [
      "OfferShippingDetails"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "vehicleConfiguration": {
    "title": "vehicleConfiguration",
    "classes": [
      "Vehicle"
    ],
    "description": "A short text indicating the configuration of the vehicle, e.g. '5dr hatchback ST 2.5 MT 225 hp' or 'limited edition'.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "suggestedAge": {
    "title": "suggestedAge",
    "classes": [
      "PeopleAudience",
      "SizeSpecification"
    ],
    "description": "The age or age range for the intended audience or person, for example 3-12 months for infants, 1-5 years for toddlers.",
    "types": [
      "QuantitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "eventStatus": {
    "title": "eventStatus",
    "classes": [
      "Event"
    ],
    "description": "An eventStatus of an event represents its status; particularly useful when an event is cancelled or rescheduled.",
    "types": [
      "EventStatusType"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "occupationalCredentialAwarded": {
    "title": "occupationalCredentialAwarded",
    "classes": [
      "Course",
      "EducationalOccupationalProgram"
    ],
    "description": "A description of the qualification, award, certificate, diploma or other occupational credential awarded as a consequence of successful completion of this course or program.",
    "types": [
      "EducationalOccupationalCredential",
      "Text",
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "boardingGroup": {
    "title": "boardingGroup",
    "classes": [
      "FlightReservation"
    ],
    "description": "The airline-specific indicator of boarding order / preference.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "offers": {
    "title": "offers",
    "classes": [
      "EducationalOccupationalProgram",
      "MenuItem",
      "Trip",
      "Service",
      "Event",
      "AggregateOffer",
      "Product",
      "CreativeWork"
    ],
    "description": "An offer to provide this item&#x2014;for example, an offer to sell a product, rent the DVD of a movie, perform a service, or give away tickets to an event. Use [[businessFunction]] to indicate the kind of transaction offered, i.e. sell, lease, etc. This property can also be used to describe a [[Demand]]. While this property is listed as expected on a number of common types, it can be used in others. In that case, using a second type, such as Product or a subtype of Product, can clarify the nature of the offer.\n      ",
    "types": [
      "Offer",
      "Demand"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "healthPlanNetworkId": {
    "title": "healthPlanNetworkId",
    "classes": [
      "MedicalOrganization",
      "HealthPlanNetwork"
    ],
    "description": "Name or unique ID of network. (Networks are often reused across different insurance plans.)",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "status": {
    "title": "status",
    "classes": [
      "MedicalStudy",
      "MedicalProcedure",
      "MedicalCondition"
    ],
    "description": "The status of the study (enumerated).",
    "types": [
      "Text",
      "MedicalStudyStatus",
      "EventStatusType"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "colleague": {
    "title": "colleague",
    "classes": [
      "Person"
    ],
    "description": "A colleague of the person.\nColleague of a Person or OfficeHolder (not PersonFunction nor CareerStation). Sub-properties include: president, vicePresident, chancellor, viceChancellor, governor, lieutenant. Points to a Person who may have a general \"position\" (resource) or \"title\" (literal).",
    "types": [
      "URL",
      "Person"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ]
  },
  "targetPopulation": {
    "title": "targetPopulation",
    "classes": [
      "DietarySupplement",
      "DoseSchedule"
    ],
    "description": "Characteristics of the population for which this is intended, or which typically uses it, e.g. 'adults'.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "overdosage": {
    "title": "overdosage",
    "classes": [
      "Drug"
    ],
    "description": "Any information related to overdose on a drug, including signs or symptoms, treatments, contact information for emergency response.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "postalCodeEnd": {
    "title": "postalCodeEnd",
    "classes": [
      "PostalCodeRangeSpecification"
    ],
    "description": "Last postal code in the range (included). Needs to be after [[postalCodeBegin]].",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "additionalVariable": {
    "title": "additionalVariable",
    "classes": [
      "ExercisePlan"
    ],
    "description": "Any additional component of the exercise prescription that may need to be articulated to the patient. This may include the order of exercises, the number of repetitions of movement, quantitative distance, progressions over time, etc.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "itemOffered": {
    "title": "itemOffered",
    "classes": [
      "Demand",
      "Offer"
    ],
    "description": "An item being offered (or demanded). The transactional nature of the offer or demand is documented using [[businessFunction]], e.g. sell, lease etc. While several common expected types are listed explicitly in this definition, others can be used. Using a second type, such as Product or a subtype of Product, can clarify the nature of the offer.",
    "types": [
      "Trip",
      "Event",
      "AggregateOffer",
      "CreativeWork",
      "Product",
      "MenuItem",
      "Service"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "bloodSupply": {
    "title": "bloodSupply",
    "classes": [
      "Muscle"
    ],
    "description": "The blood vessel that carries blood from the heart to the muscle.",
    "types": [
      "Vessel"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "infectiousAgentClass": {
    "title": "infectiousAgentClass",
    "classes": [
      "InfectiousDisease"
    ],
    "description": "The class of infectious agent (bacteria, prion, etc.) that causes the disease.",
    "types": [
      "InfectiousAgentClass"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "alternativeOf": {
    "title": "alternativeOf",
    "classes": [
      "Gene"
    ],
    "description": "Another gene which is a variation of this one.",
    "types": [
      "Gene"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "trackingNumber": {
    "title": "trackingNumber",
    "classes": [
      "ParcelDelivery"
    ],
    "description": "Shipper tracking number.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "dateModified": {
    "title": "dateModified",
    "classes": [
      "CreativeWork",
      "DataFeedItem"
    ],
    "description": "The date on which the CreativeWork was most recently modified or when the item's entry was modified within a DataFeed.",
    "types": [
      "DateTime",
      "Date"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "cvdCollectionDate": {
    "title": "cvdCollectionDate",
    "classes": [
      "CDCPMDRecord"
    ],
    "description": "collectiondate - Date for which patient counts are reported.",
    "types": [
      "DateTime",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "tourBookingPage": {
    "title": "tourBookingPage",
    "classes": [
      "ApartmentComplex",
      "Place",
      "Accommodation"
    ],
    "description": "A page providing information on how to book a tour of some [[Place]], such as an [[Accommodation]] or [[ApartmentComplex]] in a real estate setting, as well as other kinds of tours as appropriate.",
    "types": [
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "antagonist": {
    "title": "antagonist",
    "classes": [
      "Muscle"
    ],
    "description": "The muscle whose action counteracts the specified muscle.",
    "types": [
      "Muscle"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "nextItem": {
    "title": "nextItem",
    "classes": [
      "ListItem"
    ],
    "description": "A link to the ListItem that follows the current one.",
    "types": [
      "ListItem"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "honorificSuffix": {
    "title": "honorificSuffix",
    "classes": [
      "Person"
    ],
    "description": "An honorific suffix following a Person's name such as M.D./PhD/MSCSW.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "accommodationFloorPlan": {
    "title": "accommodationFloorPlan",
    "classes": [
      "Residence",
      "Accommodation"
    ],
    "description": "A floorplan of some [[Accommodation]].",
    "types": [
      "FloorPlan"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "editEIDR": {
    "title": "editEIDR",
    "classes": [
      "CreativeWork"
    ],
    "description": "An [EIDR](https://eidr.org/) (Entertainment Identifier Registry) [[identifier]] representing a specific edit / edition for a work of film or television.\n\nFor example, the motion picture known as \"Ghostbusters\" whose [[titleEIDR]] is \"10.5240/7EC7-228A-510A-053E-CBB8-J\" has several edits, e.g. \"10.5240/1F2A-E1C5-680A-14C6-E76B-I\" and \"10.5240/8A35-3BEE-6497-5D12-9E4F-3\".\n\nSince schema.org types like [[Movie]] and [[TVEpisode]] can be used for both works and their multiple expressions, it is possible to use [[titleEIDR]] alone (for a general description), or alongside [[editEIDR]] for a more edit-specific description.\n",
    "types": [
      "URL",
      "Text"
    ],
    "subPropertyOf": [
      "identifier"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "sameAs": {
    "title": "sameAs",
    "classes": [
      "Thing"
    ],
    "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.",
    "types": [
      "URL",
      "XMLSchema#anyURI"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "identifyingTest": {
    "title": "identifyingTest",
    "classes": [
      "MedicalSign"
    ],
    "description": "A diagnostic test that can identify this sign.",
    "types": [
      "MedicalTest"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "connectedTo": {
    "title": "connectedTo",
    "classes": [
      "AnatomicalStructure"
    ],
    "description": "Other anatomical structures to which this structure is connected.",
    "types": [
      "AnatomicalStructure"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "timeOfDay": {
    "title": "timeOfDay",
    "classes": [
      "EducationalOccupationalProgram"
    ],
    "description": "The time of day the program normally runs. For example, \"evenings\".",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "numberOfPreviousOwners": {
    "title": "numberOfPreviousOwners",
    "classes": [
      "Vehicle"
    ],
    "description": "The number of owners of the vehicle, including the current one.\\n\\nTypical unit code(s): C62.",
    "types": [
      "Number",
      "QuantitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "requiresSubscription": {
    "title": "requiresSubscription",
    "classes": [
      "ActionAccessSpecification",
      "MediaObject"
    ],
    "description": "Indicates if use of the media require a subscription  (either paid or free). Allowed values are ```true``` or ```false``` (note that an earlier version had 'yes', 'no').",
    "types": [
      "MediaSubscription",
      "Boolean"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "branchOf": {
    "title": "branchOf",
    "classes": [
      "LocalBusiness"
    ],
    "description": "The larger organization that this local business is a branch of, if any. Not to be confused with (anatomical) [[branch]].",
    "types": [
      "Organization"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "addressRegion": {
    "title": "addressRegion",
    "classes": [
      "DefinedRegion",
      "PostalAddress"
    ],
    "description": "The region in which the locality is, and which is in the country. For example, California or another appropriate first-level [Administrative division](https://en.wikipedia.org/wiki/List_of_administrative_divisions_by_country).",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "renegotiableLoan": {
    "title": "renegotiableLoan",
    "classes": [
      "LoanOrCredit"
    ],
    "description": "Whether the terms for payment of interest can be renegotiated during the life of the loan.",
    "types": [
      "Boolean"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "abstract": {
    "title": "abstract",
    "classes": [
      "CreativeWork"
    ],
    "description": "An abstract is a short description that summarizes a [[CreativeWork]].",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "operatingSystem": {
    "title": "operatingSystem",
    "classes": [
      "SoftwareApplication",
      "Software"
    ],
    "description": "Operating systems supported (Windows 7, OS X 10.6, Android 1.6).",
    "types": [
      "Text",
      "SoftwareApplication"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia",
      "YAGO"
    ],
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ]
  },
  "transitTime": {
    "title": "transitTime",
    "classes": [
      "ShippingDeliveryTime"
    ],
    "description": "The typical delay the order has been sent for delivery and the goods reach the final customer. Typical properties: minValue, maxValue, unitCode (d for DAY).",
    "types": [
      "QuantitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "termCode": {
    "title": "termCode",
    "classes": [
      "DefinedTerm"
    ],
    "description": "A code that identifies this [[DefinedTerm]] within a [[DefinedTermSet]].",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "height": {
    "title": "height",
    "classes": [
      "OfferShippingDetails",
      "Product",
      "Person",
      "VisualArtwork",
      "MediaObject",
      "ConveyorSystem",
      "MovingWalkway",
      "MeanOfTransportation",
      "Escalator",
      "On-SiteTransportation",
      "Engine",
      "Weapon",
      "N779127fe6bff4d2fa8e26e8721d9b080"
    ],
    "description": "The height of the item.",
    "types": [
      "QuantitativeValue",
      "Distance",
      "millimetre",
      "centimetre",
      "XMLSchema#double"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia",
      "YAGO"
    ]
  },
  "driveWheelConfiguration": {
    "title": "driveWheelConfiguration",
    "classes": [
      "Vehicle"
    ],
    "description": "The drive wheel configuration, i.e. which roadwheels will receive torque from the vehicle's engine via the drivetrain.",
    "types": [
      "DriveWheelConfigurationValue",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "usageInfo": {
    "title": "usageInfo",
    "classes": [
      "CreativeWork"
    ],
    "description": "The schema.org [[usageInfo]] property indicates further information about a [[CreativeWork]]. This property is applicable both to works that are freely available and to those that require payment or other transactions. It can reference additional information, e.g. community expectations on preferred linking and citation conventions, as well as purchasing details. For something that can be commercially licensed, usageInfo can provide detailed, resource-specific information about licensing options.\n\nThis property can be used alongside the license property which indicates license(s) applicable to some piece of content. The usageInfo property can provide information about other licensing options, e.g. acquiring commercial usage rights for an image that is also available under non-commercial creative commons licenses.",
    "types": [
      "CreativeWork",
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "interactingDrug": {
    "title": "interactingDrug",
    "classes": [
      "Drug"
    ],
    "description": "Another drug that is known to interact with this drug in a way that impacts the effect of this drug or causes a risk to the patient. Note: disease interactions are typically captured as contraindications.",
    "types": [
      "Drug"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "isBasedOn": {
    "title": "isBasedOn",
    "classes": [
      "CreativeWork"
    ],
    "description": "A resource from which this work is derived or from which it is a modification or adaptation.",
    "types": [
      "URL",
      "CreativeWork",
      "Product"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "physiologicalBenefits": {
    "title": "physiologicalBenefits",
    "classes": [
      "Diet"
    ],
    "description": "Specific physiologic benefits associated to the plan.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "encodesBioChemEntity": {
    "title": "encodesBioChemEntity",
    "classes": [
      "Gene"
    ],
    "description": "Another BioChemEntity encoded by this one. ",
    "types": [
      "BioChemEntity"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "replyToUrl": {
    "title": "replyToUrl",
    "classes": [
      "UserComments"
    ],
    "description": "The URL at which a reply may be posted to the specified UserComment.",
    "types": [
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "shippingOrigin": {
    "title": "shippingOrigin",
    "classes": [
      "OfferShippingDetails"
    ],
    "description": "Indicates the origin of a shipment, i.e. where it should be coming from.",
    "types": [
      "DefinedRegion"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "photos": {
    "title": "photos",
    "classes": [
      "Place"
    ],
    "description": "Photographs of this place.",
    "types": [
      "Photograph",
      "ImageObject"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "hasMap": {
    "title": "hasMap",
    "classes": [
      "Place"
    ],
    "description": "A URL to a map of the place.",
    "types": [
      "URL",
      "Map"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "creditText": {
    "title": "creditText",
    "classes": [
      "CreativeWork"
    ],
    "description": "Text that can be used to credit person(s) and/or organization(s) associated with a published Creative Work.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "serviceOperator": {
    "title": "serviceOperator",
    "classes": [
      "GovernmentService"
    ],
    "description": "The operating organization, if different from the provider.  This enables the representation of services that are provided by an organization, but operated by another organization like a subcontractor.",
    "types": [
      "Organization"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "codingSystem": {
    "title": "codingSystem",
    "classes": [
      "MedicalCode"
    ],
    "description": "The coding system, e.g. 'ICD-10'.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "recipeCuisine": {
    "title": "recipeCuisine",
    "classes": [
      "Recipe"
    ],
    "description": "The cuisine of the recipe (for example, French or Ethiopian).",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "dateDeleted": {
    "title": "dateDeleted",
    "classes": [
      "DataFeedItem"
    ],
    "description": "The datetime the item was removed from the DataFeed.",
    "types": [
      "DateTime",
      "Date"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "pageEnd": {
    "title": "pageEnd",
    "classes": [
      "Article",
      "PublicationVolume",
      "Chapter",
      "PublicationIssue"
    ],
    "description": "The page on which the work ends; for example \"138\" or \"xvi\".",
    "types": [
      "Integer",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "alignmentType": {
    "title": "alignmentType",
    "classes": [
      "AlignmentObject"
    ],
    "description": "A category of alignment between the learning resource and the framework node. Recommended values include: 'requires', 'textComplexity', 'readingLevel', and 'educationalSubject'.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "webCheckinTime": {
    "title": "webCheckinTime",
    "classes": [
      "Flight"
    ],
    "description": "The time when a passenger can check into the flight online.",
    "types": [
      "DateTime"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "dropoffTime": {
    "title": "dropoffTime",
    "classes": [
      "RentalCarReservation"
    ],
    "description": "When a rental car can be dropped off.",
    "types": [
      "DateTime"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "suggestedMeasurement": {
    "title": "suggestedMeasurement",
    "classes": [
      "SizeSpecification",
      "PeopleAudience"
    ],
    "description": "A suggested range of body measurements for the intended audience or person, for example inseam between 32 and 34 inches or height between 170 and 190 cm. Typically found on a size chart for wearable products.",
    "types": [
      "QuantitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "funding": {
    "title": "funding",
    "classes": [
      "MedicalEntity",
      "Event",
      "BioChemEntity",
      "CreativeWork",
      "Product",
      "Organization",
      "Person"
    ],
    "description": "A [[Grant]] that directly or indirectly provide funding or sponsorship for this item. See also [[ownershipFundingInfo]].",
    "types": [
      "Grant"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "subtitleLanguage": {
    "title": "subtitleLanguage",
    "classes": [
      "Movie",
      "TVEpisode",
      "ScreeningEvent",
      "BroadcastEvent"
    ],
    "description": "Languages in which subtitles/captions are available, in [IETF BCP 47 standard format](http://tools.ietf.org/html/bcp47).",
    "types": [
      "Text",
      "Language"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "percentile25": {
    "title": "percentile25",
    "classes": [
      "QuantitativeValueDistribution"
    ],
    "description": "The 25th percentile value.",
    "types": [
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "printPage": {
    "title": "printPage",
    "classes": [
      "NewsArticle"
    ],
    "description": "If this NewsArticle appears in print, this field indicates the name of the page on which the article is found. Please note that this field is intended for the exact page name (e.g. A5, B18).",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "advanceBookingRequirement": {
    "title": "advanceBookingRequirement",
    "classes": [
      "Demand",
      "Offer"
    ],
    "description": "The amount of time that is required between accepting the offer and the actual usage of the resource or service.",
    "types": [
      "QuantitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "legislationDateVersion": {
    "title": "legislationDateVersion",
    "classes": [
      "Legislation"
    ],
    "description": "The point-in-time at which the provided description of the legislation is valid (e.g.: when looking at the law on the 2016-04-07 (= dateVersion), I get the consolidation of 2015-04-12 of the \"National Insurance Contributions Act 2015\")",
    "types": [
      "Date"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "specialOpeningHoursSpecification": {
    "title": "specialOpeningHoursSpecification",
    "classes": [
      "Place"
    ],
    "description": "The special opening hours of a certain place.\\n\\nUse this to explicitly override general opening hours brought in scope by [[openingHoursSpecification]] or [[openingHours]].\n      ",
    "types": [
      "OpeningHoursSpecification"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "repeatFrequency": {
    "title": "repeatFrequency",
    "classes": [
      "Schedule"
    ],
    "description": "Defines the frequency at which [[Event]]s will occur according to a schedule [[Schedule]]. The intervals between\n      events should be defined as a [[Duration]] of time.",
    "types": [
      "Duration",
      "Text"
    ],
    "subPropertyOf": [
      "frequency"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "requiredMaxAge": {
    "title": "requiredMaxAge",
    "classes": [
      "PeopleAudience"
    ],
    "description": "Audiences defined by a person's maximum age.",
    "types": [
      "Integer"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "suggestedMinAge": {
    "title": "suggestedMinAge",
    "classes": [
      "PeopleAudience"
    ],
    "description": "Minimum recommended age in years for the audience or user.",
    "types": [
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "numberOfBathroomsTotal": {
    "title": "numberOfBathroomsTotal",
    "classes": [
      "Accommodation",
      "FloorPlan"
    ],
    "description": "The total integer number of bathrooms in some [[Accommodation]], following real estate conventions as [documented in RESO](https://ddwiki.reso.org/display/DDW17/BathroomsTotalInteger+Field): \"The simple sum of the number of bathrooms. For example for a property with two Full Bathrooms and one Half Bathroom, the Bathrooms Total Integer will be 3.\". See also [[numberOfRooms]].",
    "types": [
      "Integer"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "includedInDataCatalog": {
    "title": "includedInDataCatalog",
    "classes": [
      "Dataset"
    ],
    "description": "A data catalog which contains this dataset.",
    "types": [
      "DataCatalog"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "trainNumber": {
    "title": "trainNumber",
    "classes": [
      "TrainTrip"
    ],
    "description": "The unique identifier for the train.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "referencesOrder": {
    "title": "referencesOrder",
    "classes": [
      "Invoice"
    ],
    "description": "The Order(s) related to this Invoice. One or more Orders may be combined into a single Invoice.",
    "types": [
      "Order"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "encodesCreativeWork": {
    "title": "encodesCreativeWork",
    "classes": [
      "MediaObject"
    ],
    "description": "The CreativeWork encoded by this media object.",
    "types": [
      "CreativeWork"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "downvoteCount": {
    "title": "downvoteCount",
    "classes": [
      "Comment"
    ],
    "description": "The number of downvotes this question, answer or comment has received from the community.",
    "types": [
      "Integer"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "smokingAllowed": {
    "title": "smokingAllowed",
    "classes": [
      "Place"
    ],
    "description": "Indicates whether it is allowed to smoke in the place, e.g. in the restaurant, hotel or hotel room.",
    "types": [
      "Boolean"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "reservationId": {
    "title": "reservationId",
    "classes": [
      "Reservation"
    ],
    "description": "A unique identifier for the reservation.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "colorSwatch": {
    "title": "colorSwatch",
    "classes": [
      "Product"
    ],
    "description": "A color swatch image, visualizing the color of a [[Product]]. Should match the textual description specified in the [[color]] property. This can be a URL or a fully described ImageObject.",
    "types": [
      "URL",
      "ImageObject"
    ],
    "subPropertyOf": [
      "image"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "isBasedOnUrl": {
    "title": "isBasedOnUrl",
    "classes": [
      "CreativeWork"
    ],
    "description": "A resource that was used in the creation of this resource. This term can be repeated for multiple sources. For example, http://example.com/great-multiplication-intro.html.",
    "types": [
      "CreativeWork",
      "Product",
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "cookingMethod": {
    "title": "cookingMethod",
    "classes": [
      "Recipe"
    ],
    "description": "The method of cooking, such as Frying, Steaming, ...",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "telephone": {
    "title": "telephone",
    "classes": [
      "Organization",
      "Person",
      "Place",
      "ContactPoint",
      "N5bf91aec0f114ebc9a8dc0b4dec676ca"
    ],
    "description": "The telephone number.",
    "types": [
      "Text",
      "XMLSchema#string"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "organizer": {
    "title": "organizer",
    "classes": [
      "Event"
    ],
    "description": "An organizer of an Event.",
    "types": [
      "Organization",
      "Person",
      "Na5764686bd164a4bafa452c5e8760694"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "seasons": {
    "title": "seasons",
    "classes": [
      "VideoGameSeries",
      "TVSeries",
      "RadioSeries"
    ],
    "description": "A season in a media series.",
    "types": [
      "CreativeWorkSeason"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "seatingCapacity": {
    "title": "seatingCapacity",
    "classes": [
      "Vehicle",
      "Building"
    ],
    "description": "The number of persons that can be seated (e.g. in a vehicle), both in terms of the physical space available, and in terms of limitations set by law.\\n\\nTypical unit code(s): C62 for persons.",
    "types": [
      "Number",
      "QuantitativeValue",
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ]
  },
  "reviewRating": {
    "title": "reviewRating",
    "classes": [
      "Review"
    ],
    "description": "The rating given in this review. Note that reviews can themselves be rated. The ```reviewRating``` applies to rating given by the review. The [[aggregateRating]] property applies to the review itself, as a creative work.",
    "types": [
      "Rating"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "ratingValue": {
    "title": "ratingValue",
    "classes": [
      "Rating"
    ],
    "description": "The rating for the content.\\n\\nUsage guidelines:\\n\\n* Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similar Unicode symbols.\\n* Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.",
    "types": [
      "Number",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "adverseOutcome": {
    "title": "adverseOutcome",
    "classes": [
      "MedicalDevice",
      "TherapeuticProcedure"
    ],
    "description": "A possible complication and/or side effect of this therapy. If it is known that an adverse outcome is serious (resulting in death, disability, or permanent damage; requiring hospitalization; or otherwise life-threatening or requiring immediate medical attention), tag it as a seriousAdverseOutcome instead.",
    "types": [
      "MedicalEntity"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "answerExplanation": {
    "title": "answerExplanation",
    "classes": [
      "Answer"
    ],
    "description": "A step-by-step or full explanation about Answer. Can outline how this Answer was achieved or contain more broad clarification or statement about it. ",
    "types": [
      "Comment",
      "WebContent"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "orderQuantity": {
    "title": "orderQuantity",
    "classes": [
      "OrderItem"
    ],
    "description": "The number of the item ordered. If the property is not set, assume the quantity is one.",
    "types": [
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "numberedPosition": {
    "title": "numberedPosition",
    "classes": [
      "OrganizationRole"
    ],
    "description": "A number associated with a role in an organization, for example, the number on an athlete's jersey.",
    "types": [
      "Number"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "inCodeSet": {
    "title": "inCodeSet",
    "classes": [
      "CategoryCode"
    ],
    "description": "A [[CategoryCodeSet]] that contains this category code.",
    "types": [
      "URL",
      "CategoryCodeSet"
    ],
    "subPropertyOf": [
      "inDefinedTermSet"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "domiciledMortgage": {
    "title": "domiciledMortgage",
    "classes": [
      "MortgageLoan"
    ],
    "description": "Whether borrower is a resident of the jurisdiction where the property is located.",
    "types": [
      "Boolean"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "menuAddOn": {
    "title": "menuAddOn",
    "classes": [
      "MenuItem"
    ],
    "description": "Additional menu item(s) such as a side dish of salad or side order of fries that can be added to this menu item. Additionally it can be a menu section containing allowed add-on menu items for this menu item.",
    "types": [
      "MenuSection",
      "MenuItem"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "baseSalary": {
    "title": "baseSalary",
    "classes": [
      "EmployeeRole",
      "JobPosting"
    ],
    "description": "The base salary of the job or of an employee in an EmployeeRole.",
    "types": [
      "Number",
      "MonetaryAmount",
      "PriceSpecification"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "actionableFeedbackPolicy": {
    "title": "actionableFeedbackPolicy",
    "classes": [
      "Organization",
      "NewsMediaOrganization"
    ],
    "description": "For a [[NewsMediaOrganization]] or other news-related [[Organization]], a statement about public engagement activities (for news media, the newsroom\u2019s), including involving the public - digitally or otherwise -- in coverage decisions, reporting and activities after publication.",
    "types": [
      "CreativeWork",
      "URL"
    ],
    "subPropertyOf": [
      "publishingPrinciples"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "bodyType": {
    "title": "bodyType",
    "classes": [
      "Vehicle"
    ],
    "description": "Indicates the design and body style of the vehicle (e.g. station wagon, hatchback, etc.).",
    "types": [
      "QualitativeValue",
      "Text",
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "startDate": {
    "title": "startDate",
    "classes": [
      "CreativeWorkSeason",
      "DatedMoneySpecification",
      "Event",
      "Role",
      "Schedule",
      "MerchantReturnPolicySeasonalOverride",
      "CreativeWorkSeries",
      "EducationalOccupationalProgram"
    ],
    "description": "The start date and time of the item (in [ISO 8601 date format](http://en.wikipedia.org/wiki/ISO_8601)).\nThe start date of the event.\nThe start date and time of the item (in <a href=\"http://en.wikipedia.org/wiki/ISO_8601\">ISO 8601 date format</a>).",
    "types": [
      "DateTime",
      "Date",
      "XMLSchema#date",
      "Nc6b77990a9a443729bc5fc14c189d8b2"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia",
      "YAGO"
    ]
  },
  "mileageFromOdometer": {
    "title": "mileageFromOdometer",
    "classes": [
      "Vehicle"
    ],
    "description": "The total distance travelled by the particular vehicle since its initial production, as read from its odometer.\\n\\nTypical unit code(s): KMT for kilometers, SMI for statute miles.",
    "types": [
      "QuantitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "numConstraints": {
    "title": "numConstraints",
    "classes": [
      "ConstraintNode"
    ],
    "description": "Indicates the number of constraints property values defined for a particular [[ConstraintNode]] such as [[StatisticalVariable]]. This helps applications understand if they have access to a sufficiently complete description of a [[StatisticalVariable]] or other construct that is defined using properties on template-style nodes.",
    "types": [
      "Integer"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "itemReviewed": {
    "title": "itemReviewed",
    "classes": [
      "AggregateRating",
      "Review"
    ],
    "description": "The item that is being reviewed/rated.",
    "types": [
      "Thing"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "hasBioPolymerSequence": {
    "title": "hasBioPolymerSequence",
    "classes": [
      "Protein",
      "Gene"
    ],
    "description": "A symbolic representation of a BioChemEntity. For example, a nucleotide sequence of a Gene or an amino acid sequence of a Protein.",
    "types": [
      "Text"
    ],
    "subPropertyOf": [
      "hasRepresentation"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "totalHistoricalEnrollment": {
    "title": "totalHistoricalEnrollment",
    "classes": [
      "Course"
    ],
    "description": "The total number of students that have enrolled in the history of the course.",
    "types": [
      "Integer"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "requiredCollateral": {
    "title": "requiredCollateral",
    "classes": [
      "LoanOrCredit"
    ],
    "description": "Assets required to secure loan or credit repayments. It may take form of third party pledge, goods, financial instruments (cash, securities, etc.)",
    "types": [
      "Text",
      "Thing"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "trainName": {
    "title": "trainName",
    "classes": [
      "TrainTrip"
    ],
    "description": "The name of the train (e.g. The Orient Express).",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "legislationTransposes": {
    "title": "legislationTransposes",
    "classes": [
      "Legislation"
    ],
    "description": "Indicates that this legislation (or part of legislation) fulfills the objectives set by another legislation, by passing appropriate implementation measures. Typically, some legislations of European Union's member states or regions transpose European Directives. This indicates a legally binding link between the 2 legislations.",
    "types": [
      "Legislation"
    ],
    "subPropertyOf": [
      "legislationApplies"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "numberOfDoors": {
    "title": "numberOfDoors",
    "classes": [
      "Vehicle"
    ],
    "description": "The number of doors.\\n\\nTypical unit code(s): C62.",
    "types": [
      "Number",
      "QuantitativeValue"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "articleBody": {
    "title": "articleBody",
    "classes": [
      "Article"
    ],
    "description": "The actual body of the article.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "evidenceLevel": {
    "title": "evidenceLevel",
    "classes": [
      "MedicalGuideline"
    ],
    "description": "Strength of evidence of the data used to formulate the guideline (enumerated).",
    "types": [
      "MedicalEvidenceLevel"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "mpn": {
    "title": "mpn",
    "classes": [
      "Demand",
      "Product",
      "Offer"
    ],
    "description": "The Manufacturer Part Number (MPN) of the product, or the product to which the offer refers.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "returnMethod": {
    "title": "returnMethod",
    "classes": [
      "MerchantReturnPolicy",
      "MerchantReturnPolicySeasonalOverride"
    ],
    "description": "The type of return method offered, specified from an enumeration.",
    "types": [
      "ReturnMethodEnumeration"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "jobImmediateStart": {
    "title": "jobImmediateStart",
    "classes": [
      "JobPosting"
    ],
    "description": "An indicator as to whether a position is available for an immediate start.",
    "types": [
      "Boolean"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "arrivalTime": {
    "title": "arrivalTime",
    "classes": [
      "Trip"
    ],
    "description": "The expected arrival time.",
    "types": [
      "DateTime",
      "Time"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "interactionType": {
    "title": "interactionType",
    "classes": [
      "InteractionCounter"
    ],
    "description": "The Action representing the type of interaction. For up votes, +1s, etc. use [[LikeAction]]. For down votes use [[DislikeAction]]. Otherwise, use the most specific Action.",
    "types": [
      "Action"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "address": {
    "title": "address",
    "classes": [
      "Place",
      "GeoShape",
      "GeoCoordinates",
      "Organization",
      "Person"
    ],
    "description": "Physical address of the item.\nAddress of something as literal. Usually Building, but we also use it for the address of a Region's or Settlement's government",
    "types": [
      "Text",
      "PostalAddress",
      "22-rdf-syntax-ns#langString"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ]
  },
  "availableOnDevice": {
    "title": "availableOnDevice",
    "classes": [
      "SoftwareApplication"
    ],
    "description": "Device required to run the application. Used in cases where a specific make/model is required to run the application.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "regionsAllowed": {
    "title": "regionsAllowed",
    "classes": [
      "MediaObject"
    ],
    "description": "The regions where the media is allowed. If not specified, then it's assumed to be allowed everywhere. Specify the countries in [ISO 3166 format](http://en.wikipedia.org/wiki/ISO_3166).",
    "types": [
      "Place"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "recordedAt": {
    "title": "recordedAt",
    "classes": [
      "CreativeWork"
    ],
    "description": "The Event where the CreativeWork was recorded. The CreativeWork may capture all or part of the event.",
    "types": [
      "Event"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "supplyTo": {
    "title": "supplyTo",
    "classes": [
      "Artery"
    ],
    "description": "The area to which the artery supplies blood.",
    "types": [
      "AnatomicalStructure"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "parentOrganization": {
    "title": "parentOrganization",
    "classes": [
      "Organization"
    ],
    "description": "The larger organization that this organization is a [[subOrganization]] of, if any.\nThe larger organization that this organization is a <a class=\"localLink\" href=\"http://schema.org/subOrganization\">subOrganization</a> of, if any.",
    "types": [
      "Organization"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "returnPolicyCategory": {
    "title": "returnPolicyCategory",
    "classes": [
      "MerchantReturnPolicy",
      "MerchantReturnPolicySeasonalOverride"
    ],
    "description": "Specifies an applicable return policy (from an enumeration).",
    "types": [
      "MerchantReturnEnumeration"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "ineligibleRegion": {
    "title": "ineligibleRegion",
    "classes": [
      "Demand",
      "Offer",
      "ActionAccessSpecification",
      "MediaObject",
      "DeliveryChargeSpecification"
    ],
    "description": "The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place, or the GeoShape for the geo-political region(s) for which the offer or delivery charge specification is not valid, e.g. a region where the transaction is not allowed.\\n\\nSee also [[eligibleRegion]].\n      ",
    "types": [
      "Place",
      "Text",
      "GeoShape"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "chemicalComposition": {
    "title": "chemicalComposition",
    "classes": [
      "ChemicalSubstance"
    ],
    "description": "The chemical composition describes the identity and relative ratio of the chemical elements that make up the substance.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "foodWarning": {
    "title": "foodWarning",
    "classes": [
      "Drug"
    ],
    "description": "Any precaution, guidance, contraindication, etc. related to consumption of specific foods while taking this drug.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "additionalName": {
    "title": "additionalName",
    "classes": [
      "Person"
    ],
    "description": "An additional name for a Person, can be used for a middle name.",
    "types": [
      "Text"
    ],
    "subPropertyOf": [
      "alternateName"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "backstory": {
    "title": "backstory",
    "classes": [
      "Article"
    ],
    "description": "For an [[Article]], typically a [[NewsArticle]], the backstory property provides a textual summary giving a brief explanation of why and how an article was created. In a journalistic setting this could include information about reporting process, methods, interviews, data sources, etc.",
    "types": [
      "Text",
      "CreativeWork"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "credentialCategory": {
    "title": "credentialCategory",
    "classes": [
      "EducationalOccupationalCredential"
    ],
    "description": "The category or type of credential being described, for example \"degree\u201d, \u201ccertificate\u201d, \u201cbadge\u201d, or more specific term.",
    "types": [
      "URL",
      "Text",
      "DefinedTerm"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "acceptedAnswer": {
    "title": "acceptedAnswer",
    "classes": [
      "Question"
    ],
    "description": "The answer(s) that has been accepted as best, typically on a Question/Answer site. Sites vary in their selection mechanisms, e.g. drawing on community opinion and/or the view of the Question author.",
    "types": [
      "ItemList",
      "Answer"
    ],
    "subPropertyOf": [
      "suggestedAnswer"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "fileFormat": {
    "title": "fileFormat",
    "classes": [
      "CreativeWork"
    ],
    "description": "Media type, typically MIME format (see [IANA site](http://www.iana.org/assignments/media-types/media-types.xhtml)) of the content, e.g. application/zip of a SoftwareApplication binary. In cases where a CreativeWork has several media type representations, 'encoding' can be used to indicate each MediaObject alongside particular fileFormat information. Unregistered or niche file formats can be indicated instead via the most appropriate URL, e.g. defining Web page or a Wikipedia entry.",
    "types": [
      "Text",
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "expectedArrivalUntil": {
    "title": "expectedArrivalUntil",
    "classes": [
      "ParcelDelivery"
    ],
    "description": "The latest date the package may arrive.",
    "types": [
      "DateTime",
      "Date"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "cookTime": {
    "title": "cookTime",
    "classes": [
      "Recipe"
    ],
    "description": "The time it takes to actually cook the dish, in [ISO 8601 duration format](http://en.wikipedia.org/wiki/ISO_8601).",
    "types": [
      "Duration"
    ],
    "subPropertyOf": [
      "performTime"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "carrier": {
    "title": "carrier",
    "classes": [
      "Flight",
      "ParcelDelivery"
    ],
    "description": "'carrier' is an out-dated term indicating the 'provider' for parcel delivery and flights.",
    "types": [
      "Organization"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "drug": {
    "title": "drug",
    "classes": [
      "TherapeuticProcedure",
      "Patient",
      "DrugClass",
      "MedicalCondition"
    ],
    "description": "Specifying a drug or medicine used in a medication procedure.",
    "types": [
      "Drug"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "inSupportOf": {
    "title": "inSupportOf",
    "classes": [
      "Thesis"
    ],
    "description": "Qualification, candidature, degree, application that Thesis supports.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "speechToTextMarkup": {
    "title": "speechToTextMarkup",
    "classes": [
      "PronounceableText"
    ],
    "description": "Form of markup used. eg. [SSML](https://www.w3.org/TR/speech-synthesis11) or [IPA](https://www.wikidata.org/wiki/Property:P898).",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "sdPublisher": {
    "title": "sdPublisher",
    "classes": [
      "CreativeWork"
    ],
    "description": "Indicates the party responsible for generating and publishing the current structured data markup, typically in cases where the structured data is derived automatically from existing published content but published on a different site. For example, student projects and open data initiatives often re-publish existing content with more explicitly structured metadata. The\n[[sdPublisher]] property helps make such practices more explicit.",
    "types": [
      "Organization",
      "Person"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "customer": {
    "title": "customer",
    "classes": [
      "Order",
      "Invoice"
    ],
    "description": "Party placing the order or paying the invoice.",
    "types": [
      "Organization",
      "Person"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "subStructure": {
    "title": "subStructure",
    "classes": [
      "AnatomicalStructure"
    ],
    "description": "Component (sub-)structure(s) that comprise this anatomical structure.",
    "types": [
      "AnatomicalStructure"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "transitTimeLabel": {
    "title": "transitTimeLabel",
    "classes": [
      "OfferShippingDetails",
      "DeliveryTimeSettings"
    ],
    "description": "Label to match an [[OfferShippingDetails]] with a [[DeliveryTimeSettings]] (within the context of a [[shippingSettingsLink]] cross-reference).",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "educationalCredentialAwarded": {
    "title": "educationalCredentialAwarded",
    "classes": [
      "Course",
      "EducationalOccupationalProgram"
    ],
    "description": "A description of the qualification, award, certificate, diploma or other educational credential awarded as a consequence of successful completion of this course or program.",
    "types": [
      "URL",
      "EducationalOccupationalCredential",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "partOfTrip": {
    "title": "partOfTrip",
    "classes": [
      "Trip"
    ],
    "description": "Identifies that this [[Trip]] is a subTrip of another Trip.  For example Day 1, Day 2, etc. of a multi-day trip.",
    "types": [
      "Trip"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "hasDigitalDocumentPermission": {
    "title": "hasDigitalDocumentPermission",
    "classes": [
      "DigitalDocument"
    ],
    "description": "A permission related to the access to this document (e.g. permission to read or write an electronic document). For a public document, specify a grantee with an Audience with audienceType equal to \"public\".",
    "types": [
      "DigitalDocumentPermission"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "codeSampleType": {
    "title": "codeSampleType",
    "classes": [
      "SoftwareSourceCode"
    ],
    "description": "What type of code sample: full (compile ready) solution, code snippet, inline code, scripts, template.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "arrivalAirport": {
    "title": "arrivalAirport",
    "classes": [
      "Flight"
    ],
    "description": "The airport where the flight terminates.",
    "types": [
      "Airport"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "tool": {
    "title": "tool",
    "classes": [
      "HowTo",
      "HowToDirection"
    ],
    "description": "A sub property of instrument. An object used (but not consumed) when performing instructions or a direction.",
    "types": [
      "HowToTool",
      "Text"
    ],
    "subPropertyOf": [
      "instrument"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "expertConsiderations": {
    "title": "expertConsiderations",
    "classes": [
      "Diet"
    ],
    "description": "Medical expert advice related to the plan.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "colleagues": {
    "title": "colleagues",
    "classes": [
      "Person"
    ],
    "description": "A colleague of the person.",
    "types": [
      "Person"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "copyrightHolder": {
    "title": "copyrightHolder",
    "classes": [
      "CreativeWork"
    ],
    "description": "The party holding the legal copyright to the CreativeWork.",
    "types": [
      "Organization",
      "Person",
      "N65b49a720df94bc5be42ef44df59999b"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "returnLabelSource": {
    "title": "returnLabelSource",
    "classes": [
      "MerchantReturnPolicy"
    ],
    "description": "The method (from an enumeration) by which the customer obtains a return shipping label for a product returned for any reason.",
    "types": [
      "ReturnLabelSourceEnumeration"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "availableFrom": {
    "title": "availableFrom",
    "classes": [
      "DeliveryEvent"
    ],
    "description": "When the item is available for pickup from the store, locker, etc.",
    "types": [
      "DateTime"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "applicationStartDate": {
    "title": "applicationStartDate",
    "classes": [
      "EducationalOccupationalProgram"
    ],
    "description": "The date at which the program begins collecting applications for the next enrollment cycle.",
    "types": [
      "Date"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "availableAtOrFrom": {
    "title": "availableAtOrFrom",
    "classes": [
      "Demand",
      "Offer"
    ],
    "description": "The place(s) from which the offer can be obtained (e.g. store locations).",
    "types": [
      "Place"
    ],
    "subPropertyOf": [
      "areaServed"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "publishedBy": {
    "title": "publishedBy",
    "classes": [
      "PublicationEvent"
    ],
    "description": "An agent associated with the publication event.",
    "types": [
      "Organization",
      "Person"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "expressedIn": {
    "title": "expressedIn",
    "classes": [
      "Gene"
    ],
    "description": "Tissue, organ, biological sample, etc in which activity of this gene has been observed experimentally. For example brain, digestive system.",
    "types": [
      "AnatomicalStructure",
      "BioChemEntity",
      "DefinedTerm",
      "AnatomicalSystem",
      "Thing"
    ],
    "ontology": [
      "Schema ORG",
      "YAGO"
    ]
  },
  "arrivalGate": {
    "title": "arrivalGate",
    "classes": [
      "Flight"
    ],
    "description": "Identifier of the flight's arrival gate.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "subjectOf": {
    "title": "subjectOf",
    "classes": [
      "Thing"
    ],
    "description": "A CreativeWork or Event about this Thing.",
    "types": [
      "CreativeWork",
      "Event"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "depth": {
    "title": "depth",
    "classes": [
      "Product",
      "VisualArtwork",
      "OfferShippingDetails",
      "Place",
      "Na124bfde35c443b99785e7c003306e5a"
    ],
    "description": "The depth of the item.\nIs a measure of the distance between a reference height and a point underneath. The exact meaning for a place is unclear. If possible, use  or  to be unambiguous.\nThe depth of the item.",
    "types": [
      "Distance",
      "QuantitativeValue",
      "XMLSchema#double"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia",
      "YAGO"
    ]
  },
  "reviews": {
    "title": "reviews",
    "classes": [
      "CreativeWork",
      "Product",
      "Offer",
      "Place",
      "Organization"
    ],
    "description": "Review of the item.",
    "types": [
      "Review"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "functionalClass": {
    "title": "functionalClass",
    "classes": [
      "Joint"
    ],
    "description": "The degree of mobility the joint allows.",
    "types": [
      "Text",
      "MedicalEntity"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "discussionUrl": {
    "title": "discussionUrl",
    "classes": [
      "CreativeWork"
    ],
    "description": "A link to the page containing the comments of the CreativeWork.",
    "types": [
      "URL"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "isRelatedTo": {
    "title": "isRelatedTo",
    "classes": [
      "Service",
      "Product"
    ],
    "description": "A pointer to another, somehow related product (or multiple products).",
    "types": [
      "Service",
      "Product"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "governmentBenefitsInfo": {
    "title": "governmentBenefitsInfo",
    "classes": [
      "SpecialAnnouncement"
    ],
    "description": "governmentBenefitsInfo provides information about government benefits associated with a SpecialAnnouncement.",
    "types": [
      "GovernmentService"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "headline": {
    "title": "headline",
    "classes": [
      "CreativeWork"
    ],
    "description": "Headline of the article.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "seasonNumber": {
    "title": "seasonNumber",
    "classes": [
      "CreativeWorkSeason",
      "TelevisionEpisode"
    ],
    "description": "Position of the season within an ordered group of seasons.\nThe season number to which the TelevisionEpisode belongs.",
    "types": [
      "Integer",
      "Text",
      "XMLSchema#nonNegativeInteger"
    ],
    "subPropertyOf": [
      "position"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ]
  },
  "events": {
    "title": "events",
    "classes": [
      "Organization",
      "Place"
    ],
    "description": "Upcoming or past events associated with this place or organization.",
    "types": [
      "Event"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "carrierRequirements": {
    "title": "carrierRequirements",
    "classes": [
      "MobileApplication"
    ],
    "description": "Specifies specific carrier(s) requirements for the application (e.g. an application may only work on a specific carrier network).",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "employee": {
    "title": "employee",
    "classes": [
      "Organization"
    ],
    "description": "Someone working for this organization.",
    "types": [
      "Person"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "schemaVersion": {
    "title": "schemaVersion",
    "classes": [
      "CreativeWork"
    ],
    "description": "Indicates (by URL or string) a particular version of a schema used in some CreativeWork. This property was created primarily to\n    indicate the use of a specific schema.org release, e.g. ```10.0``` as a simple string, or more explicitly via URL, ```https://schema.org/docs/releases.html#v10.0```. There may be situations in which other schemas might usefully be referenced this way, e.g. ```http://dublincore.org/specifications/dublin-core/dces/1999-07-02/``` but this has not been carefully explored in the community.",
    "types": [
      "URL",
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "collection": {
    "title": "collection",
    "classes": [
      "UpdateAction",
      "Museum"
    ],
    "description": "A sub property of object. The collection target of the action.",
    "types": [
      "Thing",
      "XMLSchema#string"
    ],
    "subPropertyOf": [
      "object"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia"
    ]
  },
  "paymentMethodId": {
    "title": "paymentMethodId",
    "classes": [
      "Order",
      "Invoice"
    ],
    "description": "An identifier for the method of payment used (e.g. the last 4 digits of the credit card).",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "gameLocation": {
    "title": "gameLocation",
    "classes": [
      "VideoGameSeries",
      "Game"
    ],
    "description": "Real or fictional location of the game (or part of game).",
    "types": [
      "URL",
      "Place",
      "PostalAddress"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "countryOfLastProcessing": {
    "title": "countryOfLastProcessing",
    "classes": [
      "Product"
    ],
    "description": "The place where the item (typically [[Product]]) was last processed and tested before importation.",
    "types": [
      "Text"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "closes": {
    "title": "closes",
    "classes": [
      "OpeningHoursSpecification"
    ],
    "description": "The closing hour of the place or service on the given day(s) of the week.",
    "types": [
      "Time"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "publisher": {
    "title": "publisher",
    "classes": [
      "CreativeWork",
      "Work"
    ],
    "description": "The publisher of the creative work.\nPublisher of a work. For literal (string) use dc:publisher; for object (URL) use publisher\nThe publisher of the creative work.",
    "types": [
      "Person",
      "Organization",
      "Agent",
      "N8b0e609ebf2646179c39d79eef394bce"
    ],
    "ontology": [
      "Schema ORG",
      "DBpedia",
      "YAGO"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ]
  },
  "ccRecipient": {
    "title": "ccRecipient",
    "classes": [
      "Message"
    ],
    "description": "A sub property of recipient. The recipient copied on a message.",
    "types": [
      "Organization",
      "Person",
      "ContactPoint"
    ],
    "subPropertyOf": [
      "recipient"
    ],
    "ontology": [
      "Schema ORG"
    ]
  },
  "alliance": {
    "title": "alliance",
    "classes": [
      "Airline"
    ],
    "subPropertyOf": [
      "DUL.owl#isMemberOf"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfDistricts": {
    "title": "numberOfDistricts",
    "classes": [
      "Regency"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "percentageAlcohol": {
    "title": "percentageAlcohol",
    "description": "percentage of alcohol present in a beverage",
    "classes": [
      "Beverage"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "wavelength": {
    "title": "wavelength",
    "classes": [
      "Colour"
    ],
    "types": [
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "child": {
    "title": "child",
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "diameter": {
    "title": "diameter",
    "classes": [
      "Engine",
      "Weapon",
      "MovingWalkway",
      "LunarCrater",
      "MeanOfTransportation",
      "ConveyorSystem",
      "On-SiteTransportation",
      "Escalator"
    ],
    "types": [
      "kilometre",
      "millimetre",
      "metre",
      "metre",
      "metre",
      "millimetre",
      "metre",
      "metre",
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "producedBy": {
    "title": "producedBy",
    "classes": [
      "Film"
    ],
    "types": [
      "Company"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "architectualBureau": {
    "title": "architectualBureau",
    "types": [
      "Company"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "ArchitecturalStructure"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "galicianSpeakersPercentage": {
    "title": "galicianSpeakersPercentage",
    "classes": [
      "Language"
    ],
    "description": "percentage of Galician speakers.",
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "riverMouth": {
    "title": "riverMouth",
    "types": [
      "BodyOfWater"
    ],
    "classes": [
      "River"
    ],
    "subPropertyOf": [
      "DUL.owl#hasCommonBoundary"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "alpsSubgroup": {
    "title": "alpsSubgroup",
    "types": [
      "MountainRange"
    ],
    "classes": [
      "Mountain"
    ],
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "description": "the Alps subgroup to which the mountain belongs, according to the SOIUSA classification",
    "ontology": [
      "DBpedia"
    ]
  },
  "refpol": {
    "title": "refpol",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "bestYearWsop": {
    "title": "bestYearWsop",
    "types": [
      "XMLSchema#gYear"
    ],
    "classes": [
      "PokerPlayer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "choreographer": {
    "title": "choreographer",
    "types": [
      "Person"
    ],
    "classes": [
      "FigureSkater"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "officerInCharge": {
    "title": "officerInCharge",
    "classes": [
      "University"
    ],
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "watershed": {
    "title": "watershed",
    "types": [
      "XMLSchema#double",
      "squareKilometre"
    ],
    "classes": [
      "Stream",
      "Stream"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "nationalSelection": {
    "title": "nationalSelection",
    "classes": [
      "Agent"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "classification": {
    "title": "classification",
    "classes": [
      "Instrument"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "federation": {
    "title": "federation",
    "types": [
      "Organisation"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "routeEnd": {
    "title": "routeEnd",
    "subPropertyOf": [
      "DUL.owl#hasCommonBoundary"
    ],
    "classes": [
      "RouteOfTransportation"
    ],
    "description": "End of the traffic route.",
    "types": [
      "RouteOfTransportation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "grossDomesticProductAsOf": {
    "title": "grossDomesticProductAsOf",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "volume": {
    "title": "volume",
    "types": [
      "XMLSchema#double",
      "cubicMetre",
      "cubicKilometre",
      "cubicMetre",
      "cubicKilometre"
    ],
    "classes": [
      "SpaceStation",
      "Planet",
      "Lake",
      "Galaxy"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "frontierLength": {
    "title": "frontierLength",
    "types": [
      "XMLSchema#float"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "coden": {
    "title": "coden",
    "description": "CODEN is a six character, alphanumeric bibliographic code, that provides concise, unique and unambiguous identification of the titles of serials and non-serial publications from all subject areas.",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "WrittenWork"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "startYearOfSales": {
    "title": "startYearOfSales",
    "types": [
      "XMLSchema#gYear"
    ],
    "classes": [
      "Sales"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "endingTheme": {
    "title": "endingTheme",
    "types": [
      "Work"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "TelevisionShow"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "afiAward": {
    "title": "afiAward",
    "classes": [
      "Artist"
    ],
    "types": [
      "Award"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "entourage": {
    "title": "entourage",
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "FictionalCharacter"
    ],
    "types": [
      "Species"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "revenue": {
    "title": "revenue",
    "types": [
      "XMLSchema#double"
    ],
    "classes": [
      "Organisation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "screenActorsGuildAward": {
    "title": "screenActorsGuildAward",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "Actor"
    ],
    "types": [
      "Award"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "averageSpeed": {
    "title": "averageSpeed",
    "description": "The average speed of a thing.",
    "classes": [
      "Planet",
      "Galaxy"
    ],
    "types": [
      "kilometrePerSecond",
      "kilometrePerSecond",
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "bSide": {
    "title": "bSide",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Single"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "dryCargo": {
    "title": "dryCargo",
    "types": [
      "kilogram",
      "XMLSchema#double"
    ],
    "classes": [
      "Spacecraft",
      "Spacecraft"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "relatedPlaces": {
    "title": "relatedPlaces",
    "subPropertyOf": [
      "DUL.owl#unifies"
    ],
    "types": [
      "List"
    ],
    "description": "This property is to accommodate the list field that contains a list of, e.g., monuments in the same town",
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "shoeSize": {
    "title": "shoeSize",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "discovered": {
    "title": "discovered",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "CelestialBody"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "dissolutionYear": {
    "title": "dissolutionYear",
    "classes": [
      "Organisation,_PopulatedPlace"
    ],
    "types": [
      "XMLSchema#gYear"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "supplementalDraftYear": {
    "title": "supplementalDraftYear",
    "classes": [
      "GridironFootballPlayer"
    ],
    "types": [
      "XMLSchema#gYear"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "maximumTemperature": {
    "title": "maximumTemperature",
    "classes": [
      "Planet",
      "Planet",
      "Galaxy"
    ],
    "types": [
      "XMLSchema#double",
      "kelvin",
      "kelvin"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "minimumTemperature": {
    "title": "minimumTemperature",
    "types": [
      "kelvin",
      "XMLSchema#double",
      "kelvin"
    ],
    "classes": [
      "Galaxy",
      "Planet",
      "Planet"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "hsvCoordinateHue": {
    "title": "hsvCoordinateHue",
    "classes": [
      "Colour"
    ],
    "types": [
      "XMLSchema#integer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "aircraftHelicopterTransport": {
    "title": "aircraftHelicopterTransport",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "MilitaryUnit"
    ],
    "types": [
      "MeanOfTransportation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "shipDisplacement": {
    "title": "shipDisplacement",
    "classes": [
      "Ship"
    ],
    "types": [
      "XMLSchema#double"
    ],
    "description": "A ship's displacement is its mass at any given time.",
    "ontology": [
      "DBpedia"
    ]
  },
  "perCapitaIncome": {
    "title": "perCapitaIncome",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "firstWin": {
    "title": "firstWin",
    "subPropertyOf": [
      "DUL.owl#isParticipantIn"
    ],
    "types": [
      "GrandPrix"
    ],
    "classes": [
      "FormulaOneRacer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "protein": {
    "title": "protein",
    "classes": [
      "Food"
    ],
    "types": [
      "XMLSchema#double"
    ],
    "description": "Amount of proteins per servingSize of a Food",
    "ontology": [
      "DBpedia"
    ]
  },
  "originalMaximumBoatBeam": {
    "title": "originalMaximumBoatBeam",
    "classes": [
      "Canal",
      "Canal"
    ],
    "types": [
      "XMLSchema#double",
      "metre"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfHouses": {
    "title": "numberOfHouses",
    "classes": [
      "ProtectedArea"
    ],
    "description": "Number of houses in demarcated area",
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "oilSystem": {
    "title": "oilSystem",
    "classes": [
      "AutomobileEngine"
    ],
    "subPropertyOf": [
      "DUL.owl#hasComponent"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "communityIsoCode": {
    "title": "communityIsoCode",
    "classes": [
      "PopulatedPlace"
    ],
    "subPropertyOf": [
      "isoCode"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "australiaOpenDouble": {
    "title": "australiaOpenDouble",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "TennisPlayer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "filmFareAward": {
    "title": "filmFareAward",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "Artist"
    ],
    "types": [
      "Award"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "goldenCalfAward": {
    "title": "goldenCalfAward",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "Actor"
    ],
    "types": [
      "Award"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "atomicNumber": {
    "title": "atomicNumber",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "description": "the number of protons in the atomic nucleus of a chemical element, hence also proton number.",
    "classes": [
      "ChemicalElement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "winsAtAus": {
    "title": "winsAtAus",
    "classes": [
      "GolfPlayer"
    ],
    "subPropertyOf": [
      "DUL.owl#isParticipantIn"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "solicitorGeneral": {
    "title": "solicitorGeneral",
    "description": "high-ranking solicitor",
    "subPropertyOf": [
      "DUL.owl#isSettingFor"
    ],
    "classes": [
      "LegalCase"
    ],
    "types": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "vehiclesPerDay": {
    "title": "vehiclesPerDay",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "RouteOfTransportation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "winsAtLAGT": {
    "title": "winsAtLAGT",
    "classes": [
      "GolfPlayer"
    ],
    "subPropertyOf": [
      "DUL.owl#isParticipantIn"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "contest": {
    "title": "contest",
    "types": [
      "Contest"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "ecNumber": {
    "title": "ecNumber",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Biomolecule"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "sentence": {
    "title": "sentence",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "administrativeCenter": {
    "title": "administrativeCenter",
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "types": [
      "Place"
    ],
    "classes": [
      "AdministrativeRegion"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "artPatron": {
    "title": "artPatron",
    "description": "An influential, wealthy person who supported an artist, craftsman, a scholar or a noble.. See also",
    "types": [
      "Artist"
    ],
    "classes": [
      "Agent"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "chEBI": {
    "title": "chEBI",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Drug"
    ],
    "description": "A unique identifier for the drug in the Chemical Entities of Biological Interest (ChEBI) ontology",
    "ontology": [
      "DBpedia"
    ]
  },
  "localPhonePrefix": {
    "title": "localPhonePrefix",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "impactFactorAsOf": {
    "title": "impactFactorAsOf",
    "classes": [
      "AcademicJournal"
    ],
    "description": "Year of impact factor assessment.",
    "types": [
      "XMLSchema#gYear"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "penaltyScore": {
    "title": "penaltyScore",
    "types": [
      "XMLSchema#integer"
    ],
    "classes": [
      "PenaltyShootOut"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lastLaunchDate": {
    "title": "lastLaunchDate",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "LaunchPad"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "uniprot": {
    "title": "uniprot",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Biomolecule"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "person": {
    "title": "person",
    "classes": [
      "PersonFunction"
    ],
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#isRoleOf"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "latestPreviewVersion": {
    "title": "latestPreviewVersion",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Software"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "presentName": {
    "title": "presentName",
    "classes": [
      "FormerMunicipality"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "winterTemperature": {
    "title": "winterTemperature",
    "classes": [
      "Settlement"
    ],
    "types": [
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "protectionStatus": {
    "title": "protectionStatus",
    "subPropertyOf": [
      "Status"
    ],
    "description": "Indication of the type of protection regime. For example 'national monument' in the Netherlands or 'Monument Historique' in Belgium or France",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "firstWinner": {
    "title": "firstWinner",
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ],
    "classes": [
      "Race"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "nflCode": {
    "title": "nflCode",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Athlete"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "closeTo": {
    "title": "closeTo",
    "description": "place close to another.",
    "classes": [
      "Place"
    ],
    "types": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "credit": {
    "title": "credit",
    "classes": [
      "Openswarm"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "dateAct": {
    "title": "dateAct",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "Canal"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "abbeychurchBlessingCharge": {
    "title": "abbeychurchBlessingCharge",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Cleric"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "population": {
    "title": "population",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "Population"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "rebuildingYear": {
    "title": "rebuildingYear",
    "classes": [
      "ArchitecturalStructure"
    ],
    "types": [
      "XMLSchema#gYear"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "averageDepth": {
    "title": "averageDepth",
    "description": "Source of the value can be declare by .",
    "types": [
      "XMLSchema#double"
    ],
    "classes": [
      "Place"
    ],
    "subPropertyOf": [
      "depth"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "proTeam": {
    "title": "proTeam",
    "types": [
      "SportsTeam"
    ],
    "classes": [
      "Athlete,_CareerStation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfReactors": {
    "title": "numberOfReactors",
    "classes": [
      "NuclearPowerStation"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "previousMission": {
    "title": "previousMission",
    "subPropertyOf": [
      "DUL.owl#follows"
    ],
    "classes": [
      "SpaceMission"
    ],
    "types": [
      "SpaceMission"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "neighboringMunicipality": {
    "title": "neighboringMunicipality",
    "classes": [
      "PopulatedPlace"
    ],
    "subPropertyOf": [
      "DUL.owl#nearTo"
    ],
    "types": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "apoapsis": {
    "title": "apoapsis",
    "types": [
      "kilometre",
      "kilometre",
      "kilometre",
      "XMLSchema#double"
    ],
    "classes": [
      "Spacecraft",
      "Galaxy",
      "Planet",
      "CelestialBody"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "subregion": {
    "title": "subregion",
    "subPropertyOf": [
      "DUL.owl#hasPart"
    ],
    "classes": [
      "Place"
    ],
    "types": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "almaMater": {
    "title": "almaMater",
    "description": "schools that they attended",
    "classes": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "types": [
      "EducationalInstitution"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "metropolitanBorough": {
    "title": "metropolitanBorough",
    "subPropertyOf": [
      "DUL.owl#isPartOf"
    ],
    "types": [
      "PopulatedPlace"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "id": {
    "title": "id",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "WorldHeritageSite"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "historicalMap": {
    "title": "historicalMap",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "collectivityMinority": {
    "title": "collectivityMinority",
    "classes": [
      "Settlement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "parkingLotsCars": {
    "title": "parkingLotsCars",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "RestArea"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "signName": {
    "title": "signName",
    "types": [
      "22-rdf-syntax-ns#langString"
    ],
    "classes": [
      "HungarySettlement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "commissionerDate": {
    "title": "commissionerDate",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "championInDoubleMale": {
    "title": "championInDoubleMale",
    "subPropertyOf": [
      "DUL.owl#hasParticipant",
      "championInDouble"
    ],
    "classes": [
      "SportsEvent"
    ],
    "description": "winner of a competition in the male double session (as in tennis)",
    "types": [
      "Athlete"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "legislativePeriodName": {
    "title": "legislativePeriodName",
    "description": "The term of the on-going session (e.g.: \"40th Canadian Parliament\").",
    "classes": [
      "Legislature"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "rector": {
    "title": "rector",
    "classes": [
      "EducationalInstitution"
    ],
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "visitorsPercentageChange": {
    "title": "visitorsPercentageChange",
    "classes": [
      "ArchitecturalStructure"
    ],
    "types": [
      "XMLSchema#double"
    ],
    "description": "Percentage increase or decrease.",
    "ontology": [
      "DBpedia"
    ]
  },
  "currentSeason": {
    "title": "currentSeason",
    "classes": [
      "SportsLeague"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "victoryPercentageAsMgr": {
    "title": "victoryPercentageAsMgr",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "areaOfCatchment": {
    "title": "areaOfCatchment",
    "classes": [
      "Lake",
      "Lake"
    ],
    "types": [
      "squareKilometre",
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "currentRank": {
    "title": "currentRank",
    "types": [
      "XMLSchema#integer"
    ],
    "classes": [
      "SnookerPlayer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "totalTracks": {
    "title": "totalTracks",
    "types": [
      "XMLSchema#integer"
    ],
    "classes": [
      "Album"
    ],
    "description": "the total number of tracks contained in the album",
    "ontology": [
      "DBpedia"
    ]
  },
  "hraState": {
    "title": "hraState",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "doctoralStudent": {
    "title": "doctoralStudent",
    "types": [
      "Person"
    ],
    "classes": [
      "Scientist"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "airDate": {
    "title": "airDate",
    "classes": [
      "RadioStation"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "mediaType": {
    "title": "mediaType",
    "subPropertyOf": [
      "DUL.owl#isClassifiedBy"
    ],
    "description": "Print / On-line (then binding types etc. if relevant)",
    "classes": [
      "WrittenWork"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "previousEvent": {
    "title": "previousEvent",
    "classes": [
      "Event"
    ],
    "types": [
      "Event"
    ],
    "subPropertyOf": [
      "DUL.owl#follows"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "river": {
    "title": "river",
    "types": [
      "River"
    ],
    "subPropertyOf": [
      "DUL.owl#nearTo"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "perCapitaIncomeAsOf": {
    "title": "perCapitaIncomeAsOf",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "snowParkNumber": {
    "title": "snowParkNumber",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "istat": {
    "title": "istat",
    "classes": [
      "PopulatedPlace"
    ],
    "description": "Indexing code used for Italian municipalities",
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "frequencyOfPublication": {
    "title": "frequencyOfPublication",
    "classes": [
      "PeriodicalLiterature"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "description": "The frequency of publication of the periodical (e.g. weekly, monthly).",
    "ontology": [
      "DBpedia"
    ]
  },
  "deathYear": {
    "title": "deathYear",
    "types": [
      "XMLSchema#gYear"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfAcademicStaff": {
    "title": "numberOfAcademicStaff",
    "classes": [
      "EducationalInstitution"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "cargoWater": {
    "title": "cargoWater",
    "types": [
      "kilogram",
      "XMLSchema#double"
    ],
    "classes": [
      "Spacecraft",
      "Spacecraft"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "statistic": {
    "title": "statistic",
    "classes": [
      "Statistic"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "startDateTime": {
    "title": "startDateTime",
    "types": [
      "XMLSchema#dateTime"
    ],
    "description": "The start date and time of the event.",
    "classes": [
      "Event"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "otherWins": {
    "title": "otherWins",
    "classes": [
      "SnookerPlayer"
    ],
    "subPropertyOf": [
      "Wins"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "meanTemperature": {
    "title": "meanTemperature",
    "classes": [
      "Planet",
      "Galaxy",
      "Planet"
    ],
    "types": [
      "kelvin",
      "kelvin",
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "polishFilmAward": {
    "title": "polishFilmAward",
    "classes": [
      "Artist"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "types": [
      "Award"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "australiaOpenSingle": {
    "title": "australiaOpenSingle",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "TennisPlayer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "nflTeam": {
    "title": "nflTeam",
    "classes": [
      "Athlete"
    ],
    "types": [
      "SportsTeam"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "dissolved": {
    "title": "dissolved",
    "classes": [
      "SoccerClub"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "electionDateLeader": {
    "title": "electionDateLeader",
    "types": [
      "XMLSchema#date"
    ],
    "description": "The date that leader was elected.",
    "classes": [
      "Legislature"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "war": {
    "title": "war",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "MilitaryPerson"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "carcinogen": {
    "title": "carcinogen",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "ChemicalSubstance"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "doctoralAdvisor": {
    "title": "doctoralAdvisor",
    "types": [
      "Person"
    ],
    "classes": [
      "Scientist"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "phylum": {
    "title": "phylum",
    "description": "A rank in the classification of organisms, below kingdom and above class; also called a division, especially in describing plants; a taxon at that rank.",
    "classes": [
      "Species"
    ],
    "subPropertyOf": [
      "DUL.owl#isSpecializedBy"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "aircraftHelicopter": {
    "title": "aircraftHelicopter",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "MilitaryUnit"
    ],
    "types": [
      "MeanOfTransportation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "voiceType": {
    "title": "voiceType",
    "classes": [
      "Artist"
    ],
    "subPropertyOf": [
      "DUL.owl#isClassifiedBy"
    ],
    "description": "voice type of a singer or an actor",
    "ontology": [
      "DBpedia"
    ]
  },
  "precursor": {
    "title": "precursor",
    "classes": [
      "AnatomicalStructure"
    ],
    "types": [
      "Embryology"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "beatifiedDate": {
    "title": "beatifiedDate",
    "classes": [
      "Saint"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "canton": {
    "title": "canton",
    "types": [
      "Settlement"
    ],
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "classes": [
      "Settlement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "championInSingleMale": {
    "title": "championInSingleMale",
    "types": [
      "Athlete"
    ],
    "subPropertyOf": [
      "championInSingle",
      "DUL.owl#hasParticipant"
    ],
    "description": "winner of a competition in the single male session, to distinguish from the double session (as in tennis)",
    "classes": [
      "SportsEvent"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "inchi": {
    "title": "inchi",
    "classes": [
      "ChemicalCompound"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfParkingSpaces": {
    "title": "numberOfParkingSpaces",
    "classes": [
      "Hotel"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "routeNumber": {
    "title": "routeNumber",
    "classes": [
      "RouteOfTransportation"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "description": "The number of the route.",
    "ontology": [
      "DBpedia"
    ]
  },
  "flagCaption": {
    "title": "flagCaption",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Flag"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "network": {
    "title": "network",
    "classes": [
      "Broadcaster"
    ],
    "subPropertyOf": [
      "DUL.owl#isMemberOf"
    ],
    "types": [
      "Broadcaster"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "theology": {
    "title": "theology",
    "classes": [
      "ChristianDoctrine"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lccn": {
    "title": "lccn",
    "description": "The Library of Congress Control Number or LCCN is a serially based system of numbering cataloging records in the Library of Congress in the United States. It has nothing to do with the contents of any book, and should not be confused with Library of Congress Classification.",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "WrittenWork"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "dockedTime": {
    "title": "dockedTime",
    "classes": [
      "Spacecraft",
      "Spacecraft"
    ],
    "types": [
      "day",
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "sisterNewspaper": {
    "title": "sisterNewspaper",
    "classes": [
      "Newspaper"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "types": [
      "Newspaper"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "bird": {
    "title": "bird",
    "classes": [
      "Place"
    ],
    "types": [
      "Species"
    ],
    "description": "Birds are homeothermic vertebrates, the vast majority of which can fly with their wings.",
    "ontology": [
      "DBpedia"
    ]
  },
  "olympicOathSwornBy": {
    "title": "olympicOathSwornBy",
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ],
    "classes": [
      "Olympics"
    ],
    "types": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "iso6391Code": {
    "title": "iso6391Code",
    "types": [
      "XMLSchema#string"
    ],
    "subPropertyOf": [
      "LanguageCode"
    ],
    "classes": [
      "Language"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "gameArtist": {
    "title": "gameArtist",
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "description": "A game artist is an artist who creates art for one or more types of games. Game artists are responsible for all of the aspects of game development that call for visual art.",
    "classes": [
      "VideoGame"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "centuryBreaks": {
    "title": "centuryBreaks",
    "types": [
      "XMLSchema#integer"
    ],
    "description": "Number of breaks with 100 points or more, is not translated",
    "classes": [
      "SnookerPlayer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "kindOfCriminal": {
    "title": "kindOfCriminal",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Criminal"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "debut": {
    "title": "debut",
    "classes": [
      "Wrestler"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "ranking": {
    "title": "ranking",
    "classes": [
      "School"
    ],
    "types": [
      "XMLSchema#positiveInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "house": {
    "title": "house",
    "types": [
      "Legislature"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "Legislature"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "crownDependency": {
    "title": "crownDependency",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "City"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "leagueManager": {
    "title": "leagueManager",
    "classes": [
      "Person"
    ],
    "types": [
      "SportsLeague"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "length": {
    "title": "length",
    "classes": [
      "Engine",
      "Weapon",
      "MeanOfTransportation",
      "Escalator",
      "On-SiteTransportation",
      "ConveyorSystem",
      "MovingWalkway",
      "Infrastructure"
    ],
    "types": [
      "millimetre",
      "millimetre",
      "XMLSchema#double",
      "kilometre",
      "millimetre",
      "millimetre",
      "millimetre",
      "millimetre",
      "millimetre"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "aircraftTrainer": {
    "title": "aircraftTrainer",
    "types": [
      "MeanOfTransportation"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "MilitaryUnit"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "settlement": {
    "title": "settlement",
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "classes": [
      "Place"
    ],
    "types": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "sourceConfluenceRegion": {
    "title": "sourceConfluenceRegion",
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "types": [
      "Place"
    ],
    "classes": [
      "River"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "altitude": {
    "title": "altitude",
    "classes": [
      "Place"
    ],
    "types": [
      "Altitude"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "selection": {
    "title": "selection",
    "subPropertyOf": [
      "DUL.owl#hasSetting"
    ],
    "classes": [
      "Astronaut"
    ],
    "description": "when (or in which project) the person was selected to train as an astronaut",
    "ontology": [
      "DBpedia"
    ]
  },
  "patent": {
    "title": "patent",
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfLocations": {
    "title": "numberOfLocations",
    "classes": [
      "Organisation"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "fastestDriver": {
    "title": "fastestDriver",
    "classes": [
      "GrandPrix"
    ],
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "skiTow": {
    "title": "skiTow",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "poleDriverTeam": {
    "title": "poleDriverTeam",
    "classes": [
      "GrandPrix"
    ],
    "types": [
      "SportsTeam"
    ],
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "hasInsidePlace": {
    "title": "hasInsidePlace",
    "classes": [
      "Place"
    ],
    "description": "indicates another location located inside.",
    "types": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "firstDriver": {
    "title": "firstDriver",
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ],
    "classes": [
      "GrandPrix"
    ],
    "types": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfBombs": {
    "title": "numberOfBombs",
    "classes": [
      "Aircraft"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "airportUsing": {
    "title": "airportUsing",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Airport"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "recentWinner": {
    "title": "recentWinner",
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ],
    "classes": [
      "Race"
    ],
    "types": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "leftChild": {
    "title": "leftChild",
    "subPropertyOf": [
      "DUL.owl#nearTo"
    ],
    "types": [
      "Island"
    ],
    "classes": [
      "Island"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "soccerTournamentThisSeason": {
    "title": "soccerTournamentThisSeason",
    "classes": [
      "SoccerTournament"
    ],
    "types": [
      "SoccerTournament"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lunarEvaTime": {
    "title": "lunarEvaTime",
    "types": [
      "XMLSchema#double",
      "hour"
    ],
    "classes": [
      "SpaceMission",
      "SpaceMission"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "olympicOathSwornByAthlete": {
    "title": "olympicOathSwornByAthlete",
    "subPropertyOf": [
      "olympicOathSwornBy",
      "DUL.owl#hasParticipant"
    ],
    "types": [
      "Person"
    ],
    "classes": [
      "Olympics"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "bloodGroup": {
    "title": "bloodGroup",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "ceremonialCounty": {
    "title": "ceremonialCounty",
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "types": [
      "PopulatedPlace"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "launchVehicle": {
    "title": "launchVehicle",
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ],
    "classes": [
      "SpaceMission"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "flagBearer": {
    "title": "flagBearer",
    "classes": [
      "OlympicResult"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "types": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "activeYearsEndYearMgr": {
    "title": "activeYearsEndYearMgr",
    "types": [
      "XMLSchema#gYear"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "governmentPosition": {
    "title": "governmentPosition",
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "types": [
      "wgs84_pos#SpatialThing"
    ],
    "classes": [
      "Island"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "routeEndDirection": {
    "title": "routeEndDirection",
    "types": [
      "XMLSchema#string"
    ],
    "description": "Direction of the end of the traffic route. The opposite of OntologyProperty:routeStartDirection.",
    "classes": [
      "RouteOfTransportation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "scale": {
    "title": "scale",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "militaryRank": {
    "title": "militaryRank",
    "classes": [
      "MilitaryPerson"
    ],
    "description": "The highest rank achieved by a person.",
    "subPropertyOf": [
      "DUL.owl#isMemberOf"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "trackWidth": {
    "title": "trackWidth",
    "classes": [
      "RouteOfTransportation"
    ],
    "description": "Width of the track, e.g., the track width differing in Russia from (Western and Middle) European track width",
    "types": [
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "nationalTeamYear": {
    "title": "nationalTeamYear",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "discharge": {
    "title": "discharge",
    "classes": [
      "Stream",
      "Stream"
    ],
    "types": [
      "XMLSchema#double",
      "cubicMetrePerSecond"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "family": {
    "title": "family",
    "classes": [
      "Species"
    ],
    "types": [
      "Species"
    ],
    "subPropertyOf": [
      "DUL.owl#specializes"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "elementGroup": {
    "title": "elementGroup",
    "description": "a group is a vertical column in the periodic table of chemical elements.",
    "classes": [
      "ChemicalElement"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "populationRural": {
    "title": "populationRural",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "alpsSoiusaCode": {
    "title": "alpsSoiusaCode",
    "types": [
      "XMLSchema#string"
    ],
    "description": "the Alps SOIUSA code corresponding to the mountain, according to the SOIUSA classification",
    "classes": [
      "Mountain"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "spacewalkEnd": {
    "title": "spacewalkEnd",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "SpaceMission"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "clothingSize": {
    "title": "clothingSize",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "parliament": {
    "title": "parliament",
    "classes": [
      "Place"
    ],
    "types": [
      "Organisation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "otherLanguage": {
    "title": "otherLanguage",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Settlement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "isRouteStop": {
    "title": "isRouteStop",
    "types": [
      "RouteStop"
    ],
    "classes": [
      "Place"
    ],
    "description": "indicate a place is a stop on a road.",
    "ontology": [
      "DBpedia"
    ]
  },
  "taste": {
    "title": "taste",
    "classes": [
      "Food"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "jockey": {
    "title": "jockey",
    "classes": [
      "RaceHorse"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "types": [
      "Jockey"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "unloCode": {
    "title": "unloCode",
    "classes": [
      "Place"
    ],
    "description": "UN/LOCODE, the United Nations Code for Trade and Transport Locations, is a geographic coding scheme developed and maintained by United Nations Economic Commission for Europe (UNECE), a unit of the United Nations. UN/LOCODE assigns codes to locations used in trade and transport  with functions such as seaports, rail and road terminals, airports, post offices and border crossing points.",
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "popularVote": {
    "title": "popularVote",
    "classes": [
      "Election"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "previousPopulation": {
    "title": "previousPopulation",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "Population"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "functionStartYear": {
    "title": "functionStartYear",
    "classes": [
      "PersonFunction"
    ],
    "types": [
      "XMLSchema#gYear"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "employer": {
    "title": "employer",
    "types": [
      "Organisation"
    ],
    "subPropertyOf": [
      "DUL.owl#isMemberOf"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "elo": {
    "title": "elo",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "ChessPlayer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "nationalChampionship": {
    "title": "nationalChampionship",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Athlete"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "bioclimate": {
    "title": "bioclimate",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "discontinued": {
    "title": "discontinued",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "Beverage"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "usopenWins": {
    "title": "usopenWins",
    "classes": [
      "Person"
    ],
    "types": [
      "core#Concept"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "clothSize": {
    "title": "clothSize",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "firstFlight": {
    "title": "firstFlight",
    "classes": [
      "SpaceShuttle"
    ],
    "subPropertyOf": [
      "DUL.owl#isParticipantIn"
    ],
    "types": [
      "SpaceMission"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "mass": {
    "title": "mass",
    "types": [
      "kilogram",
      "kilogram",
      "kilogram",
      "kilogram",
      "kilogram",
      "kilogram",
      "XMLSchema#double",
      "kilogram",
      "kilogram",
      "kilogram"
    ],
    "classes": [
      "SpaceMission",
      "Planet",
      "ConveyorSystem",
      "On-SiteTransportation",
      "MovingWalkway",
      "Escalator",
      "MeanOfTransportation",
      "Galaxy",
      "Rocket"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "mergedIntoParty": {
    "title": "mergedIntoParty",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "types": [
      "PoliticalParty"
    ],
    "classes": [
      "PoliticalParty"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "ensembl": {
    "title": "ensembl",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Biomolecule"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "canonizedPlace": {
    "title": "canonizedPlace",
    "classes": [
      "Saint"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "types": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "codeMemorial": {
    "title": "codeMemorial",
    "classes": [
      "Memorial"
    ],
    "subPropertyOf": [
      "Code"
    ],
    "description": "Code war memorial or other memorial",
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "elementBlock": {
    "title": "elementBlock",
    "classes": [
      "ChemicalElement"
    ],
    "description": "A block of the periodic table of elements is a set of adjacent groups.",
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "rankingWins": {
    "title": "rankingWins",
    "classes": [
      "SnookerPlayer"
    ],
    "subPropertyOf": [
      "Wins"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "passengersPerYear": {
    "title": "passengersPerYear",
    "description": "Number of passengers per year.",
    "classes": [
      "Infrastructure"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "ceiling": {
    "title": "ceiling",
    "description": "Maximum distance to the earth surface, to be expressed in kilometers",
    "classes": [
      "Aircraft"
    ],
    "types": [
      "XMLSchema#positiveInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "areaMetro": {
    "title": "areaMetro",
    "classes": [
      "GeopoliticalOrganisation",
      "PopulatedPlace"
    ],
    "types": [
      "XMLSchema#double",
      "squareKilometre",
      "squareKilometre"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "silverMedalMixed": {
    "title": "silverMedalMixed",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "TennisPlayer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "finalPublicationDate": {
    "title": "finalPublicationDate",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "PeriodicalLiterature"
    ],
    "description": "Date of the final publication.",
    "ontology": [
      "DBpedia"
    ]
  },
  "managerSeason": {
    "title": "managerSeason",
    "classes": [
      "Agent"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "density": {
    "title": "density",
    "types": [
      "kilogramPerCubicMetre",
      "kilogramPerCubicMetre",
      "XMLSchema#double",
      "kilogramPerCubicMetre"
    ],
    "classes": [
      "ChemicalSubstance",
      "Planet",
      "Galaxy"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "netIncome": {
    "title": "netIncome",
    "classes": [
      "Company"
    ],
    "types": [
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "plant": {
    "title": "plant",
    "classes": [
      "Place"
    ],
    "subPropertyOf": [
      "DUL.owl#isLocationOf"
    ],
    "types": [
      "Plant"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "managementCountry": {
    "title": "managementCountry",
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "types": [
      "Country"
    ],
    "classes": [
      "Island"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "battingSide": {
    "title": "battingSide",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "BaseballPlayer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "organSystem": {
    "title": "organSystem",
    "classes": [
      "AnatomicalStructure"
    ],
    "subPropertyOf": [
      "DUL.owl#isPartOf"
    ],
    "description": "the organ system that a anatomical structure belongs to",
    "types": [
      "AnatomicalStructure"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "poleDriverCountry": {
    "title": "poleDriverCountry",
    "types": [
      "Country"
    ],
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ],
    "classes": [
      "GrandPrix"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfVolumes": {
    "title": "numberOfVolumes",
    "classes": [
      "WrittenWork"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "soccerTournamentClosingSeason": {
    "title": "soccerTournamentClosingSeason",
    "types": [
      "SoccerTournament"
    ],
    "classes": [
      "SoccerTournament"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "maxApparentMagnitude": {
    "title": "maxApparentMagnitude",
    "classes": [
      "CelestialBody"
    ],
    "types": [
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "infantMortality": {
    "title": "infantMortality",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "XMLSchema#float"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "startReign": {
    "title": "startReign",
    "types": [
      "core#Concept"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "alternativeTitle": {
    "title": "alternativeTitle",
    "classes": [
      "Work"
    ],
    "description": "The alternative title attributed to a work",
    "types": [
      "22-rdf-syntax-ns#langString"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "reopeningDate": {
    "title": "reopeningDate",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "ArchitecturalStructure"
    ],
    "description": "Date of reopening the architectural structure.",
    "ontology": [
      "DBpedia"
    ]
  },
  "areaWater": {
    "title": "areaWater",
    "types": [
      "XMLSchema#double"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "introduced": {
    "title": "introduced",
    "classes": [
      "Beverage"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfLawyers": {
    "title": "numberOfLawyers",
    "description": "Number of lawyers or attorneys in the company.",
    "classes": [
      "LawFirm"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "regentOf": {
    "title": "regentOf",
    "types": [
      "Monarch"
    ],
    "description": "Subject has served as the regent of another monarch",
    "classes": [
      "Monarch"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "headOfFamily": {
    "title": "headOfFamily",
    "classes": [
      "Family"
    ],
    "types": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "mentor": {
    "title": "mentor",
    "types": [
      "Artist"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "description": "One who serves as a guide, an advisor to someone.",
    "classes": [
      "Artist"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "areaTotal": {
    "title": "areaTotal",
    "types": [
      "XMLSchema#double",
      "squareKilometre"
    ],
    "classes": [
      "PopulatedPlace",
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "amateurDefeat": {
    "title": "amateurDefeat",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Boxer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "largestSettlement": {
    "title": "largestSettlement",
    "subPropertyOf": [
      "DUL.owl#hasPart"
    ],
    "types": [
      "PopulatedPlace"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "hairs": {
    "title": "hairs",
    "classes": [
      "FictionalCharacter"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lastSeason": {
    "title": "lastSeason",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "FormulaOneRacer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "foalDate": {
    "title": "foalDate",
    "classes": [
      "Animal"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "otherServingLines": {
    "title": "otherServingLines",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Station"
    ],
    "description": "Connecting services that serve the station such as bus, etc.",
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfUndergraduateStudents": {
    "title": "numberOfUndergraduateStudents",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "EducationalInstitution"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "championInDoubleFemale": {
    "title": "championInDoubleFemale",
    "subPropertyOf": [
      "DUL.owl#hasParticipant",
      "championInDouble"
    ],
    "classes": [
      "SportsEvent"
    ],
    "description": "winner of a competition in the female double session (as in tennis)",
    "types": [
      "Athlete"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "oldcode": {
    "title": "oldcode",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "OlympicResult"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "oldTeamCoached": {
    "title": "oldTeamCoached",
    "classes": [
      "Athlete"
    ],
    "types": [
      "SportsTeam"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "parliamentaryGroup": {
    "title": "parliamentaryGroup",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "relatedFunctions": {
    "title": "relatedFunctions",
    "subPropertyOf": [
      "DUL.owl#unifies"
    ],
    "types": [
      "List"
    ],
    "classes": [
      "Person"
    ],
    "description": "This property is for the list of personal functions that a person (e.g. a politician) holds or has held",
    "ontology": [
      "DBpedia"
    ]
  },
  "firstProMatch": {
    "title": "firstProMatch",
    "classes": [
      "Athlete"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "coronationDate": {
    "title": "coronationDate",
    "classes": [
      "Royalty"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "dorlandsPrefix": {
    "title": "dorlandsPrefix",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "AnatomicalStructure"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "valvetrain": {
    "title": "valvetrain",
    "classes": [
      "AutomobileEngine"
    ],
    "types": [
      "valvetrain"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "areaLand": {
    "title": "areaLand",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "eMedicineSubject": {
    "title": "eMedicineSubject",
    "classes": [
      "Disease"
    ],
    "types": [
      "22-rdf-syntax-ns#langString"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "ekatteCode": {
    "title": "ekatteCode",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "description": "Indexing code used by the Bulgarian National Statistical Institute to identify populated places",
    "subPropertyOf": [
      "codeSettlement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "presidentGeneralCouncil": {
    "title": "presidentGeneralCouncil",
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "TermOfOffice"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "nextEntity": {
    "title": "nextEntity",
    "classes": [
      "Place"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "types": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "complexion": {
    "title": "complexion",
    "classes": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#hasQuality"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "placeOfBurial": {
    "title": "placeOfBurial",
    "classes": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "types": [
      "Place"
    ],
    "description": "The place where the person has been buried.",
    "ontology": [
      "DBpedia"
    ]
  },
  "youthYears": {
    "title": "youthYears",
    "types": [
      "XMLSchema#gYear"
    ],
    "classes": [
      "SoccerPlayer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "assetUnderManagement": {
    "title": "assetUnderManagement",
    "types": [
      "XMLSchema#double"
    ],
    "classes": [
      "Company"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfRun": {
    "title": "numberOfRun",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfIntercommunality": {
    "title": "numberOfIntercommunality",
    "classes": [
      "Department"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "alpsSupergroup": {
    "title": "alpsSupergroup",
    "types": [
      "MountainRange"
    ],
    "classes": [
      "Mountain"
    ],
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "description": "the Alps supergroup to which the mountain belongs, according to the SOIUSA classification",
    "ontology": [
      "DBpedia"
    ]
  },
  "codeListOfHonour": {
    "title": "codeListOfHonour",
    "types": [
      "XMLSchema#string"
    ],
    "subPropertyOf": [
      "code"
    ],
    "classes": [
      "MemberResistanceMovement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "debutTeam": {
    "title": "debutTeam",
    "classes": [
      "Athlete"
    ],
    "subPropertyOf": [
      "DUL.owl#isMemberOf"
    ],
    "types": [
      "SportsTeam"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "currentMember": {
    "title": "currentMember",
    "classes": [
      "SportsTeam"
    ],
    "subPropertyOf": [
      "DUL.owl#hasMember"
    ],
    "types": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "registration": {
    "title": "registration",
    "classes": [
      "Company"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "goldMedalist": {
    "title": "goldMedalist",
    "classes": [
      "SportsEvent"
    ],
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "Medalist",
      "DUL.owl#hasParticipant"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfOffices": {
    "title": "numberOfOffices",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "description": "Number of the company's offices.",
    "classes": [
      "LawFirm"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "geneLocationStart": {
    "title": "geneLocationStart",
    "description": "the start of the gene coordinates",
    "classes": [
      "GeneLocation"
    ],
    "types": [
      "XMLSchema#integer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "prefecture": {
    "title": "prefecture",
    "types": [
      "PopulatedPlace"
    ],
    "classes": [
      "Department"
    ],
    "subPropertyOf": [
      "DUL.owl#isPartOf"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "danseCompetition": {
    "title": "danseCompetition",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "regionalPrefecture": {
    "title": "regionalPrefecture",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "areaOfCatchmentQuote": {
    "title": "areaOfCatchmentQuote",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "flyingHours": {
    "title": "flyingHours",
    "types": [
      "XMLSchema#double"
    ],
    "classes": [
      "MilitaryUnit"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "sire": {
    "title": "sire",
    "classes": [
      "Animal"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "types": [
      "Animal"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "veneratedIn": {
    "title": "veneratedIn",
    "classes": [
      "Saint"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "types": [
      "Organisation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "countryWithFirstSatelliteLaunched": {
    "title": "countryWithFirstSatelliteLaunched",
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ],
    "classes": [
      "YearInSpaceflight"
    ],
    "types": [
      "Country"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "nationalOlympicCommittee": {
    "title": "nationalOlympicCommittee",
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ],
    "classes": [
      "OlympicResult"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "northPlace": {
    "title": "northPlace",
    "subPropertyOf": [
      "closeTo"
    ],
    "types": [
      "Place"
    ],
    "description": "indicates another place situated north.",
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "aircraftInterceptor": {
    "title": "aircraftInterceptor",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "types": [
      "MeanOfTransportation"
    ],
    "classes": [
      "MilitaryUnit"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "enemy": {
    "title": "enemy",
    "types": [
      "Species"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "FictionalCharacter"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "projectCoordinator": {
    "title": "projectCoordinator",
    "description": "The coordinating organisation of the project.",
    "types": [
      "Organisation"
    ],
    "subPropertyOf": [
      "DUL.owl#isSettingFor"
    ],
    "classes": [
      "ResearchProject"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfSeatsInParliament": {
    "title": "numberOfSeatsInParliament",
    "description": "number of seats in a Second Chamber-like parliament",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "PoliticalParty"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "idNumber": {
    "title": "idNumber",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "buildingType": {
    "title": "buildingType",
    "description": "Type is too general. We need to be able to distinguish types of music from types of buildings",
    "classes": [
      "Building"
    ],
    "subPropertyOf": [
      "DUL.owl#isClassifiedBy"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "architecturalMovement": {
    "title": "architecturalMovement",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Architect"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lastFlightStartDate": {
    "title": "lastFlightStartDate",
    "classes": [
      "SpaceShuttle"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "visitorsPerYear": {
    "title": "visitorsPerYear",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "ArchitecturalStructure"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "notifyDate": {
    "title": "notifyDate",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "SiteOfSpecialScientificInterest"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "subMunicipalityType": {
    "title": "subMunicipalityType",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "SubMunicipality"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "winsAtJLPGA": {
    "title": "winsAtJLPGA",
    "subPropertyOf": [
      "DUL.owl#isParticipantIn"
    ],
    "classes": [
      "GolfPlayer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "demographicsAsOf": {
    "title": "demographicsAsOf",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "brainInfoNumber": {
    "title": "brainInfoNumber",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Brain"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "disappearanceDate": {
    "title": "disappearanceDate",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "coalition": {
    "title": "coalition",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "description": "Formerly coalition was used as a military term denoting the allied array of warriors in which each soldier protected his neighbor with his shield.",
    "ontology": [
      "DBpedia"
    ]
  },
  "relics": {
    "title": "relics",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "ReligiousBuilding"
    ],
    "description": "Physical remains or personal effects of a saint or venerated person, preserved in a religious building",
    "ontology": [
      "DBpedia"
    ]
  },
  "income": {
    "title": "income",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "wilaya": {
    "title": "wilaya",
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "types": [
      "Place"
    ],
    "classes": [
      "Settlement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "playerStatus": {
    "title": "playerStatus",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "aircraftHelicopterCargo": {
    "title": "aircraftHelicopterCargo",
    "classes": [
      "MilitaryUnit"
    ],
    "types": [
      "MeanOfTransportation"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "inflow": {
    "title": "inflow",
    "subPropertyOf": [
      "DUL.owl#hasCommonBoundary"
    ],
    "types": [
      "River"
    ],
    "classes": [
      "BodyOfWater"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "railwayRollingStock": {
    "title": "railwayRollingStock",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "RouteOfTransportation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "makeupArtist": {
    "title": "makeupArtist",
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ],
    "classes": [
      "Film"
    ],
    "description": "the person who is responsible for the actors makeup",
    "ontology": [
      "DBpedia"
    ]
  },
  "launchPad": {
    "title": "launchPad",
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ],
    "types": [
      "LaunchPad"
    ],
    "classes": [
      "SpaceMission"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "electionDate": {
    "title": "electionDate",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "formerChoreographer": {
    "title": "formerChoreographer",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "types": [
      "Person"
    ],
    "classes": [
      "FigureSkater"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "projectKeyword": {
    "title": "projectKeyword",
    "description": "A key word of the project.",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Project"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "juniorTeam": {
    "title": "juniorTeam",
    "types": [
      "SportsTeam"
    ],
    "classes": [
      "Athlete"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "firstDriverCountry": {
    "title": "firstDriverCountry",
    "classes": [
      "GrandPrix"
    ],
    "types": [
      "Country"
    ],
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "medlinePlus": {
    "title": "medlinePlus",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Disease"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "apofocus": {
    "title": "apofocus",
    "classes": [
      "CelestialBody"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "railwayPlatforms": {
    "title": "railwayPlatforms",
    "types": [
      "XMLSchema#string"
    ],
    "description": "Information on the type of platform(s) at the station.",
    "classes": [
      "Station"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "votesFor": {
    "title": "votesFor",
    "classes": [
      "StatedResolution"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "highestRank": {
    "title": "highestRank",
    "classes": [
      "SnookerPlayer"
    ],
    "types": [
      "XMLSchema#integer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "faaLocationIdentifier": {
    "title": "faaLocationIdentifier",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Airport"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "shipDraft": {
    "title": "shipDraft",
    "description": "The draft (or draught) of a ship's hull is the vertical distance between the waterline and the bottom of the hull (keel), with the thickness of the hull included; in the case of not being included the draft outline would be obtained.",
    "classes": [
      "Ship"
    ],
    "types": [
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "pluviometry": {
    "title": "pluviometry",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "icd10": {
    "title": "icd10",
    "classes": [
      "Disease"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "caterer": {
    "title": "caterer",
    "types": [
      "Caterer"
    ],
    "classes": [
      "Infrastructure"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "organ": {
    "title": "organ",
    "types": [
      "Organ"
    ],
    "description": "Name and/or description of the organ",
    "classes": [
      "ReligiousBuilding"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "field": {
    "title": "field",
    "subPropertyOf": [
      "DUL.owl#isDescribedBy"
    ],
    "classes": [
      "Artist"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "outskirts": {
    "title": "outskirts",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "schoolNumber": {
    "title": "schoolNumber",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "School"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "digitalChannel": {
    "title": "digitalChannel",
    "description": "A digital channel allows data to be transmitted in digital form.",
    "classes": [
      "Broadcaster"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "fat": {
    "title": "fat",
    "types": [
      "XMLSchema#double"
    ],
    "description": "Amount of fat per servingSize of a Food",
    "classes": [
      "Food"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "isPartOfMilitaryConflict": {
    "title": "isPartOfMilitaryConflict",
    "classes": [
      "MilitaryConflict"
    ],
    "subPropertyOf": [
      "DUL.owl#isPartOf",
      "isPartOf"
    ],
    "types": [
      "MilitaryConflict"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "arielAward": {
    "title": "arielAward",
    "classes": [
      "Actor"
    ],
    "types": [
      "Award"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "athleticsDiscipline": {
    "title": "athleticsDiscipline",
    "classes": [
      "Athlete"
    ],
    "types": [
      "Athletics"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "strength": {
    "title": "strength",
    "classes": [
      "MilitaryConflict"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "presentMunicipality": {
    "title": "presentMunicipality",
    "types": [
      "Municipality"
    ],
    "classes": [
      "FormerMunicipality"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "originalStartPoint": {
    "title": "originalStartPoint",
    "subPropertyOf": [
      "DUL.owl#hasCommonBoundary"
    ],
    "types": [
      "Place"
    ],
    "classes": [
      "Canal"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "rival": {
    "title": "rival",
    "classes": [
      "School"
    ],
    "types": [
      "School"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "architecturalStyle": {
    "title": "architecturalStyle",
    "subPropertyOf": [
      "DUL.owl#isDescribedBy"
    ],
    "classes": [
      "ArchitecturalStructure"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "registryNumber": {
    "title": "registryNumber",
    "classes": [
      "Document"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "description": "Identification of the registry a document is in",
    "ontology": [
      "DBpedia"
    ]
  },
  "floorArea": {
    "title": "floorArea",
    "classes": [
      "Building",
      "Building"
    ],
    "types": [
      "squareMetre",
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "icd1": {
    "title": "icd1",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Disease"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfVisitorsAsOf": {
    "title": "numberOfVisitorsAsOf",
    "classes": [
      "HistoricPlace"
    ],
    "description": "The year in which number of visitors occurred.",
    "types": [
      "XMLSchema#gYear"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "daylightSavingTimeZone": {
    "title": "daylightSavingTimeZone",
    "subPropertyOf": [
      "DUL.owl#isPartOf"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "wsopItm": {
    "title": "wsopItm",
    "classes": [
      "PokerPlayer"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "mouthCountry": {
    "title": "mouthCountry",
    "classes": [
      "River"
    ],
    "types": [
      "Country"
    ],
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "regionLink": {
    "title": "regionLink",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "weddingParentsDate": {
    "title": "weddingParentsDate",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "secondCommander": {
    "title": "secondCommander",
    "classes": [
      "MilitaryUnit"
    ],
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "previousWork": {
    "title": "previousWork",
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "Work"
    ],
    "types": [
      "Work"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "currentTeam": {
    "title": "currentTeam",
    "types": [
      "SportsTeam"
    ],
    "classes": [
      "Athlete"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "languageCode": {
    "title": "languageCode",
    "classes": [
      "Language"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "whaDraftTeam": {
    "title": "whaDraftTeam",
    "subPropertyOf": [
      "DUL.owl#isMemberOf"
    ],
    "classes": [
      "IceHockeyPlayer"
    ],
    "types": [
      "HockeyTeam"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lastAirDate": {
    "title": "lastAirDate",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "Broadcaster"
    ],
    "description": "The date on which the broadcaster made its last broadcast.",
    "ontology": [
      "DBpedia"
    ]
  },
  "projectReferenceID": {
    "title": "projectReferenceID",
    "classes": [
      "ResearchProject"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "description": "The reference identification of the project.",
    "ontology": [
      "DBpedia"
    ]
  },
  "oldDistrict": {
    "title": "oldDistrict",
    "classes": [
      "PopulatedPlace"
    ],
    "subPropertyOf": [
      "DUL.owl#isPartOf"
    ],
    "types": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "endowment": {
    "title": "endowment",
    "classes": [
      "Organisation"
    ],
    "types": [
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "refseqmrna": {
    "title": "refseqmrna",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Biomolecule"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "creativeDirector": {
    "title": "creativeDirector",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "types": [
      "Person"
    ],
    "classes": [
      "TelevisionShow"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "creationChristianBishop": {
    "title": "creationChristianBishop",
    "classes": [
      "Bishop"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "firstAirDate": {
    "title": "firstAirDate",
    "types": [
      "XMLSchema#date"
    ],
    "description": "The date on which regular broadcasts began.",
    "classes": [
      "Broadcaster"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "range": {
    "title": "range",
    "classes": [
      "MeanOfTransportation_,_Instrument"
    ],
    "description": "Maximum distance without refueling",
    "types": [
      "XMLSchema#positiveInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "formerCoach": {
    "title": "formerCoach",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "types": [
      "Person"
    ],
    "classes": [
      "FigureSkater"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "fundedBy": {
    "title": "fundedBy",
    "types": [
      "Organisation"
    ],
    "description": "A organisation financing the research project.",
    "subPropertyOf": [
      "DUL.owl#isSettingFor"
    ],
    "classes": [
      "ResearchProject"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "subdivisions": {
    "title": "subdivisions",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "satScore": {
    "title": "satScore",
    "description": "most recent average SAT scores",
    "classes": [
      "School"
    ],
    "subPropertyOf": [
      "DUL.owl#isClassifiedBy"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "olympicGamesWins": {
    "title": "olympicGamesWins",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "artery": {
    "title": "artery",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "AnatomicalStructure"
    ],
    "types": [
      "Artery"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "viceLeader": {
    "title": "viceLeader",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "firstFlightEndDate": {
    "title": "firstFlightEndDate",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "SpaceShuttle"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "races": {
    "title": "races",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "FormulaOneRacer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "commissioner": {
    "title": "commissioner",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "eyes": {
    "title": "eyes",
    "classes": [
      "FictionalCharacter"
    ],
    "description": "Eye is called the sensory organ of vision of living organisms.",
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "gridReference": {
    "title": "gridReference",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "media": {
    "title": "media",
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "humanDevelopmentIndexRankingCategory": {
    "title": "humanDevelopmentIndexRankingCategory",
    "subPropertyOf": [
      "DUL.owl#isClassifiedBy"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "nationalTournamentBronze": {
    "title": "nationalTournamentBronze",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "whaDraftYear": {
    "title": "whaDraftYear",
    "classes": [
      "IceHockeyPlayer"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "periapsis": {
    "title": "periapsis",
    "types": [
      "kilometre",
      "kilometre",
      "XMLSchema#double",
      "kilometre"
    ],
    "classes": [
      "Spacecraft",
      "Galaxy",
      "Planet",
      "CelestialBody"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "redline": {
    "title": "redline",
    "types": [
      "XMLSchema#double"
    ],
    "classes": [
      "AutomobileEngine"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "otherMedia": {
    "title": "otherMedia",
    "classes": [
      "Person"
    ],
    "types": [
      "PeriodicalLiterature"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "omim": {
    "title": "omim",
    "classes": [
      "Biomolecule"
    ],
    "types": [
      "XMLSchema#integer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "waterPercentage": {
    "title": "waterPercentage",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#float"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "totalDiscs": {
    "title": "totalDiscs",
    "types": [
      "XMLSchema#integer"
    ],
    "classes": [
      "Album"
    ],
    "description": "the total number of discs contained in the album",
    "ontology": [
      "DBpedia"
    ]
  },
  "cousurper": {
    "title": "cousurper",
    "classes": [
      "Person"
    ],
    "types": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "meltingPoint": {
    "title": "meltingPoint",
    "types": [
      "kelvin",
      "kelvin",
      "XMLSchema#double"
    ],
    "classes": [
      "Drug",
      "ChemicalSubstance"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "stateOfOriginYear": {
    "title": "stateOfOriginYear",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Athlete"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "routeTypeAbbreviation": {
    "title": "routeTypeAbbreviation",
    "types": [
      "XMLSchema#string"
    ],
    "description": "The route type abbreviation (eg.: I for Interstate, M for Motorway or NJ for New Jersey Route).",
    "classes": [
      "RouteOfTransportation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "atPage": {
    "title": "atPage",
    "classes": [
      "Reference"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "description": "Page # where the referenced resource is to be found in the source document",
    "ontology": [
      "DBpedia"
    ]
  },
  "ethnicity": {
    "title": "ethnicity",
    "subPropertyOf": [
      "DUL.owl#isMemberOf"
    ],
    "classes": [
      "Person"
    ],
    "description": "A certain social class of people who have common origins or experiences.",
    "types": [
      "EthnicGroup"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "amateurKo": {
    "title": "amateurKo",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Boxer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "millsCodeDutch": {
    "title": "millsCodeDutch",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Mill"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "officialLanguage": {
    "title": "officialLanguage",
    "types": [
      "Language"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "purchasingPowerParity": {
    "title": "purchasingPowerParity",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "cityType": {
    "title": "cityType",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "writer": {
    "title": "writer",
    "classes": [
      "Work"
    ],
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "startCareer": {
    "title": "startCareer",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "stationStructure": {
    "title": "stationStructure",
    "description": "Type of station structure (underground, at-grade, or elevated).",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Station"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "westPlace": {
    "title": "westPlace",
    "subPropertyOf": [
      "closeTo"
    ],
    "types": [
      "Place"
    ],
    "description": "indicates another place situated west.",
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "stockExchange": {
    "title": "stockExchange",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Company"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "raceResult": {
    "title": "raceResult",
    "classes": [
      "Race"
    ],
    "description": "Result of one racer in a sport competition",
    "types": [
      "SportCompetitionResult"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "landingVehicle": {
    "title": "landingVehicle",
    "classes": [
      "SpaceMission"
    ],
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ],
    "types": [
      "SpaceMission"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "radio": {
    "title": "radio",
    "description": "The radio is the device that works as a \"radio receiver - converter\" where it receives the radio broadcasts of the radio stations and converts them into sound.",
    "types": [
      "RadioStation"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "acceleration": {
    "title": "acceleration",
    "types": [
      "XMLSchema#double",
      "second"
    ],
    "classes": [
      "Engine",
      "AutomobileEngine"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "servingTemperature": {
    "title": "servingTemperature",
    "description": "Serving temperature for the food (e.g.: hot, cold, warm or room temperature).",
    "classes": [
      "Food"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "deadInFightPlace": {
    "title": "deadInFightPlace",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfProfessionals": {
    "title": "numberOfProfessionals",
    "classes": [
      "Activity"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "description": "number of people who earns his living from a specified activity.",
    "ontology": [
      "DBpedia"
    ]
  },
  "bestLap": {
    "title": "bestLap",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lastFlight": {
    "title": "lastFlight",
    "classes": [
      "SpaceShuttle"
    ],
    "subPropertyOf": [
      "DUL.owl#isParticipantIn"
    ],
    "types": [
      "SpaceMission"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "endPoint": {
    "title": "endPoint",
    "classes": [
      "Canal"
    ],
    "subPropertyOf": [
      "DUL.owl#hasCommonBoundary"
    ],
    "types": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "speedLimit": {
    "title": "speedLimit",
    "types": [
      "XMLSchema#double"
    ],
    "classes": [
      "RouteOfTransportation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "roofHeight": {
    "title": "roofHeight",
    "classes": [
      "Skyscraper"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "budgetYear": {
    "title": "budgetYear",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "splitFromParty": {
    "title": "splitFromParty",
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "types": [
      "PoliticalParty"
    ],
    "classes": [
      "PoliticalParty"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "originalLanguage": {
    "title": "originalLanguage",
    "subPropertyOf": [
      "DUL.owl#isExpressedBy",
      "language"
    ],
    "description": "The original language of the work.",
    "classes": [
      "Work"
    ],
    "types": [
      "Language"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "projectEndDate": {
    "title": "projectEndDate",
    "classes": [
      "Project"
    ],
    "description": "The end date of the project.",
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "wingArea": {
    "title": "wingArea",
    "types": [
      "XMLSchema#double"
    ],
    "classes": [
      "Aircraft"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "careerPrizeMoney": {
    "title": "careerPrizeMoney",
    "classes": [
      "TennisPlayer"
    ],
    "types": [
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "stateOfOriginTeam": {
    "title": "stateOfOriginTeam",
    "types": [
      "SportsTeam"
    ],
    "classes": [
      "Athlete"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "familyMember": {
    "title": "familyMember",
    "types": [
      "Person"
    ],
    "classes": [
      "Family"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "northEastPlace": {
    "title": "northEastPlace",
    "subPropertyOf": [
      "closeTo"
    ],
    "classes": [
      "Place"
    ],
    "description": "indicates another place situated north-east.",
    "types": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "fipsCode": {
    "title": "fipsCode",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "disciple": {
    "title": "disciple",
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "Artist"
    ],
    "description": "He who learns from a master some science or some liberal art.",
    "types": [
      "Artist"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "pdb": {
    "title": "pdb",
    "description": "gene entry for 3D structural data as per the PDB (Protein Data Bank) database",
    "classes": [
      "Protein"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "mainDomain": {
    "title": "mainDomain",
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "maximumElevation": {
    "title": "maximumElevation",
    "description": "maximum elevation above the sea level",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "dateOfBurial": {
    "title": "dateOfBurial",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "typeOfElectrification": {
    "title": "typeOfElectrification",
    "subPropertyOf": [
      "DUL.owl#isClassifiedBy"
    ],
    "classes": [
      "RouteOfTransportation"
    ],
    "description": "Electrification system (e.g. Third rail, Overhead catenary).",
    "ontology": [
      "DBpedia"
    ]
  },
  "wholeArea": {
    "title": "wholeArea",
    "classes": [
      "Place"
    ],
    "types": [
      "Area"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "subsequentInfrastructure": {
    "title": "subsequentInfrastructure",
    "classes": [
      "Infrastructure"
    ],
    "types": [
      "Infrastructure"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "secretaryGeneral": {
    "title": "secretaryGeneral",
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "Organisation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfPeopleLicensed": {
    "title": "numberOfPeopleLicensed",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "description": "number of people licensed to practice this activity",
    "classes": [
      "Activity"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "iafdId": {
    "title": "iafdId",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Film"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "playerSeason": {
    "title": "playerSeason",
    "classes": [
      "Agent"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "managementRegion": {
    "title": "managementRegion",
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "Island"
    ],
    "types": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "age": {
    "title": "age",
    "types": [
      "XMLSchema#integer"
    ],
    "classes": [
      "Agent"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "satellitesDeployed": {
    "title": "satellitesDeployed",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "SpaceShuttle"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "eyeColor": {
    "title": "eyeColor",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "eruption": {
    "title": "eruption",
    "classes": [
      "Island"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lieutenancyArea": {
    "title": "lieutenancyArea",
    "types": [
      "PopulatedPlace"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "subPropertyOf": [
      "DUL.owl#isPartOf"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "noteOnPlaceOfBurial": {
    "title": "noteOnPlaceOfBurial",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "MilitaryPerson"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "transmission": {
    "title": "transmission",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Automobile"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "populationYear": {
    "title": "populationYear",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "dateExtended": {
    "title": "dateExtended",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "Canal"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfBronzeMedalsWon": {
    "title": "numberOfBronzeMedalsWon",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "SportCompetitionResult"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "administrativeDistrict": {
    "title": "administrativeDistrict",
    "types": [
      "PopulatedPlace"
    ],
    "classes": [
      "Settlement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "cmykCoordinateCyanic": {
    "title": "cmykCoordinateCyanic",
    "classes": [
      "Colour"
    ],
    "types": [
      "XMLSchema#integer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "governmentCountry": {
    "title": "governmentCountry",
    "types": [
      "Country"
    ],
    "classes": [
      "Island"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "originalDanseScore": {
    "title": "originalDanseScore",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "routeEndLocation": {
    "title": "routeEndLocation",
    "description": "End point of the traffic route.",
    "classes": [
      "RouteOfTransportation"
    ],
    "types": [
      "Place"
    ],
    "subPropertyOf": [
      "DUL.owl#hasCommonBoundary"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "riverBranchOf": {
    "title": "riverBranchOf",
    "classes": [
      "River"
    ],
    "subPropertyOf": [
      "DUL.owl#hasCommonBoundary"
    ],
    "types": [
      "River"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "highestBuildingInYear": {
    "title": "highestBuildingInYear",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "Skyscraper"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "wineProduced": {
    "title": "wineProduced",
    "classes": [
      "WineRegion"
    ],
    "subPropertyOf": [
      "DUL.owl#isLocationOf"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "carNumber": {
    "title": "carNumber",
    "types": [
      "XMLSchema#integer"
    ],
    "classes": [
      "FormulaOneRacer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "sportSpecialty": {
    "title": "sportSpecialty",
    "subPropertyOf": [
      "DUL.owl#isParticipantIn"
    ],
    "classes": [
      "Athlete"
    ],
    "types": [
      "Sport"
    ],
    "description": "the sport specialty the athlete practices, e.g. 'Ring' for a men's artistic gymnastics athlete",
    "ontology": [
      "DBpedia"
    ]
  },
  "countySeat": {
    "title": "countySeat",
    "classes": [
      "PopulatedPlace"
    ],
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "iso6393Code": {
    "title": "iso6393Code",
    "classes": [
      "Language"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "subPropertyOf": [
      "LanguageCode"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "championInMixedDouble": {
    "title": "championInMixedDouble",
    "subPropertyOf": [
      "DUL.owl#hasParticipant",
      "championInDouble"
    ],
    "description": "winner of a competition in the mixed double session (as in tennis)",
    "classes": [
      "SportsEvent"
    ],
    "types": [
      "Athlete"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "jstor": {
    "title": "jstor",
    "types": [
      "XMLSchema#string"
    ],
    "description": "JSTOR number (short for Journal Storage) is a United States-based online system number for archiving academic journals.",
    "classes": [
      "AcademicJournal"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "diseasesDb": {
    "title": "diseasesDb",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Disease"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "currentWorldChampion": {
    "title": "currentWorldChampion",
    "classes": [
      "Sport"
    ],
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ],
    "types": [
      "Agent"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "storyEditor": {
    "title": "storyEditor",
    "classes": [
      "TelevisionShow"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "types": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "fossil": {
    "title": "fossil",
    "classes": [
      "Species"
    ],
    "types": [
      "Species"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "government": {
    "title": "government",
    "classes": [
      "Island"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "federalState": {
    "title": "federalState",
    "subPropertyOf": [
      "DUL.owl#isPartOf"
    ],
    "types": [
      "PopulatedPlace"
    ],
    "classes": [
      "Settlement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "isPartOfAnatomicalStructure": {
    "title": "isPartOfAnatomicalStructure",
    "types": [
      "AnatomicalStructure"
    ],
    "classes": [
      "Brain"
    ],
    "subPropertyOf": [
      "DUL.owl#isPartOf",
      "isPartOf"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "rightChild": {
    "title": "rightChild",
    "classes": [
      "Island"
    ],
    "subPropertyOf": [
      "DUL.owl#hasCommonBoundary"
    ],
    "types": [
      "Island"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "purchasingPowerParityYear": {
    "title": "purchasingPowerParityYear",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "callsignMeaning": {
    "title": "callsignMeaning",
    "description": "The out written call sign.",
    "classes": [
      "Broadcaster"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "followingEvent": {
    "title": "followingEvent",
    "classes": [
      "Event"
    ],
    "subPropertyOf": [
      "DUL.owl#precedes"
    ],
    "types": [
      "Event"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "areaUrban": {
    "title": "areaUrban",
    "classes": [
      "PopulatedPlace",
      "PopulatedPlace"
    ],
    "types": [
      "XMLSchema#double",
      "squareKilometre"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfMatches": {
    "title": "numberOfMatches",
    "classes": [
      "CareerStation"
    ],
    "types": [
      "XMLSchema#integer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "maximumDepthQuote": {
    "title": "maximumDepthQuote",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "description": "Source of the  value.",
    "ontology": [
      "DBpedia"
    ]
  },
  "campus": {
    "title": "campus",
    "description": "Campus means any urban complex that offers residential, teaching and research facilities to the students of a university.",
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "classes": [
      "University"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "settlementAttached": {
    "title": "settlementAttached",
    "classes": [
      "Settlement"
    ],
    "types": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "tenant": {
    "title": "tenant",
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "ArchitecturalStructure"
    ],
    "types": [
      "Organisation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "attorneyGeneral": {
    "title": "attorneyGeneral",
    "description": "the attorney general",
    "types": [
      "Person"
    ],
    "classes": [
      "LegalCase"
    ],
    "subPropertyOf": [
      "DUL.owl#isSettingFor"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "playerInTeam": {
    "title": "playerInTeam",
    "classes": [
      "SportsTeam"
    ],
    "description": "Person playing for sports team.",
    "subPropertyOf": [
      "DUL.owl#hasMember"
    ],
    "types": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "boilingPoint": {
    "title": "boilingPoint",
    "classes": [
      "ChemicalSubstance",
      "Drug",
      "ChemicalSubstance"
    ],
    "types": [
      "XMLSchema#double",
      "kelvin",
      "kelvin"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "formerCallsign": {
    "title": "formerCallsign",
    "classes": [
      "Broadcaster"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "musicSubgenre": {
    "title": "musicSubgenre",
    "classes": [
      "MusicGenre"
    ],
    "types": [
      "MusicGenre"
    ],
    "subPropertyOf": [
      "DUL.owl#isSpecializedBy"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "start": {
    "title": "start",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "capitalCountry": {
    "title": "capitalCountry",
    "classes": [
      "Island"
    ],
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "types": [
      "Country"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "giniCoefficientCategory": {
    "title": "giniCoefficientCategory",
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "headquarter": {
    "title": "headquarter",
    "types": [
      "PopulatedPlace"
    ],
    "classes": [
      "Organisation"
    ],
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "fauna": {
    "title": "fauna",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "bronzeMedalist": {
    "title": "bronzeMedalist",
    "classes": [
      "SportsEvent"
    ],
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "Medalist",
      "DUL.owl#hasParticipant"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "demolitionDate": {
    "title": "demolitionDate",
    "types": [
      "XMLSchema#date"
    ],
    "description": "The date the building was demolished.",
    "classes": [
      "ArchitecturalStructure"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "nndbId": {
    "title": "nndbId",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "probowlPick": {
    "title": "probowlPick",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Athlete"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "restingPlace": {
    "title": "restingPlace",
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "types": [
      "Place"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "pictureFormat": {
    "title": "pictureFormat",
    "classes": [
      "Broadcaster"
    ],
    "subPropertyOf": [
      "DUL.owl#hasQuality"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "firstPublicationYear": {
    "title": "firstPublicationYear",
    "description": "Year of first publication of the periodical.",
    "classes": [
      "PeriodicalLiterature"
    ],
    "types": [
      "XMLSchema#gYear"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "administrativeHeadCity": {
    "title": "administrativeHeadCity",
    "types": [
      "City"
    ],
    "description": "city where stand the administrative power",
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "teamName": {
    "title": "teamName",
    "types": [
      "22-rdf-syntax-ns#langString"
    ],
    "classes": [
      "School"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "product": {
    "title": "product",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "Organisation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "goldenRaspberryAward": {
    "title": "goldenRaspberryAward",
    "classes": [
      "Actor"
    ],
    "types": [
      "Award"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "borough": {
    "title": "borough",
    "types": [
      "PopulatedPlace"
    ],
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "premiereYear": {
    "title": "premiereYear",
    "classes": [
      "Play"
    ],
    "description": "Year the play was first performed.",
    "subPropertyOf": [
      "releaseYear"
    ],
    "types": [
      "XMLSchema#gYear"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "isHandicappedAccessible": {
    "title": "isHandicappedAccessible",
    "types": [
      "XMLSchema#boolean"
    ],
    "classes": [
      "Station"
    ],
    "description": "True if the station is handicapped accessible.",
    "ontology": [
      "DBpedia"
    ]
  },
  "apskritis": {
    "title": "apskritis",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "casualties": {
    "title": "casualties",
    "types": [
      "XMLSchema#integer"
    ],
    "classes": [
      "MilitaryConflict_,_NaturalEvent"
    ],
    "description": "Number of casualties of a MilitaryConflict or natural disaster such as an Earthquake",
    "ontology": [
      "DBpedia"
    ]
  },
  "costumeDesigner": {
    "title": "costumeDesigner",
    "types": [
      "Person"
    ],
    "description": "the person who is responsible for the film costume design",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "Film"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "startPoint": {
    "title": "startPoint",
    "classes": [
      "Canal"
    ],
    "subPropertyOf": [
      "DUL.owl#hasCommonBoundary"
    ],
    "types": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfVehicles": {
    "title": "numberOfVehicles",
    "classes": [
      "PublicTransitSystem"
    ],
    "description": "Number of vehicles used in the transit system.",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "reopened": {
    "title": "reopened",
    "classes": [
      "School"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "bronzeMedalDouble": {
    "title": "bronzeMedalDouble",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "TennisPlayer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "council": {
    "title": "council",
    "classes": [
      "LiechtensteinSettlement"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "established": {
    "title": "established",
    "classes": [
      "ChristianDoctrine"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "visitorsTotal": {
    "title": "visitorsTotal",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "ArchitecturalStructure"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "significantBuilding": {
    "title": "significantBuilding",
    "classes": [
      "Architect"
    ],
    "types": [
      "Building"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "mainIsland": {
    "title": "mainIsland",
    "classes": [
      "Place"
    ],
    "types": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "board": {
    "title": "board",
    "subPropertyOf": [
      "DUL.owl#isMemberOf"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "march": {
    "title": "march",
    "types": [
      "MusicalWork"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "MilitaryUnit"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "neighbourRegion": {
    "title": "neighbourRegion",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "votesAgainst": {
    "title": "votesAgainst",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "StatedResolution"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "europeanChampionship": {
    "title": "europeanChampionship",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Athlete"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "iucnCategory": {
    "title": "iucnCategory",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "ProtectedArea"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "decommissioningDate": {
    "title": "decommissioningDate",
    "classes": [
      "Ship"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "musicFusionGenre": {
    "title": "musicFusionGenre",
    "classes": [
      "MusicGenre"
    ],
    "types": [
      "MusicGenre"
    ],
    "subPropertyOf": [
      "DUL.owl#overlaps"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "otherInformation": {
    "title": "otherInformation",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Settlement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "britishComedyAwards": {
    "title": "britishComedyAwards",
    "classes": [
      "Comedian"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "types": [
      "Award"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "bicycleInformation": {
    "title": "bicycleInformation",
    "classes": [
      "Station"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "description": "Information on station's bicycle facilities.",
    "ontology": [
      "DBpedia"
    ]
  },
  "religiousOrder": {
    "title": "religiousOrder",
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "Monastry"
    ],
    "types": [
      "ClericalOrder"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "sourceConfluence": {
    "title": "sourceConfluence",
    "subPropertyOf": [
      "DUL.owl#hasCommonBoundary"
    ],
    "classes": [
      "River"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "cargoFuel": {
    "title": "cargoFuel",
    "types": [
      "kilogram",
      "XMLSchema#double"
    ],
    "classes": [
      "Spacecraft",
      "Spacecraft"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "languageFamily": {
    "title": "languageFamily",
    "subPropertyOf": [
      "DUL.owl#specializes"
    ],
    "classes": [
      "Language"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "chef": {
    "title": "chef",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "types": [
      "Person"
    ],
    "classes": [
      "Restaurant"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "workArea": {
    "title": "workArea",
    "types": [
      "XMLSchema#double"
    ],
    "classes": [
      "Building"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "adjacentSettlement": {
    "title": "adjacentSettlement",
    "types": [
      "Settlement"
    ],
    "subPropertyOf": [
      "DUL.owl#nearTo"
    ],
    "classes": [
      "Settlement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "surfaceArea": {
    "title": "surfaceArea",
    "classes": [
      "Planet",
      "Galaxy",
      "Planet"
    ],
    "types": [
      "squareKilometre",
      "squareKilometre",
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "president": {
    "title": "president",
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "Organisation"
    ],
    "types": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "boxerStyle": {
    "title": "boxerStyle",
    "classes": [
      "Boxer"
    ],
    "types": [
      "BoxingStyle"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "mapDescription": {
    "title": "mapDescription",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "patron": {
    "title": "patron",
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "MilitaryUnit"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "umbrellaTitle": {
    "title": "umbrellaTitle",
    "types": [
      "22-rdf-syntax-ns#langString"
    ],
    "classes": [
      "MultiVolumePublication"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "museumType": {
    "title": "museumType",
    "description": "New type is needed because Museum is not really a subclass of Building, but has more to do with the function of the building. 'Museum type' is therefore more theme and collection related",
    "subPropertyOf": [
      "DUL.owl#isClassifiedBy"
    ],
    "classes": [
      "Museum"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "presidentRegionalCouncilMandate": {
    "title": "presidentRegionalCouncilMandate",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "climbUpNumber": {
    "title": "climbUpNumber",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "projectParticipant": {
    "title": "projectParticipant",
    "classes": [
      "ResearchProject"
    ],
    "description": "A participating organisation of the project.",
    "subPropertyOf": [
      "DUL.owl#isSettingFor"
    ],
    "types": [
      "Organisation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfStars": {
    "title": "numberOfStars",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Constellation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lastRace": {
    "title": "lastRace",
    "subPropertyOf": [
      "DUL.owl#isParticipantIn"
    ],
    "classes": [
      "FormulaOneRacer"
    ],
    "types": [
      "GrandPrix"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "chain": {
    "title": "chain",
    "classes": [
      "Hotel"
    ],
    "subPropertyOf": [
      "DUL.owl#isMemberOf"
    ],
    "types": [
      "Company"
    ],
    "description": "The chain of Hotels this instance is associated with.",
    "ontology": [
      "DBpedia"
    ]
  },
  "politicalFunction": {
    "title": "politicalFunction",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "olympicGamesBronze": {
    "title": "olympicGamesBronze",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "orthologousGene": {
    "title": "orthologousGene",
    "classes": [
      "Gene"
    ],
    "types": [
      "Gene"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "summerTemperature": {
    "title": "summerTemperature",
    "types": [
      "XMLSchema#double"
    ],
    "classes": [
      "Settlement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "fastestDriverTeam": {
    "title": "fastestDriverTeam",
    "types": [
      "SportsTeam"
    ],
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ],
    "classes": [
      "GrandPrix"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "pubchem": {
    "title": "pubchem",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "ChemicalSubstance"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "soccerLeagueSeason": {
    "title": "soccerLeagueSeason",
    "types": [
      "SoccerLeagueSeason"
    ],
    "classes": [
      "SoccerLeagueSeason"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "firstGame": {
    "title": "firstGame",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "SoccerClub"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfCity": {
    "title": "numberOfCity",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Continent"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "recordDate": {
    "title": "recordDate",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "MusicalWork"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "highestPointIsland": {
    "title": "highestPointIsland",
    "classes": [
      "Island"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "localization": {
    "title": "localization",
    "classes": [
      "Island"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "activeYearsStartYearMgr": {
    "title": "activeYearsStartYearMgr",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#gYear"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "capitalPosition": {
    "title": "capitalPosition",
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "types": [
      "wgs84_pos#SpatialThing"
    ],
    "classes": [
      "Island"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "aircraftUser": {
    "title": "aircraftUser",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "types": [
      "Organisation"
    ],
    "classes": [
      "Aircraft"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "frozen": {
    "title": "frozen",
    "classes": [
      "BodyOfWater"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "showJudge": {
    "title": "showJudge",
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ],
    "classes": [
      "TelevisionShow"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "marketCapitalisation": {
    "title": "marketCapitalisation",
    "classes": [
      "Company"
    ],
    "types": [
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "judge": {
    "title": "judge",
    "description": "leading judge",
    "subPropertyOf": [
      "DUL.owl#isSettingFor"
    ],
    "classes": [
      "LegalCase"
    ],
    "types": [
      "Judge"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "mostWins": {
    "title": "mostWins",
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ],
    "classes": [
      "Race"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "deathCause": {
    "title": "deathCause",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "censusYear": {
    "title": "censusYear",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "XMLSchema#gYear"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "eTeatrId": {
    "title": "eTeatrId",
    "classes": [
      "Film"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "flashPoint": {
    "title": "flashPoint",
    "description": "lowest temperature at which a substance can vaporize and start burning",
    "types": [
      "XMLSchema#integer"
    ],
    "classes": [
      "ChemicalSubstance"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "statisticValue": {
    "title": "statisticValue",
    "classes": [
      "BaseballPlayer"
    ],
    "types": [
      "XMLSchema#float"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "club": {
    "title": "club",
    "classes": [
      "Athlete"
    ],
    "subPropertyOf": [
      "DUL.owl#isMemberOf"
    ],
    "types": [
      "SportsTeam"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "olivierAward": {
    "title": "olivierAward",
    "classes": [
      "Comedian"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "types": [
      "Award"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "acquirementDate": {
    "title": "acquirementDate",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "Ship"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "mirDockings": {
    "title": "mirDockings",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "SpaceShuttle"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "firstAscentPerson": {
    "title": "firstAscentPerson",
    "classes": [
      "Mountain"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "types": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "secondTeam": {
    "title": "secondTeam",
    "types": [
      "SportsTeam"
    ],
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ],
    "classes": [
      "GrandPrix"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "usingCountry": {
    "title": "usingCountry",
    "types": [
      "Country"
    ],
    "classes": [
      "Currency"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "dist_ly": {
    "title": "dist_ly",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Openswarm"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "winsAtNWIDE": {
    "title": "winsAtNWIDE",
    "classes": [
      "GolfPlayer"
    ],
    "subPropertyOf": [
      "DUL.owl#isParticipantIn"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "narrator": {
    "title": "narrator",
    "classes": [
      "Work"
    ],
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "humanDevelopmentIndex": {
    "title": "humanDevelopmentIndex",
    "types": [
      "XMLSchema#float"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "description": "a composite statistic used to rank countries by level of \"human development\"",
    "ontology": [
      "DBpedia"
    ]
  },
  "literaryGenre": {
    "title": "literaryGenre",
    "classes": [
      "WrittenWork"
    ],
    "subPropertyOf": [
      "genre",
      "DUL.owl#isClassifiedBy"
    ],
    "description": "A literary genre is a category of literary composition. Genres may be determined by literary technique, tone, content, or even (as in the case of fiction) length.",
    "ontology": [
      "DBpedia"
    ]
  },
  "subjectTerm": {
    "title": "subjectTerm",
    "classes": [
      "Work"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "description": "The subject as a term, possibly a term from a formal classification",
    "ontology": [
      "DBpedia"
    ]
  },
  "phonePrefixLabel": {
    "title": "phonePrefixLabel",
    "types": [
      "22-rdf-syntax-ns#langString"
    ],
    "classes": [
      "Settlement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfPeopleAttending": {
    "title": "numberOfPeopleAttending",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Event"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfMembers": {
    "title": "numberOfMembers",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Legislature"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfGraduateStudents": {
    "title": "numberOfGraduateStudents",
    "classes": [
      "EducationalInstitution"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "mood": {
    "title": "mood",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "shortProgScore": {
    "title": "shortProgScore",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "firstAscent": {
    "title": "firstAscent",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Mountain,Volcano"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "bustSize": {
    "title": "bustSize",
    "types": [
      "XMLSchema#double"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "totalCargo": {
    "title": "totalCargo",
    "types": [
      "XMLSchema#double",
      "kilogram"
    ],
    "classes": [
      "Spacecraft",
      "Spacecraft"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "associatedAct": {
    "title": "associatedAct",
    "types": [
      "Artist"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "Artist"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "bourgmestre": {
    "title": "bourgmestre",
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "Settlement"
    ],
    "types": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "hand": {
    "title": "hand",
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "trainer": {
    "title": "trainer",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "Athlete"
    ],
    "types": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "previousEditor": {
    "title": "previousEditor",
    "classes": [
      "Magazine"
    ],
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "wimbledonMixed": {
    "title": "wimbledonMixed",
    "classes": [
      "TennisPlayer"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "approach": {
    "title": "approach",
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "dean": {
    "title": "dean",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "types": [
      "Person"
    ],
    "classes": [
      "EducationalInstitution"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "diploma": {
    "title": "diploma",
    "classes": [
      "Person"
    ],
    "types": [
      "Diploma"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "typeCoordinate": {
    "title": "typeCoordinate",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Place"
    ],
    "description": "Scale parameters that can be understood by Geohack, eg \"type:\", \"scale:\", \"region:\" \"altitude:\". Use \"_\" for several (eg \"type:landmark_scale:50000\"). See https://fr.wikipedia.org/wiki/Mod\u00e8le:Infobox_Subdivision_administrative for examples, and https://fr.wikipedia.org/wiki/Mod\u00e8le:GeoTemplate/Utilisation#La_mention_Type:... for a complete list",
    "ontology": [
      "DBpedia"
    ]
  },
  "feature": {
    "title": "feature",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "FictionalCharacter"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "personName": {
    "title": "personName",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "PersonFunction"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "shortProgCompetition": {
    "title": "shortProgCompetition",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "worstDefeat": {
    "title": "worstDefeat",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "SoccerClub"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "booster": {
    "title": "booster",
    "types": [
      "Rocket"
    ],
    "classes": [
      "SpaceMission"
    ],
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "startWqs": {
    "title": "startWqs",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "agglomerationPopulation": {
    "title": "agglomerationPopulation",
    "classes": [
      "Settlement"
    ],
    "types": [
      "Population"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "mouthState": {
    "title": "mouthState",
    "classes": [
      "River"
    ],
    "types": [
      "PopulatedPlace"
    ],
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfIslands": {
    "title": "numberOfIslands",
    "classes": [
      "Island"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "dutchWinkelID": {
    "title": "dutchWinkelID",
    "subPropertyOf": [
      "code"
    ],
    "description": "Dutch Winkel ID is a code for an underground publication, as attributed by Lydia Winkel's work on the underground WW II press in the Netherlands.",
    "classes": [
      "UndergroundJournal"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "spacestation": {
    "title": "spacestation",
    "classes": [
      "SpaceMission"
    ],
    "types": [
      "SpaceStation"
    ],
    "description": "Space station visited during a space mission",
    "ontology": [
      "DBpedia"
    ]
  },
  "activity": {
    "title": "activity",
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "currentTeamMember": {
    "title": "currentTeamMember",
    "description": "A current member of an athletic team.",
    "subPropertyOf": [
      "DUL.owl#hasMember"
    ],
    "types": [
      "TeamMember"
    ],
    "classes": [
      "SportsTeam"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "assets": {
    "title": "assets",
    "description": "Assets and liabilities are part of a company's balance sheet. In financial accounting, assets are financial resources. Anything tangible or intangible that is capable of being owned or controlled to produce value and that is held to have positive economic value is considered an asset.",
    "classes": [
      "Company"
    ],
    "types": [
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "retiredRocket": {
    "title": "retiredRocket",
    "classes": [
      "YearInSpaceflight"
    ],
    "subPropertyOf": [
      "DUL.owl#isSettingFor"
    ],
    "types": [
      "Rocket"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "worldTournamentGold": {
    "title": "worldTournamentGold",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "wins": {
    "title": "wins",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Athlete"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "newspaper": {
    "title": "newspaper",
    "types": [
      "PeriodicalLiterature"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "aSide": {
    "title": "aSide",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Single"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "regency": {
    "title": "regency",
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "Place"
    ],
    "types": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "contractor": {
    "title": "contractor",
    "types": [
      "Company"
    ],
    "classes": [
      "Skyscraper"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lowestPosition": {
    "title": "lowestPosition",
    "types": [
      "wgs84_pos#SpatialThing"
    ],
    "classes": [
      "Place"
    ],
    "subPropertyOf": [
      "DUL.owl#isLocationOf"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "pastor": {
    "title": "pastor",
    "types": [
      "Person"
    ],
    "classes": [
      "HistoricBuilding"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "diocese": {
    "title": "diocese",
    "subPropertyOf": [
      "DUL.owl#isPartOf"
    ],
    "classes": [
      "Parish,_Deanery"
    ],
    "description": "A religious administrative body above the parish level",
    "types": [
      "Diocese"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "southPlace": {
    "title": "southPlace",
    "subPropertyOf": [
      "closeTo"
    ],
    "classes": [
      "Place"
    ],
    "description": "indicates another place situated south.",
    "types": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "thirdCommander": {
    "title": "thirdCommander",
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "MilitaryUnit"
    ],
    "types": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "unitaryAuthority": {
    "title": "unitaryAuthority",
    "types": [
      "PopulatedPlace"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfMunicipalities": {
    "title": "numberOfMunicipalities",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "solventWithGoodSolubility": {
    "title": "solventWithGoodSolubility",
    "classes": [
      "ChemicalSubstance"
    ],
    "types": [
      "ChemicalSubstance"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "olympicOathSwornByJudge": {
    "title": "olympicOathSwornByJudge",
    "subPropertyOf": [
      "olympicOathSwornBy",
      "DUL.owl#hasParticipant"
    ],
    "types": [
      "Person"
    ],
    "classes": [
      "Olympics"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfSeats": {
    "title": "numberOfSeats",
    "classes": [
      "MeanOfTransportation"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfGoldMedalsWon": {
    "title": "numberOfGoldMedalsWon",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "SportCompetitionResult"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "actScore": {
    "title": "actScore",
    "classes": [
      "School"
    ],
    "subPropertyOf": [
      "DUL.owl#hasQuality"
    ],
    "description": "most recent average ACT scores",
    "ontology": [
      "DBpedia"
    ]
  },
  "quebecerTitle": {
    "title": "quebecerTitle",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Film"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "displacement": {
    "title": "displacement",
    "types": [
      "cubicCentimetre",
      "XMLSchema#double"
    ],
    "classes": [
      "AutomobileEngine",
      "Engine"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "nisCode": {
    "title": "nisCode",
    "description": "Indexing code used by the Belgium National Statistical Institute to identify populated places.",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "voltageOfElectrification": {
    "title": "voltageOfElectrification",
    "types": [
      "XMLSchema#double"
    ],
    "classes": [
      "RouteOfTransportation"
    ],
    "description": "Voltage of the electrification system.",
    "ontology": [
      "DBpedia"
    ]
  },
  "eptFinalTable": {
    "title": "eptFinalTable",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "PokerPlayer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "fc": {
    "title": "fc",
    "classes": [
      "Cricketer"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "yearOfConstruction": {
    "title": "yearOfConstruction",
    "description": "The year in which construction of the Place was finished.",
    "types": [
      "XMLSchema#gYear"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "scene": {
    "title": "scene",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "nextMission": {
    "title": "nextMission",
    "subPropertyOf": [
      "DUL.owl#precedes",
      "followedBy"
    ],
    "classes": [
      "SpaceMission"
    ],
    "types": [
      "SpaceMission"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "visitorStatisticsAsOf": {
    "title": "visitorStatisticsAsOf",
    "types": [
      "XMLSchema#gYear"
    ],
    "classes": [
      "ArchitecturalStructure"
    ],
    "description": "Year visitor information was gathered.",
    "ontology": [
      "DBpedia"
    ]
  },
  "policeName": {
    "title": "policeName",
    "description": "The police detachment serving a UK place, eg Wakefield -> \"West Yorkshire Police\"",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "penisLength": {
    "title": "penisLength",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "virtualChannel": {
    "title": "virtualChannel",
    "classes": [
      "Broadcaster"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "aircraftTransport": {
    "title": "aircraftTransport",
    "types": [
      "MeanOfTransportation"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "MilitaryUnit"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "otherName": {
    "title": "otherName",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "22-rdf-syntax-ns#langString"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "religiousHead": {
    "title": "religiousHead",
    "classes": [
      "School"
    ],
    "subPropertyOf": [
      "DUL.owl#hasMember"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "populationMetro": {
    "title": "populationMetro",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfStudents": {
    "title": "numberOfStudents",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "EducationalInstitution"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "subdivision": {
    "title": "subdivision",
    "classes": [
      "Place"
    ],
    "types": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "isCityState": {
    "title": "isCityState",
    "classes": [
      "Settlement"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "vehicleCode": {
    "title": "vehicleCode",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Place"
    ],
    "description": "Region related vehicle code on the vehicle plates.",
    "ontology": [
      "DBpedia"
    ]
  },
  "poles": {
    "title": "poles",
    "classes": [
      "FormulaOneRacer"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "chromosome": {
    "title": "chromosome",
    "classes": [
      "Protein"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lunarSampleMass": {
    "title": "lunarSampleMass",
    "types": [
      "kilogram",
      "XMLSchema#double"
    ],
    "classes": [
      "SpaceMission",
      "SpaceMission"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "coastLine": {
    "title": "coastLine",
    "classes": [
      "Settlement"
    ],
    "types": [
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lunarOrbitTime": {
    "title": "lunarOrbitTime",
    "types": [
      "hour",
      "XMLSchema#double"
    ],
    "classes": [
      "SpaceMission",
      "SpaceMission"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "games": {
    "title": "games",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "OlympicResult"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "colonialName": {
    "title": "colonialName",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "elementPeriod": {
    "title": "elementPeriod",
    "description": "In the periodic table of the elements, elements are arranged in a series of rows (or periods) so that those with similar properties appear in a column.",
    "classes": [
      "ChemicalElement"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfLiveAlbums": {
    "title": "numberOfLiveAlbums",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "description": "the number of live albums released by the musical artist",
    "classes": [
      "MusicalArtist"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "ableToGrind": {
    "title": "ableToGrind",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Mill"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "perimeter": {
    "title": "perimeter",
    "types": [
      "XMLSchema#double"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "superintendent": {
    "title": "superintendent",
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "Organisation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "class": {
    "title": "class",
    "subPropertyOf": [
      "DUL.owl#isClassifiedBy"
    ],
    "classes": [
      "MeanOfTransportation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "naacpImageAward": {
    "title": "naacpImageAward",
    "classes": [
      "Actor"
    ],
    "types": [
      "Award"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "dutchMIPCode": {
    "title": "dutchMIPCode",
    "description": "The Dutch MIP project was meant to take stock of all kinds of monuments",
    "subPropertyOf": [
      "Code"
    ],
    "classes": [
      "ArchitecturalStructure,_Monument"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "formerPartner": {
    "title": "formerPartner",
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "FigureSkater"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "maximumDischarge": {
    "title": "maximumDischarge",
    "types": [
      "cubicMetrePerSecond",
      "XMLSchema#double"
    ],
    "classes": [
      "Stream"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "khlDraftTeam": {
    "title": "khlDraftTeam",
    "classes": [
      "IceHockeyPlayer"
    ],
    "types": [
      "HockeyTeam"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "maximumBoatLength": {
    "title": "maximumBoatLength",
    "classes": [
      "Canal",
      "Canal"
    ],
    "types": [
      "XMLSchema#double",
      "metre"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "observatory": {
    "title": "observatory",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Island"
    ],
    "description": "scientific institutions that observe and study celestial bodies and phenomena.",
    "ontology": [
      "DBpedia"
    ]
  },
  "structuralSystem": {
    "title": "structuralSystem",
    "subPropertyOf": [
      "DUL.owl#hasConstituent"
    ],
    "classes": [
      "Building"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "component": {
    "title": "component",
    "types": [
      "AnatomicalStructure"
    ],
    "classes": [
      "Brain"
    ],
    "subPropertyOf": [
      "DUL.owl#hasComponent"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "sea": {
    "title": "sea",
    "types": [
      "Sea"
    ],
    "subPropertyOf": [
      "DUL.owl#nearTo"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "southWestPlace": {
    "title": "southWestPlace",
    "types": [
      "Place"
    ],
    "classes": [
      "Place"
    ],
    "description": "indicates another place situated south-west.",
    "subPropertyOf": [
      "closeTo"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "ofsCode": {
    "title": "ofsCode",
    "subPropertyOf": [
      "isoCode"
    ],
    "description": "Identifier used by the Swiss Federal Institute for Statistics",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Settlement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "orbitalInclination": {
    "title": "orbitalInclination",
    "types": [
      "XMLSchema#float"
    ],
    "classes": [
      "SpaceMission"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "shuttle": {
    "title": "shuttle",
    "types": [
      "SpaceShuttle"
    ],
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ],
    "classes": [
      "SpaceMission"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "grossDomesticProductPurchasingPowerParityPerCapita": {
    "title": "grossDomesticProductPurchasingPowerParityPerCapita",
    "types": [
      "GrossDomesticProductPerCapita"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "percentageLiteracyWomen": {
    "title": "percentageLiteracyWomen",
    "types": [
      "XMLSchema#float"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "percentageLiterate": {
    "title": "percentageLiterate",
    "types": [
      "XMLSchema#float"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "regionalCouncil": {
    "title": "regionalCouncil",
    "types": [
      "TermOfOffice"
    ],
    "classes": [
      "Agent"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "saint": {
    "title": "saint",
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "types": [
      "Saint"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfVillages": {
    "title": "numberOfVillages",
    "classes": [
      "District"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfSilverMedalsWon": {
    "title": "numberOfSilverMedalsWon",
    "classes": [
      "SportCompetitionResult"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "rebuildingDate": {
    "title": "rebuildingDate",
    "classes": [
      "ArchitecturalStructure"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "computingInput": {
    "title": "computingInput",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "Software"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "typeOfYeast": {
    "title": "typeOfYeast",
    "classes": [
      "Food"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "subsidiary": {
    "title": "subsidiary",
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "Company"
    ],
    "types": [
      "Company"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfCollectionItems": {
    "title": "numberOfCollectionItems",
    "description": "Indication as to the size of the collection of this library",
    "classes": [
      "Library"
    ],
    "types": [
      "XMLSchema#integer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "frazioni": {
    "title": "frazioni",
    "subPropertyOf": [
      "DUL.owl#hasPart"
    ],
    "types": [
      "PopulatedPlace"
    ],
    "classes": [
      "Settlement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "areaTotalRanking": {
    "title": "areaTotalRanking",
    "types": [
      "XMLSchema#positiveInteger"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "egafdId": {
    "title": "egafdId",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Film"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "mergerDate": {
    "title": "mergerDate",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "guest": {
    "title": "guest",
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ],
    "classes": [
      "TelevisionEpisode"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "loadLimit": {
    "title": "loadLimit",
    "description": "Load limit of the bridge.",
    "types": [
      "XMLSchema#double"
    ],
    "classes": [
      "Bridge"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "locality": {
    "title": "locality",
    "classes": [
      "Settlement"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "university": {
    "title": "university",
    "types": [
      "EducationalInstitution"
    ],
    "description": "The university is an educational institution of higher education and scientific research that provides an academic education certification degree.",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "fight": {
    "title": "fight",
    "classes": [
      "Boxer"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "greenLongDistancePisteNumber": {
    "title": "greenLongDistancePisteNumber",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "nutsCode": {
    "title": "nutsCode",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "description": "Nomenclature of Territorial Units for Statistics (NUTS) is a geocode  standard for referencing the subdivisions of countries  for statistical purposes. The standard is developed and regulated by the European Union, and thus only covers the member states of the EU in detail.",
    "ontology": [
      "DBpedia"
    ]
  },
  "leftTributary": {
    "title": "leftTributary",
    "subPropertyOf": [
      "DUL.owl#hasCommonBoundary"
    ],
    "classes": [
      "River"
    ],
    "types": [
      "River"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "solventWithBadSolubility": {
    "title": "solventWithBadSolubility",
    "types": [
      "ChemicalSubstance"
    ],
    "classes": [
      "ChemicalSubstance"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "salary": {
    "title": "salary",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "prospectTeam": {
    "title": "prospectTeam",
    "classes": [
      "IceHockeyPlayer"
    ],
    "subPropertyOf": [
      "DUL.owl#isMemberOf"
    ],
    "types": [
      "HockeyTeam"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "maxTime": {
    "title": "maxTime",
    "classes": [
      "Food"
    ],
    "description": "Maximum preparation time of a recipe / Food",
    "types": [
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "volumes": {
    "title": "volumes",
    "classes": [
      "MultiVolumePublication"
    ],
    "subPropertyOf": [
      "DUL.owl#hasMember"
    ],
    "types": [
      "WrittenWork"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "icaoLocationIdentifier": {
    "title": "icaoLocationIdentifier",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Airport"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "spacecraft": {
    "title": "spacecraft",
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ],
    "classes": [
      "SpaceMission"
    ],
    "types": [
      "Spacecraft"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "distanceToCapital": {
    "title": "distanceToCapital",
    "classes": [
      "Settlement"
    ],
    "subPropertyOf": [
      "Distance"
    ],
    "types": [
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "novel": {
    "title": "novel",
    "classes": [
      "FictionalCharacter"
    ],
    "subPropertyOf": [
      "DUL.owl#isParticipantIn"
    ],
    "types": [
      "Novel"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "schoolCode": {
    "title": "schoolCode",
    "classes": [
      "School"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "museum": {
    "title": "museum",
    "types": [
      "Museum"
    ],
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "classes": [
      "Artwork"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "relative": {
    "title": "relative",
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "Person"
    ],
    "types": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "totalPopulation": {
    "title": "totalPopulation",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "EthnicGroup"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "tonyAward": {
    "title": "tonyAward",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "Artist"
    ],
    "types": [
      "Award"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "waterwayThroughTunnel": {
    "title": "waterwayThroughTunnel",
    "description": "Waterway that goes through the tunnel.",
    "classes": [
      "WaterwayTunnel"
    ],
    "subPropertyOf": [
      "DUL.owl#hasCommonBoundary"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "protestantPercentage": {
    "title": "protestantPercentage",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "allegiance": {
    "title": "allegiance",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "description": "The country or other power the person served. Multiple countries may be indicated together with the corresponding dates. This field should not be used to indicate a particular service branch, which is better indicated by the branch field.",
    "ontology": [
      "DBpedia"
    ]
  },
  "glycemicIndex": {
    "title": "glycemicIndex",
    "description": "Indicates a Food's effect on a person's blood glucose (blood sugar) level. Typically ranges between 50 and 100, where 100 represents the standard, an equivalent amount of pure glucose",
    "classes": [
      "Food"
    ],
    "types": [
      "XMLSchema#integer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "linkedTo": {
    "title": "linkedTo",
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "types": [
      "Place"
    ],
    "classes": [
      "SkiResort"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "distanceToCharingCross": {
    "title": "distanceToCharingCross",
    "types": [
      "XMLSchema#double"
    ],
    "classes": [
      "Settlement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "flower": {
    "title": "flower",
    "classes": [
      "Place"
    ],
    "types": [
      "Species"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "outflow": {
    "title": "outflow",
    "subPropertyOf": [
      "DUL.owl#hasCommonBoundary"
    ],
    "types": [
      "River"
    ],
    "classes": [
      "BodyOfWater"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "historicalName": {
    "title": "historicalName",
    "types": [
      "22-rdf-syntax-ns#langString"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "woRMS": {
    "title": "woRMS",
    "classes": [
      "Species"
    ],
    "description": "World Register of Marine Species",
    "ontology": [
      "DBpedia"
    ]
  },
  "imposedDanseScore": {
    "title": "imposedDanseScore",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "buildingStartYear": {
    "title": "buildingStartYear",
    "classes": [
      "ArchitecturalStructure"
    ],
    "types": [
      "XMLSchema#gYear"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "medalist": {
    "title": "medalist",
    "classes": [
      "SportsEvent"
    ],
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "greenSkiPisteNumber": {
    "title": "greenSkiPisteNumber",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "eparchy": {
    "title": "eparchy",
    "classes": [
      "ReligiousBuilding"
    ],
    "description": "Compare with bishopric",
    "ontology": [
      "DBpedia"
    ]
  },
  "circuitName": {
    "title": "circuitName",
    "types": [
      "22-rdf-syntax-ns#langString"
    ],
    "classes": [
      "FormulaOneRacing"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "block": {
    "title": "block",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "VolleyballPlayer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "populationPctChildren": {
    "title": "populationPctChildren",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "noContest": {
    "title": "noContest",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Boxer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "productionYears": {
    "title": "productionYears",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "Aircraft"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "meanRadius": {
    "title": "meanRadius",
    "classes": [
      "Planet",
      "Galaxy",
      "Planet"
    ],
    "types": [
      "kilometre",
      "XMLSchema#double",
      "kilometre"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "peabodyAward": {
    "title": "peabodyAward",
    "classes": [
      "Comedian"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "types": [
      "Award"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "cityRank": {
    "title": "cityRank",
    "description": "The place of the building in the list of the tallest buildings in the city",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Skyscraper"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "silverMedalist": {
    "title": "silverMedalist",
    "classes": [
      "SportsEvent"
    ],
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "Medalist",
      "DUL.owl#hasParticipant"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "kindOfRock": {
    "title": "kindOfRock",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "careerStation": {
    "title": "careerStation",
    "subPropertyOf": [
      "DUL.owl#hasSetting"
    ],
    "classes": [
      "Person"
    ],
    "description": "this property links to a step in the career of a person, e.g. a soccer player, holding information on the time span, matches and goals he or she achieved at a club.",
    "types": [
      "CareerStation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "winsAtMajors": {
    "title": "winsAtMajors",
    "classes": [
      "GolfPlayer"
    ],
    "subPropertyOf": [
      "DUL.owl#isParticipantIn"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "temperature": {
    "title": "temperature",
    "types": [
      "XMLSchema#double",
      "kelvin",
      "kelvin"
    ],
    "classes": [
      "Galaxy",
      "Planet"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "startWct": {
    "title": "startWct",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "railGauge": {
    "title": "railGauge",
    "classes": [
      "RouteOfTransportation"
    ],
    "types": [
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "distanceToEdinburgh": {
    "title": "distanceToEdinburgh",
    "types": [
      "XMLSchema#double"
    ],
    "classes": [
      "Settlement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "populationAsOf": {
    "title": "populationAsOf",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "olympicGamesGold": {
    "title": "olympicGamesGold",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "colorChart": {
    "title": "colorChart",
    "classes": [
      "FictionalCharacter"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "floorCount": {
    "title": "floorCount",
    "types": [
      "XMLSchema#positiveInteger"
    ],
    "classes": [
      "Building"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "wptTitle": {
    "title": "wptTitle",
    "classes": [
      "PokerPlayer"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "modelEndDate": {
    "title": "modelEndDate",
    "classes": [
      "MeanOfTransportation"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "rankingsDoubles": {
    "title": "rankingsDoubles",
    "classes": [
      "TennisPlayer"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "templeYear": {
    "title": "templeYear",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "meetingBuilding": {
    "title": "meetingBuilding",
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "types": [
      "Building"
    ],
    "classes": [
      "Legislature"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "olympicGamesSilver": {
    "title": "olympicGamesSilver",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "amateurYear": {
    "title": "amateurYear",
    "classes": [
      "Athlete,_CareerStation"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "launch": {
    "title": "launch",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "Spacecraft"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "associatedRocket": {
    "title": "associatedRocket",
    "types": [
      "Rocket"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "LaunchPad"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "notableFeatures": {
    "title": "notableFeatures",
    "classes": [
      "Galaxy"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "yearOfElectrification": {
    "title": "yearOfElectrification",
    "description": "Year when the station was electrified, if it was not when it was opened.",
    "types": [
      "XMLSchema#gYear"
    ],
    "classes": [
      "Station"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "coProducer": {
    "title": "coProducer",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "types": [
      "Person"
    ],
    "classes": [
      "TelevisionShow"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "codeStockExchange": {
    "title": "codeStockExchange",
    "subPropertyOf": [
      "code"
    ],
    "classes": [
      "Company"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "surfaceGravity": {
    "title": "surfaceGravity",
    "classes": [
      "Planet"
    ],
    "types": [
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "ingredientName": {
    "title": "ingredientName",
    "types": [
      "XMLSchema#string"
    ],
    "subPropertyOf": [
      "DUL.owl#hasPart"
    ],
    "classes": [
      "Food"
    ],
    "description": "Main ingredient used to prepare a specific Food or Beverage. For strings use ingredientName, for objects use ingredient.",
    "ontology": [
      "DBpedia"
    ]
  },
  "binomial": {
    "title": "binomial",
    "classes": [
      "Species"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "academyAward": {
    "title": "academyAward",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "Artist"
    ],
    "types": [
      "Award"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "cluster": {
    "title": "cluster",
    "classes": [
      "Galaxy"
    ],
    "subPropertyOf": [
      "DUL.owl#hasPart"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "headteacher": {
    "title": "headteacher",
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "School"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "redListIdNL": {
    "title": "redListIdNL",
    "description": "Red List ID of endangered species in the Netherlands",
    "classes": [
      "Species"
    ],
    "types": [
      "XMLSchema#integer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "grammyAward": {
    "title": "grammyAward",
    "types": [
      "Award"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "Artist"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "minimumElevation": {
    "title": "minimumElevation",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#double"
    ],
    "description": "minimum elevation above the sea level",
    "ontology": [
      "DBpedia"
    ]
  },
  "locationIdentifier": {
    "title": "locationIdentifier",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Airport"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "operatingIncome": {
    "title": "operatingIncome",
    "types": [
      "XMLSchema#double"
    ],
    "classes": [
      "Company"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "administrativeCollectivity": {
    "title": "administrativeCollectivity",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "types": [
      "PopulatedPlace"
    ],
    "classes": [
      "Settlement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "configuration": {
    "title": "configuration",
    "classes": [
      "AutomobileEngine"
    ],
    "types": [
      "engineConfiguration"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "atRowNumber": {
    "title": "atRowNumber",
    "types": [
      "XMLSchema#string"
    ],
    "description": "Row # where the referenced resource is to be found in the source file",
    "classes": [
      "Reference"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "politicalMajority": {
    "title": "politicalMajority",
    "types": [
      "PoliticalParty"
    ],
    "classes": [
      "Settlement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "relatedMeanOfTransportation": {
    "title": "relatedMeanOfTransportation",
    "classes": [
      "MeanOfTransportation"
    ],
    "types": [
      "MeanOfTransportation"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "functionEndYear": {
    "title": "functionEndYear",
    "types": [
      "XMLSchema#gYear"
    ],
    "classes": [
      "PersonFunction"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "sexualOrientation": {
    "title": "sexualOrientation",
    "subPropertyOf": [
      "DUL.owl#hasQuality"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "baftaAward": {
    "title": "baftaAward",
    "classes": [
      "Artist"
    ],
    "types": [
      "Award"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "spouseName": {
    "title": "spouseName",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "suborbitalFlights": {
    "title": "suborbitalFlights",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "YearInSpaceflight"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "assistantPrincipal": {
    "title": "assistantPrincipal",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "School"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "organisationMember": {
    "title": "organisationMember",
    "subPropertyOf": [
      "DUL.owl#hasMember"
    ],
    "description": "Identify the members of an organisation.",
    "types": [
      "OrganisationMember"
    ],
    "classes": [
      "Organisation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "bioavailability": {
    "title": "bioavailability",
    "types": [
      "XMLSchema#float"
    ],
    "classes": [
      "Drug"
    ],
    "description": "\"The rate and extent to which the active ingredient or active moiety is absorbed from a drug product and becomes available at the site of action. For drug products that are not intended to be absorbed into the bloodstream, bioavailability may be assessed by measurements intended to reflect the rate and extent to which the active ingredient or active moiety becomes available at the site of action (21CFR320.1).\"",
    "ontology": [
      "DBpedia"
    ]
  },
  "libretto": {
    "title": "libretto",
    "classes": [
      "Opera"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "musicalBand": {
    "title": "musicalBand",
    "classes": [
      "Single"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "types": [
      "Band"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "skiPisteNumber": {
    "title": "skiPisteNumber",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "ordination": {
    "title": "ordination",
    "classes": [
      "Priest"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfCapitalDeputies": {
    "title": "numberOfCapitalDeputies",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "geolocDual": {
    "title": "geolocDual",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "closingFilm": {
    "title": "closingFilm",
    "classes": [
      "FilmFestival"
    ],
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ],
    "types": [
      "Film"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "command": {
    "title": "command",
    "classes": [
      "MilitaryPerson"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "managerClub": {
    "title": "managerClub",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "Athlete"
    ],
    "types": [
      "SportsTeam"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfSpeakers": {
    "title": "numberOfSpeakers",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Language"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "competitionTitle": {
    "title": "competitionTitle",
    "types": [
      "SportsEvent"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfStations": {
    "title": "numberOfStations",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "RouteOfTransportation"
    ],
    "description": "Number of stations or stops.",
    "ontology": [
      "DBpedia"
    ]
  },
  "powerOutput": {
    "title": "powerOutput",
    "classes": [
      "Engine",
      "AutomobileEngine"
    ],
    "types": [
      "XMLSchema#double",
      "kilowatt"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "appearancesInLeague": {
    "title": "appearancesInLeague",
    "classes": [
      "SoccerPlayer"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "soccerLeagueWinner": {
    "title": "soccerLeagueWinner",
    "subPropertyOf": [
      "DUL.owl#isSettingFor"
    ],
    "types": [
      "SportsTeam"
    ],
    "classes": [
      "SoccerLeagueSeason"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "provinceIsoCode": {
    "title": "provinceIsoCode",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "subPropertyOf": [
      "isoCode"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "runwayDesignation": {
    "title": "runwayDesignation",
    "classes": [
      "Airport"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "constellation": {
    "title": "constellation",
    "classes": [
      "CelestialBody"
    ],
    "subPropertyOf": [
      "DUL.owl#hasPart"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "speciality": {
    "title": "speciality",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "championInSingle": {
    "title": "championInSingle",
    "description": "winner of a competition in the single session, to distinguish from the double session (as in tennis)",
    "subPropertyOf": [
      "DUL.owl#hasParticipant",
      "champion"
    ],
    "classes": [
      "SportsEvent"
    ],
    "types": [
      "Athlete"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "dateUse": {
    "title": "dateUse",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "Canal"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "icdo": {
    "title": "icdo",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Disease"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "initiallyUsedFor": {
    "title": "initiallyUsedFor",
    "types": [
      "XMLSchema#string"
    ],
    "description": "Initial use of the architectural structure.",
    "classes": [
      "ArchitecturalStructure"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "dorlandsSuffix": {
    "title": "dorlandsSuffix",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "AnatomicalStructure"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "albedo": {
    "title": "albedo",
    "classes": [
      "Planet"
    ],
    "description": "reflection coefficient",
    "types": [
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfTeams": {
    "title": "numberOfTeams",
    "classes": [
      "SportsLeague"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfCompetitors": {
    "title": "numberOfCompetitors",
    "classes": [
      "OlympicResult"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "starring": {
    "title": "starring",
    "types": [
      "Actor"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "Work"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "laurenceOlivierAward": {
    "title": "laurenceOlivierAward",
    "classes": [
      "Actor"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "types": [
      "Award"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "distanceToNearestCity": {
    "title": "distanceToNearestCity",
    "types": [
      "XMLSchema#double"
    ],
    "classes": [
      "Settlement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "grossDomesticProduct": {
    "title": "grossDomesticProduct",
    "types": [
      "XMLSchema#double"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "allcinemaId": {
    "title": "allcinemaId",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Film"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "messierName": {
    "title": "messierName",
    "description": "Name for Messier objects",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "CelestialBody"
    ],
    "subPropertyOf": [
      "name"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "worldTeamCup": {
    "title": "worldTeamCup",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Athlete"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "film": {
    "title": "film",
    "subPropertyOf": [
      "DUL.owl#hasPart"
    ],
    "classes": [
      "FilmFestival"
    ],
    "types": [
      "Film"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "bishopric": {
    "title": "bishopric",
    "classes": [
      "ReligiousBuilding"
    ],
    "description": "A bishopric (diocese or episcopal see) is a district under the supervision of a bishop. It is divided into parishes. Compare with eparchy",
    "ontology": [
      "DBpedia"
    ]
  },
  "meetingCity": {
    "title": "meetingCity",
    "types": [
      "Settlement"
    ],
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "classes": [
      "Legislature"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "populationUrban": {
    "title": "populationUrban",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "highwaySystem": {
    "title": "highwaySystem",
    "subPropertyOf": [
      "DUL.owl#isPartOf"
    ],
    "description": "the highway system that a route is part of",
    "classes": [
      "Road"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "subPrefecture": {
    "title": "subPrefecture",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "defeat": {
    "title": "defeat",
    "classes": [
      "Boxer"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "silverMedalDouble": {
    "title": "silverMedalDouble",
    "classes": [
      "TennisPlayer"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "albumRuntime": {
    "title": "albumRuntime",
    "classes": [
      "Album"
    ],
    "types": [
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "coachingRecord": {
    "title": "coachingRecord",
    "classes": [
      "CollegeCoach"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "sameName": {
    "title": "sameName",
    "classes": [
      "Settlement"
    ],
    "types": [
      "22-rdf-syntax-ns#langString"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfFederalDeputies": {
    "title": "numberOfFederalDeputies",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "photographer": {
    "title": "photographer",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "TelevisionEpisode"
    ],
    "types": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "canonizedBy": {
    "title": "canonizedBy",
    "types": [
      "Person"
    ],
    "classes": [
      "Saint"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "specialEffects": {
    "title": "specialEffects",
    "classes": [
      "Film"
    ],
    "description": "the person who is responsible for the film special effects",
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfVineyards": {
    "title": "numberOfVineyards",
    "classes": [
      "WineRegion"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "cemetery": {
    "title": "cemetery",
    "types": [
      "Cemetery"
    ],
    "classes": [
      "ReligiousBuilding"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "created": {
    "title": "created",
    "types": [
      "Work"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "headChef": {
    "title": "headChef",
    "classes": [
      "Restaurant"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "types": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "educationSystem": {
    "title": "educationSystem",
    "subPropertyOf": [
      "DUL.owl#isPartOf"
    ],
    "classes": [
      "EducationalInstitution"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "supplies": {
    "title": "supplies",
    "classes": [
      "Artery"
    ],
    "types": [
      "AnatomicalStructure"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "destination": {
    "title": "destination",
    "types": [
      "PopulatedPlace"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "Airline"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "populationDensity": {
    "title": "populationDensity",
    "types": [
      "inhabitantsPerSquareKilometre",
      "XMLSchema#double",
      "inhabitantsPerSquareKilometre"
    ],
    "classes": [
      "GeopoliticalOrganisation",
      "PopulatedPlace",
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "grossDomesticProductRank": {
    "title": "grossDomesticProductRank",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "years": {
    "title": "years",
    "classes": [
      "SoccerPlayer"
    ],
    "types": [
      "XMLSchema#gYear"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "deanery": {
    "title": "deanery",
    "description": "Dioceses and parishes should know which deaneries there are",
    "classes": [
      "Diocese,_Parish"
    ],
    "subPropertyOf": [
      "DUL.owl#isPartOf"
    ],
    "types": [
      "Deanery"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "bustWaistHipSize": {
    "title": "bustWaistHipSize",
    "description": "Use this property if all 3 sizes are given together (DBpedia cannot currently extract 3 Lengths out of a field). Otherwise use separate fields bustSize, waistSize, hipSize",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "facultySize": {
    "title": "facultySize",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "EducationalInstitution"
    ],
    "description": "number of faculty members",
    "ontology": [
      "DBpedia"
    ]
  },
  "zipCode": {
    "title": "zipCode",
    "subPropertyOf": [
      "postalCode"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "typeOfStorage": {
    "title": "typeOfStorage",
    "classes": [
      "Food"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "originalEndPoint": {
    "title": "originalEndPoint",
    "subPropertyOf": [
      "DUL.owl#hasCommonBoundary"
    ],
    "types": [
      "Place"
    ],
    "classes": [
      "Canal"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfAlbums": {
    "title": "numberOfAlbums",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "MusicalArtist"
    ],
    "description": "the total number of albums released by the musical artist",
    "ontology": [
      "DBpedia"
    ]
  },
  "coolingSystem": {
    "title": "coolingSystem",
    "classes": [
      "AutomobileEngine"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "populationQuote": {
    "title": "populationQuote",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "space": {
    "title": "space",
    "classes": [
      "Building"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "canBaggageChecked": {
    "title": "canBaggageChecked",
    "description": "Whether bags can be checked.",
    "classes": [
      "Station"
    ],
    "types": [
      "XMLSchema#boolean"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "countryRank": {
    "title": "countryRank",
    "description": "The building's place in the list of the tallest buildings in the country",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Skyscraper"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "totalMass": {
    "title": "totalMass",
    "types": [
      "XMLSchema#double",
      "kilogram"
    ],
    "classes": [
      "Spacecraft",
      "Spacecraft"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "nameDay": {
    "title": "nameDay",
    "classes": [
      "GivenName"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "cylinderCount": {
    "title": "cylinderCount",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Locomotive"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "demolitionYear": {
    "title": "demolitionYear",
    "types": [
      "XMLSchema#gYear"
    ],
    "description": "The year the building was demolished.",
    "classes": [
      "ArchitecturalStructure"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "titleSingle": {
    "title": "titleSingle",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "TennisPlayer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfLanes": {
    "title": "numberOfLanes",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "RouteOfTransportation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "generationUnits": {
    "title": "generationUnits",
    "types": [
      "22-rdf-syntax-ns#langString"
    ],
    "classes": [
      "PowerStation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "agglomerationArea": {
    "title": "agglomerationArea",
    "types": [
      "Area"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "areaCode": {
    "title": "areaCode",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Place"
    ],
    "description": "Area code for telephone numbers. Use this not phonePrefix",
    "ontology": [
      "DBpedia"
    ]
  },
  "satellite": {
    "title": "satellite",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Planet"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "dischargeAverage": {
    "title": "dischargeAverage",
    "types": [
      "XMLSchema#double",
      "cubicMetrePerSecond"
    ],
    "classes": [
      "Stream",
      "MeanOfTransportation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "codeLandRegistry": {
    "title": "codeLandRegistry",
    "description": "Cadastral code for a plot",
    "types": [
      "XMLSchema#string"
    ],
    "subPropertyOf": [
      "Code"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "timeInSpace": {
    "title": "timeInSpace",
    "classes": [
      "SpaceShuttle",
      "Astronaut"
    ],
    "types": [
      "day",
      "XMLSchema#double",
      "minute"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "branchTo": {
    "title": "branchTo",
    "types": [
      "AnatomicalStructure"
    ],
    "classes": [
      "AnatomicalStructure"
    ],
    "subPropertyOf": [
      "DUL.owl#hasCommonBoundary"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "oldName": {
    "title": "oldName",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "iso6392Code": {
    "title": "iso6392Code",
    "subPropertyOf": [
      "LanguageCode"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Language"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "subGenus": {
    "title": "subGenus",
    "subPropertyOf": [
      "DUL.owl#specializes"
    ],
    "classes": [
      "Species"
    ],
    "description": "A rank in the classification of organisms, below genus ; a taxon at that rank",
    "ontology": [
      "DBpedia"
    ]
  },
  "sportCountry": {
    "title": "sportCountry",
    "description": "The country, for which the athlete is participating in championships",
    "types": [
      "Country"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "Athlete"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "projectType": {
    "title": "projectType",
    "description": "The type of the research project. Mostly used for the funding schemes of the European Union, for instance: Specific Targeted Research Projects (STREP), Network of Excellence (NoE) or Integrated Project.",
    "classes": [
      "ResearchProject"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "school": {
    "title": "school",
    "classes": [
      "Person"
    ],
    "description": "school a person goes or went to",
    "types": [
      "EducationalInstitution"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "timeZone": {
    "title": "timeZone",
    "classes": [
      "Place"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "routeActivity": {
    "title": "routeActivity",
    "description": "detail of activity on a road.",
    "classes": [
      "RouteStop"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "activeYears": {
    "title": "activeYears",
    "description": "Also called \"floruit\". Use this if the active years are in one field that can't be split. Else use activeYearsStartYear and activeYearsEndYear",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "nationalRanking": {
    "title": "nationalRanking",
    "types": [
      "XMLSchema#positiveInteger"
    ],
    "classes": [
      "School"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "powerType": {
    "title": "powerType",
    "classes": [
      "MeanOfTransportation"
    ],
    "subPropertyOf": [
      "DUL.owl#isClassifiedBy"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "complexity": {
    "title": "complexity",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Food"
    ],
    "description": "Complexity of preparing a Food (recipe)",
    "ontology": [
      "DBpedia"
    ]
  },
  "iconographicAttributes": {
    "title": "iconographicAttributes",
    "types": [
      "22-rdf-syntax-ns#langString"
    ],
    "classes": [
      "Saint"
    ],
    "description": "Standard iconographic elements used when depicting a Saint: pontifical, episcopal, insignia, martyrdom instruments",
    "ontology": [
      "DBpedia"
    ]
  },
  "dateCompleted": {
    "title": "dateCompleted",
    "classes": [
      "Canal"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "countryOrigin": {
    "title": "countryOrigin",
    "classes": [
      "Rocket"
    ],
    "types": [
      "Country"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "countryWithFirstAstronaut": {
    "title": "countryWithFirstAstronaut",
    "classes": [
      "YearInSpaceflight"
    ],
    "types": [
      "Country"
    ],
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "launchSite": {
    "title": "launchSite",
    "classes": [
      "SpaceMission"
    ],
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ],
    "types": [
      "Building"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "citizenship": {
    "title": "citizenship",
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "percentageFat": {
    "title": "percentageFat",
    "classes": [
      "Food"
    ],
    "description": "how much fat (as a percentage) does this food contain. Mostly applies to Cheese",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "skinColor": {
    "title": "skinColor",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "projectBudgetFunding": {
    "title": "projectBudgetFunding",
    "classes": [
      "ResearchProject"
    ],
    "description": "The part of the project budget that is funded by the Organistaions given in the \"FundedBy\" property.",
    "types": [
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "arrondissement": {
    "title": "arrondissement",
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "crewMember": {
    "title": "crewMember",
    "classes": [
      "SpaceMission"
    ],
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ],
    "types": [
      "Astronaut"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "movement": {
    "title": "movement",
    "subPropertyOf": [
      "DUL.owl#isMemberOf"
    ],
    "description": "artistic movement or school with which artist is associated",
    "classes": [
      "Artist"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "populationUrbanDensity": {
    "title": "populationUrbanDensity",
    "classes": [
      "PopulatedPlace",
      "PopulatedPlace"
    ],
    "types": [
      "inhabitantsPerSquareKilometre",
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "goalsInLeague": {
    "title": "goalsInLeague",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "SoccerPlayer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "politicGovernmentDepartment": {
    "title": "politicGovernmentDepartment",
    "subPropertyOf": [
      "DUL.owl#hasPart",
      "Department"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "homeport": {
    "title": "homeport",
    "classes": [
      "Ship"
    ],
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "types": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "latestReleaseDate": {
    "title": "latestReleaseDate",
    "classes": [
      "Software"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberSold": {
    "title": "numberSold",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Sales"
    ],
    "description": "Number of things (eg vehicles) sold",
    "ontology": [
      "DBpedia"
    ]
  },
  "primogenitor": {
    "title": "primogenitor",
    "classes": [
      "Family"
    ],
    "types": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "officialSchoolColour": {
    "title": "officialSchoolColour",
    "classes": [
      "EducationalInstitution"
    ],
    "description": "The official colour of the EducationalInstitution represented by the colour name (e.g.: red or green).",
    "subPropertyOf": [
      "ColourName"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "congressionalDistrict": {
    "title": "congressionalDistrict",
    "classes": [
      "AdministrativeRegion"
    ],
    "subPropertyOf": [
      "DUL.owl#isPartOf"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "commandStructure": {
    "title": "commandStructure",
    "types": [
      "MilitaryUnit"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "MilitaryUnit"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lymph": {
    "title": "lymph",
    "classes": [
      "AnatomicalStructure"
    ],
    "subPropertyOf": [
      "DUL.owl#hasCommonBoundary"
    ],
    "types": [
      "Lymph"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "urbanArea": {
    "title": "urbanArea",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Settlement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "reservations": {
    "title": "reservations",
    "classes": [
      "Restaurant"
    ],
    "types": [
      "XMLSchema#boolean"
    ],
    "description": "Are reservations required for the establishment or event?",
    "ontology": [
      "DBpedia"
    ]
  },
  "otherFuelType": {
    "title": "otherFuelType",
    "classes": [
      "PowerStation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "primaryFuelType": {
    "title": "primaryFuelType",
    "classes": [
      "PowerStation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "chaplain": {
    "title": "chaplain",
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "School"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lastPosition": {
    "title": "lastPosition",
    "classes": [
      "FormulaOneRacer"
    ],
    "types": [
      "XMLSchema#positiveInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "billed": {
    "title": "billed",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "Wrestler"
    ],
    "types": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lethalOnRabbits": {
    "title": "lethalOnRabbits",
    "classes": [
      "ChemicalSubstance"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "heightAttack": {
    "title": "heightAttack",
    "classes": [
      "Athlete"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "restingDate": {
    "title": "restingDate",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "finalPublicationYear": {
    "title": "finalPublicationYear",
    "types": [
      "XMLSchema#gYear"
    ],
    "description": "Year of the very last publication of the periodical.",
    "classes": [
      "PeriodicalLiterature"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "codeIndex": {
    "title": "codeIndex",
    "subPropertyOf": [
      "code"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "MemberResistanceMovement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "statisticYear": {
    "title": "statisticYear",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "BaseballPlayer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "groupCommemorated": {
    "title": "groupCommemorated",
    "classes": [
      "Monument"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "description": "Designates the category of people commemorated by a monument",
    "ontology": [
      "DBpedia"
    ]
  },
  "gameEngine": {
    "title": "gameEngine",
    "classes": [
      "VideoGame"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "handedness": {
    "title": "handedness",
    "description": "an attribute of humans defined by their unequal distribution of fine motor skill between the left and right hands.",
    "classes": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#hasQuality"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "stateOfOrigin": {
    "title": "stateOfOrigin",
    "types": [
      "Country"
    ],
    "classes": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "isPeerReviewed": {
    "title": "isPeerReviewed",
    "types": [
      "XMLSchema#boolean"
    ],
    "description": "In academia peer review is often used to determine an academic papers suitability for publication.",
    "classes": [
      "AcademicJournal"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "codeSettlement": {
    "title": "codeSettlement",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Settlement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "water": {
    "title": "water",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "meshId": {
    "title": "meshId",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Disease"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "gnl": {
    "title": "gnl",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "mainFamilyBranch": {
    "title": "mainFamilyBranch",
    "types": [
      "Family"
    ],
    "classes": [
      "NobleFamily"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "security": {
    "title": "security",
    "types": [
      "XMLSchema#string"
    ],
    "description": "Safety precautions that are used in the building.",
    "classes": [
      "Building"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "highestPoint": {
    "title": "highestPoint",
    "types": [
      "Place"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "Settlement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "dcc": {
    "title": "dcc",
    "classes": [
      "Work"
    ],
    "description": "The Dewey Decimal Classification is a proprietary system of library classification developed by Melvil Dewey in 1876.",
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "rocket": {
    "title": "rocket",
    "classes": [
      "Spacecraft"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "types": [
      "Rocket"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "formerHighschool": {
    "title": "formerHighschool",
    "types": [
      "EducationalInstitution"
    ],
    "classes": [
      "NationalCollegiateAthleticAssociationAthlete"
    ],
    "subPropertyOf": [
      "DUL.owl#isMemberOf"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "aircraftHelicopterAttack": {
    "title": "aircraftHelicopterAttack",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "MilitaryUnit"
    ],
    "types": [
      "MeanOfTransportation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "routeJunction": {
    "title": "routeJunction",
    "types": [
      "RouteOfTransportation"
    ],
    "subPropertyOf": [
      "DUL.owl#hasCommonBoundary"
    ],
    "classes": [
      "RouteOfTransportation"
    ],
    "description": "A junction or cross to another route.",
    "ontology": [
      "DBpedia"
    ]
  },
  "coachSeason": {
    "title": "coachSeason",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Athlete"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "aircraftHelicopterMultirole": {
    "title": "aircraftHelicopterMultirole",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "MilitaryUnit"
    ],
    "types": [
      "MeanOfTransportation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "approximateCalories": {
    "title": "approximateCalories",
    "description": "Approximate calories per serving.",
    "types": [
      "XMLSchema#double"
    ],
    "classes": [
      "Food"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "bloodType": {
    "title": "bloodType",
    "subPropertyOf": [
      "DUL.owl#isClassifiedBy"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "causedBy": {
    "title": "causedBy",
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "Event"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "openAccessContent": {
    "title": "openAccessContent",
    "classes": [
      "PeriodicalLiterature"
    ],
    "description": "Availability of open access content.",
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "maidenVoyage": {
    "title": "maidenVoyage",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "Ship"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "continent": {
    "title": "continent",
    "description": "large areas of land surrounded by oceans",
    "classes": [
      "Country"
    ],
    "subPropertyOf": [
      "DUL.owl#isPartOf"
    ],
    "types": [
      "Continent"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "parish": {
    "title": "parish",
    "types": [
      "PopulatedPlace"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "subPropertyOf": [
      "DUL.owl#isPartOf"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "firstOlympicEvent": {
    "title": "firstOlympicEvent",
    "classes": [
      "Sport"
    ],
    "subPropertyOf": [
      "DUL.owl#isParticipantIn"
    ],
    "types": [
      "OlympicEvent"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "greekName": {
    "title": "greekName",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "AnatomicalStructure"
    ],
    "subPropertyOf": [
      "Name"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfSettlement": {
    "title": "numberOfSettlement",
    "classes": [
      "Department"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "legalArrondissement": {
    "title": "legalArrondissement",
    "classes": [
      "BelgiumSettlement"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "victory": {
    "title": "victory",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "size_v": {
    "title": "size_v",
    "classes": [
      "Openswarm"
    ],
    "types": [
      "XMLSchema#integer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "icd9": {
    "title": "icd9",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Disease"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "distanceToCardiff": {
    "title": "distanceToCardiff",
    "types": [
      "XMLSchema#double"
    ],
    "classes": [
      "Settlement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "hybrid": {
    "title": "hybrid",
    "description": "Plants from which another plant (or cultivar) has been developed from",
    "subPropertyOf": [
      "DUL.owl#isSpecializedBy"
    ],
    "types": [
      "Plant"
    ],
    "classes": [
      "Plant"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "heir": {
    "title": "heir",
    "classes": [
      "Monarch"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "types": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "continentalTournamentBronze": {
    "title": "continentalTournamentBronze",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "bedCount": {
    "title": "bedCount",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Hospital"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "foundationPlace": {
    "title": "foundationPlace",
    "types": [
      "City"
    ],
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "classes": [
      "Organisation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "cultivatedVariety": {
    "title": "cultivatedVariety",
    "classes": [
      "Plant"
    ],
    "description": "Name of the cultivar (cultivated variety)",
    "subPropertyOf": [
      "DUL.owl#isSpecializedBy"
    ],
    "types": [
      "CultivatedVariety"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "informationName": {
    "title": "informationName",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "nextEvent": {
    "title": "nextEvent",
    "subPropertyOf": [
      "followedBy",
      "DUL.owl#precedes"
    ],
    "classes": [
      "Event"
    ],
    "types": [
      "Event"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "hsvCoordinateSaturation": {
    "title": "hsvCoordinateSaturation",
    "classes": [
      "Colour"
    ],
    "types": [
      "XMLSchema#integer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "militaryBranch": {
    "title": "militaryBranch",
    "subPropertyOf": [
      "DUL.owl#isMemberOf"
    ],
    "classes": [
      "MilitaryPerson"
    ],
    "description": "The service branch (Army, Navy, etc.) a person is part of.",
    "types": [
      "MilitaryUnit"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "buildingEndYear": {
    "title": "buildingEndYear",
    "classes": [
      "ArchitecturalStructure"
    ],
    "types": [
      "XMLSchema#gYear"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "mergedSettlement": {
    "title": "mergedSettlement",
    "classes": [
      "Settlement"
    ],
    "types": [
      "Settlement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "drainsFrom": {
    "title": "drainsFrom",
    "classes": [
      "AnatomicalStructure"
    ],
    "subPropertyOf": [
      "DUL.owl#hasCommonBoundary"
    ],
    "types": [
      "AnatomicalStructure"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lake": {
    "title": "lake",
    "subPropertyOf": [
      "DUL.owl#nearTo"
    ],
    "classes": [
      "Place"
    ],
    "types": [
      "BodyOfWater"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "documentNumber": {
    "title": "documentNumber",
    "classes": [
      "Document"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "description": "Identification a document within a particular registry",
    "ontology": [
      "DBpedia"
    ]
  },
  "specialist": {
    "title": "specialist",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "School"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "seniunija": {
    "title": "seniunija",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "summerAppearances": {
    "title": "summerAppearances",
    "types": [
      "OlympicResult"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "OlympicResult"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "comparable": {
    "title": "comparable",
    "description": "similar, unrelated rockets",
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "types": [
      "Rocket"
    ],
    "classes": [
      "Rocket"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "formerTeam": {
    "title": "formerTeam",
    "types": [
      "SportsTeam"
    ],
    "classes": [
      "Athlete"
    ],
    "subPropertyOf": [
      "DUL.owl#isMemberOf"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "formationDate": {
    "title": "formationDate",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "Organisation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "characterInPlay": {
    "title": "characterInPlay",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Play"
    ],
    "description": "Name of a character in play.",
    "ontology": [
      "DBpedia"
    ]
  },
  "orbitalEccentricity": {
    "title": "orbitalEccentricity",
    "types": [
      "XMLSchema#float"
    ],
    "classes": [
      "CelestialBody"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "dbnlCodeDutch": {
    "title": "dbnlCodeDutch",
    "description": "identifier in Dutch digital library (dbnl)",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Writer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "capitalMountain": {
    "title": "capitalMountain",
    "classes": [
      "Island"
    ],
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "types": [
      "Mountain"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "consecration": {
    "title": "consecration",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Cleric"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "latestPreviewDate": {
    "title": "latestPreviewDate",
    "classes": [
      "Software"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "solubility": {
    "title": "solubility",
    "classes": [
      "ChemicalSubstance"
    ],
    "types": [
      "XMLSchema#integer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "teamCoached": {
    "title": "teamCoached",
    "classes": [
      "Athlete"
    ],
    "types": [
      "SportsTeam"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "runwaySurface": {
    "title": "runwaySurface",
    "classes": [
      "Airport"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "otherOccupation": {
    "title": "otherOccupation",
    "classes": [
      "Person"
    ],
    "types": [
      "PersonFunction"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "argueDate": {
    "title": "argueDate",
    "classes": [
      "SupremeCourtOfTheUnitedStatesCase"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "champion": {
    "title": "champion",
    "classes": [
      "SportsEvent"
    ],
    "description": "winner of a competition",
    "types": [
      "Athlete"
    ],
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "work": {
    "title": "work",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "FictionalCharacter"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "wagon": {
    "title": "wagon",
    "types": [
      "TrainCarriage"
    ],
    "classes": [
      "Train"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "galicianSpeakersDate": {
    "title": "galicianSpeakersDate",
    "classes": [
      "Language"
    ],
    "description": "The last inquiry date about linguistics uses.",
    "types": [
      "XMLSchema#gYear"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "noteOnRestingPlace": {
    "title": "noteOnRestingPlace",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "philosophicalSchool": {
    "title": "philosophicalSchool",
    "classes": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#isMemberOf"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "coverArtist": {
    "title": "coverArtist",
    "description": "Cover artist",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "Work"
    ],
    "types": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "sisterStation": {
    "title": "sisterStation",
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "Broadcaster"
    ],
    "types": [
      "Broadcaster"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "proSince": {
    "title": "proSince",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "broadcastStationClass": {
    "title": "broadcastStationClass",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Broadcaster"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "cargoGas": {
    "title": "cargoGas",
    "types": [
      "kilogram",
      "XMLSchema#double"
    ],
    "classes": [
      "Spacecraft",
      "Spacecraft"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "hasJunctionWith": {
    "title": "hasJunctionWith",
    "classes": [
      "Canal"
    ],
    "types": [
      "Canal"
    ],
    "subPropertyOf": [
      "DUL.owl#hasCommonBoundary"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "managerTitle": {
    "title": "managerTitle",
    "classes": [
      "SoccerClub"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "distanceTraveled": {
    "title": "distanceTraveled",
    "types": [
      "kilometre",
      "XMLSchema#double"
    ],
    "classes": [
      "SpaceMission",
      "SpaceMission"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "arm": {
    "title": "arm",
    "classes": [
      "Protein"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "notableStudent": {
    "title": "notableStudent",
    "types": [
      "Person"
    ],
    "classes": [
      "Scientist"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "filmRuntime": {
    "title": "filmRuntime",
    "types": [
      "XMLSchema#double"
    ],
    "classes": [
      "Film"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "species": {
    "title": "species",
    "subPropertyOf": [
      "DUL.owl#specializes"
    ],
    "types": [
      "Species"
    ],
    "classes": [
      "Species"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "trainerYears": {
    "title": "trainerYears",
    "types": [
      "XMLSchema#gYear"
    ],
    "classes": [
      "SoccerPlayer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "homage": {
    "title": "homage",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "mainCharacter": {
    "title": "mainCharacter",
    "classes": [
      "Work"
    ],
    "types": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "shape": {
    "title": "shape",
    "classes": [
      "Intercommunality"
    ],
    "types": [
      "Community"
    ],
    "subPropertyOf": [
      "DUL.owl#hasQuality"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "winsAtChampionships": {
    "title": "winsAtChampionships",
    "subPropertyOf": [
      "DUL.owl#isParticipantIn"
    ],
    "classes": [
      "GolfPlayer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "formerBandMember": {
    "title": "formerBandMember",
    "subPropertyOf": [
      "DUL.owl#hasMember"
    ],
    "types": [
      "Person"
    ],
    "description": "A former member of the band.",
    "classes": [
      "Band"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "scientificName": {
    "title": "scientificName",
    "classes": [
      "Species"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "politicalPartyInLegislature": {
    "title": "politicalPartyInLegislature",
    "types": [
      "PoliticalParty"
    ],
    "classes": [
      "Legislature"
    ],
    "subPropertyOf": [
      "DUL.owl#hasPart"
    ],
    "description": "Political party in the legislature (eg.: European People's Party in the European Parliament).",
    "ontology": [
      "DBpedia"
    ]
  },
  "heightAboveAverageTerrain": {
    "title": "heightAboveAverageTerrain",
    "types": [
      "XMLSchema#double"
    ],
    "classes": [
      "Broadcaster"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "runwayLength": {
    "title": "runwayLength",
    "types": [
      "XMLSchema#double"
    ],
    "classes": [
      "Airport"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "hasOutsidePlace": {
    "title": "hasOutsidePlace",
    "classes": [
      "Place"
    ],
    "description": "indicates another place situated around outside.",
    "types": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "engine": {
    "title": "engine",
    "classes": [
      "Automobile"
    ],
    "types": [
      "AutomobileEngine"
    ],
    "subPropertyOf": [
      "DUL.owl#hasComponent"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "codeProvincialMonument": {
    "title": "codeProvincialMonument",
    "types": [
      "XMLSchema#string"
    ],
    "subPropertyOf": [
      "code"
    ],
    "classes": [
      "Place"
    ],
    "description": "Code for monument protection, in the Netherlands at provincial level. Mostly used for agricultural monuments or waterworks",
    "ontology": [
      "DBpedia"
    ]
  },
  "careerPoints": {
    "title": "careerPoints",
    "types": [
      "XMLSchema#integer"
    ],
    "classes": [
      "FormulaOneRacer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "anniversary": {
    "title": "anniversary",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "MilitaryUnit"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "athletics": {
    "title": "athletics",
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "University"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "explorer": {
    "title": "explorer",
    "classes": [
      "Galaxy"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "achievement": {
    "title": "achievement",
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "hallOfFame": {
    "title": "hallOfFame",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "IceHockeyPlayer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "routeLine": {
    "title": "routeLine",
    "description": "line of a stop on a route.",
    "classes": [
      "RouteStop"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "maximumAreaQuote": {
    "title": "maximumAreaQuote",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "mouthMountain": {
    "title": "mouthMountain",
    "types": [
      "Mountain"
    ],
    "classes": [
      "River"
    ],
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "politicalSeats": {
    "title": "politicalSeats",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Settlement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "actingHeadteacher": {
    "title": "actingHeadteacher",
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "School"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "foot": {
    "title": "foot",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "grindingCapability": {
    "title": "grindingCapability",
    "description": "grinding capability for Mills",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Mill"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "servingRailwayLine": {
    "title": "servingRailwayLine",
    "classes": [
      "Station"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "description": "Railway services that serve the station.",
    "ontology": [
      "DBpedia"
    ]
  },
  "winsAtSenEuro": {
    "title": "winsAtSenEuro",
    "classes": [
      "GolfPlayer"
    ],
    "subPropertyOf": [
      "DUL.owl#isParticipantIn"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "bestRankDouble": {
    "title": "bestRankDouble",
    "classes": [
      "TennisPlayer"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "inseeCode": {
    "title": "inseeCode",
    "description": "numerical indexing code used by the French National Institute for Statistics and Economic Studies (INSEE) to identify various entities",
    "classes": [
      "Settlement"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "subPropertyOf": [
      "codeSettlement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "longDistancePisteNumber": {
    "title": "longDistancePisteNumber",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "order": {
    "title": "order",
    "classes": [
      "Species"
    ],
    "subPropertyOf": [
      "DUL.owl#isSpecializedBy"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "fastestLap": {
    "title": "fastestLap",
    "classes": [
      "FormulaOneRacer"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "resolution": {
    "title": "resolution",
    "classes": [
      "Software"
    ],
    "subPropertyOf": [
      "DUL.owl#hasQuality"
    ],
    "description": "Native Resolution",
    "ontology": [
      "DBpedia"
    ]
  },
  "winsInEurope": {
    "title": "winsInEurope",
    "classes": [
      "GolfPlayer"
    ],
    "subPropertyOf": [
      "DUL.owl#isParticipantIn"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "locationCity": {
    "title": "locationCity",
    "types": [
      "City"
    ],
    "subPropertyOf": [
      "location",
      "DUL.owl#hasLocation"
    ],
    "classes": [
      "Organisation"
    ],
    "description": "City the thing is located.",
    "ontology": [
      "DBpedia"
    ]
  },
  "espnId": {
    "title": "espnId",
    "types": [
      "XMLSchema#integer"
    ],
    "classes": [
      "Athlete"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "populationTotalRanking": {
    "title": "populationTotalRanking",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "XMLSchema#positiveInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "childOrganisation": {
    "title": "childOrganisation",
    "types": [
      "Organisation"
    ],
    "classes": [
      "Organisation"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "kindOfCoordinate": {
    "title": "kindOfCoordinate",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "previousEntity": {
    "title": "previousEntity",
    "classes": [
      "Place"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "types": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "previousInfrastructure": {
    "title": "previousInfrastructure",
    "types": [
      "Infrastructure"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "Infrastructure"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "musicComposer": {
    "title": "musicComposer",
    "types": [
      "MusicalArtist"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "Work"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "cmykCoordinateYellow": {
    "title": "cmykCoordinateYellow",
    "classes": [
      "Colour"
    ],
    "types": [
      "XMLSchema#integer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "coachedTeam": {
    "title": "coachedTeam",
    "classes": [
      "CollegeCoach"
    ],
    "types": [
      "SportsTeam"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "cesarAward": {
    "title": "cesarAward",
    "classes": [
      "Artist"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "types": [
      "Award"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "birthName": {
    "title": "birthName",
    "types": [
      "22-rdf-syntax-ns#langString"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "firstPublicationDate": {
    "title": "firstPublicationDate",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "WrittenWork"
    ],
    "description": "Date of the first publication.",
    "ontology": [
      "DBpedia"
    ]
  },
  "isPartOfWineRegion": {
    "title": "isPartOfWineRegion",
    "types": [
      "WineRegion"
    ],
    "subPropertyOf": [
      "DUL.owl#isPartOf",
      "isPartOf"
    ],
    "classes": [
      "WineRegion"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "architect": {
    "title": "architect",
    "types": [
      "Architect"
    ],
    "classes": [
      "ArchitecturalStructure"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "serviceNumber": {
    "title": "serviceNumber",
    "types": [
      "XMLSchema#string"
    ],
    "description": "The service number held by the individual during military service.",
    "classes": [
      "MilitaryPerson"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "sportDiscipline": {
    "title": "sportDiscipline",
    "subPropertyOf": [
      "DUL.owl#isParticipantIn"
    ],
    "types": [
      "Sport"
    ],
    "classes": [
      "Person"
    ],
    "description": "the sport discipline the athlete practices, e.g. Diving, or that a board member of a sporting club is focussing at",
    "ontology": [
      "DBpedia"
    ]
  },
  "largestCity": {
    "title": "largestCity",
    "types": [
      "PopulatedPlace"
    ],
    "subPropertyOf": [
      "DUL.owl#hasPart"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lastPublicationDate": {
    "title": "lastPublicationDate",
    "description": "Date of the last publication.",
    "classes": [
      "WrittenWork"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "ruling": {
    "title": "ruling",
    "description": "Ruling referred to in this legal case",
    "classes": [
      "LegalCase"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "friend": {
    "title": "friend",
    "types": [
      "Person"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfEntrances": {
    "title": "numberOfEntrances",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Cave"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "thirdTeam": {
    "title": "thirdTeam",
    "types": [
      "SportsTeam"
    ],
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ],
    "classes": [
      "GrandPrix"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "bodyStyle": {
    "title": "bodyStyle",
    "classes": [
      "Automobile"
    ],
    "subPropertyOf": [
      "DUL.owl#isDescribedBy"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "sourceCountry": {
    "title": "sourceCountry",
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "classes": [
      "Stream"
    ],
    "types": [
      "Country"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "systemOfLaw": {
    "title": "systemOfLaw",
    "description": "A referral to the relevant system of law",
    "types": [
      "SystemOfLaw"
    ],
    "subPropertyOf": [
      "DUL.owl#isSettingFor"
    ],
    "classes": [
      "LegalCase"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "khlDraft": {
    "title": "khlDraft",
    "classes": [
      "IceHockeyPlayer"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "recommissioningDate": {
    "title": "recommissioningDate",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "Ship"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfTurns": {
    "title": "numberOfTurns",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "RaceTrack"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "purchasingPowerParityRank": {
    "title": "purchasingPowerParityRank",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "refcul": {
    "title": "refcul",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "fillingStation": {
    "title": "fillingStation",
    "classes": [
      "RestArea"
    ],
    "types": [
      "FillingStation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfStaff": {
    "title": "numberOfStaff",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Organisation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "routeNext": {
    "title": "routeNext",
    "description": "next stop on a road.",
    "classes": [
      "RouteStop"
    ],
    "types": [
      "RouteStop"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "approvedByUpperParliament": {
    "title": "approvedByUpperParliament",
    "classes": [
      "Law"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "description": "Date of approval by upper parliament (House of Lords, S\u00e9nat, Eerste Kamer etc.).",
    "ontology": [
      "DBpedia"
    ]
  },
  "worldTournamentSilver": {
    "title": "worldTournamentSilver",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "nrhpType": {
    "title": "nrhpType",
    "description": "Type of historic place as defined by the US National Park Service. For instance National Historic Landmark, National Monument or National Battlefield.",
    "classes": [
      "HistoricPlace"
    ],
    "subPropertyOf": [
      "DUL.owl#isClassifiedBy"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "networth": {
    "title": "networth",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "finalLostTeam": {
    "title": "finalLostTeam",
    "classes": [
      "Athlete"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "riverBranch": {
    "title": "riverBranch",
    "types": [
      "River"
    ],
    "subPropertyOf": [
      "DUL.owl#hasCommonBoundary"
    ],
    "classes": [
      "River"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "dutchCOROPCode": {
    "title": "dutchCOROPCode",
    "classes": [
      "Region"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "apparentMagnitude": {
    "title": "apparentMagnitude",
    "classes": [
      "Planet"
    ],
    "types": [
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "swimmingStyle": {
    "title": "swimmingStyle",
    "classes": [
      "Swimmer"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "abstentions": {
    "title": "abstentions",
    "description": "the number of people who abstained from voting",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "StatedResolution"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "presenter": {
    "title": "presenter",
    "classes": [
      "TelevisionShow"
    ],
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "europeanAffiliation": {
    "title": "europeanAffiliation",
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "classes": [
      "PoliticalParty"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "relation": {
    "title": "relation",
    "classes": [
      "Person"
    ],
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "amateurFight": {
    "title": "amateurFight",
    "classes": [
      "Boxer"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "minimumAreaQuote": {
    "title": "minimumAreaQuote",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "worldTournamentBronze": {
    "title": "worldTournamentBronze",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "firstBroadcast": {
    "title": "firstBroadcast",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Film"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "governmentRegion": {
    "title": "governmentRegion",
    "classes": [
      "Island"
    ],
    "types": [
      "PopulatedPlace"
    ],
    "subPropertyOf": [
      "DUL.owl#isPartOf"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "currentTeamManager": {
    "title": "currentTeamManager",
    "types": [
      "SportsTeam"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "varietals": {
    "title": "varietals",
    "subPropertyOf": [
      "DUL.owl#isLocationOf"
    ],
    "classes": [
      "WineRegion"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "production": {
    "title": "production",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Company"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "blackLongDistancePisteNumber": {
    "title": "blackLongDistancePisteNumber",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfCrew": {
    "title": "numberOfCrew",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "MeanOfTransportation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "ncbhof": {
    "title": "ncbhof",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Athlete"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "personFunction": {
    "title": "personFunction",
    "types": [
      "PersonFunction"
    ],
    "classes": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#hasRole"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "subClassis": {
    "title": "subClassis",
    "classes": [
      "Species"
    ],
    "subPropertyOf": [
      "classis"
    ],
    "description": "a subdivision within a Species classis",
    "ontology": [
      "DBpedia"
    ]
  },
  "modelEndYear": {
    "title": "modelEndYear",
    "types": [
      "XMLSchema#gYear"
    ],
    "classes": [
      "MeanOfTransportation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "totalTravellers": {
    "title": "totalTravellers",
    "classes": [
      "YearInSpaceflight"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "portrayer": {
    "title": "portrayer",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "FictionalCharacter"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "fuelTypeName": {
    "title": "fuelTypeName",
    "classes": [
      "PowerStation"
    ],
    "types": [
      "22-rdf-syntax-ns#langString"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "broadcastArea": {
    "title": "broadcastArea",
    "types": [
      "PopulatedPlace"
    ],
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "classes": [
      "Broadcaster"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "departmentCode": {
    "title": "departmentCode",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Municipality"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "aircraftPatrol": {
    "title": "aircraftPatrol",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "MilitaryUnit"
    ],
    "types": [
      "MeanOfTransportation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "giniCoefficient": {
    "title": "giniCoefficient",
    "types": [
      "XMLSchema#float"
    ],
    "description": "is a measure of the inequality of a distribution. It is commonly used as a measure of inequality of income or wealth.",
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "geolocDepartment": {
    "title": "geolocDepartment",
    "types": [
      "PopulatedPlace"
    ],
    "subPropertyOf": [
      "DUL.owl#isPartOf"
    ],
    "classes": [
      "Settlement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "throwingSide": {
    "title": "throwingSide",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "BaseballPlayer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "amateurTeam": {
    "title": "amateurTeam",
    "types": [
      "SportsTeam"
    ],
    "classes": [
      "Athlete,_CareerStation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "prefectMandate": {
    "title": "prefectMandate",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "RomaniaSettlement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "nationalAffiliation": {
    "title": "nationalAffiliation",
    "classes": [
      "PoliticalParty"
    ],
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "largestWin": {
    "title": "largestWin",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "SoccerClub"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "cylinderBore": {
    "title": "cylinderBore",
    "classes": [
      "AutomobileEngine",
      "Engine"
    ],
    "types": [
      "XMLSchema#double",
      "millimetre"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "boilerPressure": {
    "title": "boilerPressure",
    "classes": [
      "Locomotive"
    ],
    "subPropertyOf": [
      "DUL.owl#isClassifiedBy"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "wingspan": {
    "title": "wingspan",
    "classes": [
      "Aircraft"
    ],
    "types": [
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "partner": {
    "title": "partner",
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lowest": {
    "title": "lowest",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfCounties": {
    "title": "numberOfCounties",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "neighbourConstellations": {
    "title": "neighbourConstellations",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Constellation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "heritageRegister": {
    "title": "heritageRegister",
    "classes": [
      "Place"
    ],
    "description": "registered in an inventory dedicated to the conservation of heritage, natural or cultural, existing in the world.",
    "subPropertyOf": [
      "DUL.owl#isMemberOf"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "derivative": {
    "title": "derivative",
    "types": [
      "MusicGenre"
    ],
    "subPropertyOf": [
      "DUL.owl#specializes"
    ],
    "classes": [
      "MusicGenre"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "automobileModel": {
    "title": "automobileModel",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "AutomobileEngine"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "introductionDate": {
    "title": "introductionDate",
    "classes": [
      "MeanOfTransportation"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "subsequentWork": {
    "title": "subsequentWork",
    "classes": [
      "Work"
    ],
    "types": [
      "Work"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "nationalFilmAward": {
    "title": "nationalFilmAward",
    "types": [
      "Award"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "Actor"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "curator": {
    "title": "curator",
    "types": [
      "Person"
    ],
    "classes": [
      "Museum"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "damage": {
    "title": "damage",
    "types": [
      "Currency"
    ],
    "classes": [
      "Event"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "representative": {
    "title": "representative",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "activeYearsStartDateMgr": {
    "title": "activeYearsStartDateMgr",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "routeStart": {
    "title": "routeStart",
    "types": [
      "RouteOfTransportation"
    ],
    "subPropertyOf": [
      "DUL.owl#hasCommonBoundary"
    ],
    "description": "Start of the route. This is where the route begins and, for U.S. roads, is either at the southern terminus or western terminus.",
    "classes": [
      "RouteOfTransportation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "capitalPlace": {
    "title": "capitalPlace",
    "types": [
      "PopulatedPlace"
    ],
    "classes": [
      "Island"
    ],
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "squadNumber": {
    "title": "squadNumber",
    "classes": [
      "SportsTeamMember"
    ],
    "description": "The number that an athlete wears in a team sport.",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "managingEditor": {
    "title": "managingEditor",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "types": [
      "Person"
    ],
    "classes": [
      "Newspaper"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "launchDate": {
    "title": "launchDate",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "SpaceMission"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "garrison": {
    "title": "garrison",
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "classes": [
      "MilitaryUnit"
    ],
    "types": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "fibahof": {
    "title": "fibahof",
    "classes": [
      "Athlete"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "landtagMandate": {
    "title": "landtagMandate",
    "classes": [
      "AdministrativeRegion"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "minimumInclination": {
    "title": "minimumInclination",
    "classes": [
      "LaunchPad"
    ],
    "types": [
      "XMLSchema#float"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "worldChampionTitleYear": {
    "title": "worldChampionTitleYear",
    "classes": [
      "Athlete"
    ],
    "description": "can be one or several years",
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "soccerLeaguePromoted": {
    "title": "soccerLeaguePromoted",
    "types": [
      "SportsTeam"
    ],
    "classes": [
      "SoccerLeagueSeason"
    ],
    "subPropertyOf": [
      "DUL.owl#isSettingFor"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "barangays": {
    "title": "barangays",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "subFamily": {
    "title": "subFamily",
    "types": [
      "Taxon"
    ],
    "classes": [
      "Species"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "rocketFunction": {
    "title": "rocketFunction",
    "classes": [
      "Rocket"
    ],
    "description": "purpose of the rocket",
    "subPropertyOf": [
      "DUL.owl#isClassifiedBy"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "refgen": {
    "title": "refgen",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "agglomerationPopulationYear": {
    "title": "agglomerationPopulationYear",
    "classes": [
      "Settlement"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "populationRuralDensity": {
    "title": "populationRuralDensity",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "firstDriverTeam": {
    "title": "firstDriverTeam",
    "types": [
      "SportsTeam"
    ],
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ],
    "classes": [
      "GrandPrix"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "dubber": {
    "title": "dubber",
    "classes": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "description": "the person who dubs another person e.g. an actor or a fictional character in movies",
    "types": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "waistSize": {
    "title": "waistSize",
    "types": [
      "XMLSchema#double"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "suppreddedDate": {
    "title": "suppreddedDate",
    "types": [
      "XMLSchema#date"
    ],
    "description": "Date when the Church forbade the veneration of this saint. \n(I hope that's what it means, I don't know why the original author didn't document it)",
    "classes": [
      "Saint"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "serviceStartDate": {
    "title": "serviceStartDate",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "MilitaryPerson"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "distanceToLondon": {
    "title": "distanceToLondon",
    "types": [
      "XMLSchema#double"
    ],
    "classes": [
      "Settlement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lunarModule": {
    "title": "lunarModule",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "SpaceMission"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "approvedByLowerParliament": {
    "title": "approvedByLowerParliament",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "Law"
    ],
    "description": "Date of approval by lower parliament (House of Commons, Chambre des D\u00e9put\u00e9s, Bundestag, Tweede Kamer etc.).",
    "ontology": [
      "DBpedia"
    ]
  },
  "backhand": {
    "title": "backhand",
    "classes": [
      "Athlete"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "disbanded": {
    "title": "disbanded",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "MilitaryUnit"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "pisciculturalPopulation": {
    "title": "pisciculturalPopulation",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "deathAge": {
    "title": "deathAge",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "premierePlace": {
    "title": "premierePlace",
    "description": "The theatre and/or city the play was first performed in.",
    "classes": [
      "Play"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "utcOffset": {
    "title": "utcOffset",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "musicians": {
    "title": "musicians",
    "types": [
      "MusicalArtist"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "Instrument"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "unitedStatesNationalBridgeId": {
    "title": "unitedStatesNationalBridgeId",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Bridge"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "winsAtProTournaments": {
    "title": "winsAtProTournaments",
    "subPropertyOf": [
      "DUL.owl#isParticipantIn"
    ],
    "classes": [
      "GolfPlayer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "eMedicineTopic": {
    "title": "eMedicineTopic",
    "classes": [
      "Disease"
    ],
    "types": [
      "22-rdf-syntax-ns#langString"
    ],
    "description": "Different from eMedicineSubject, which see",
    "ontology": [
      "DBpedia"
    ]
  },
  "authorityTitle": {
    "title": "authorityTitle",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "RomaniaSettlement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "reign": {
    "title": "reign",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "capitalRegion": {
    "title": "capitalRegion",
    "types": [
      "PopulatedPlace"
    ],
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "classes": [
      "Island"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "specialTrial": {
    "title": "specialTrial",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "fileURL": {
    "title": "fileURL",
    "classes": [
      "File"
    ],
    "types": [
      "File"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "fullCompetition": {
    "title": "fullCompetition",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "previousPopulationTotal": {
    "title": "previousPopulationTotal",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "galleryItem": {
    "title": "galleryItem",
    "types": [
      "File"
    ],
    "description": "A file contained in a gallery",
    "classes": [
      "Document"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "interest": {
    "title": "interest",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "SiteOfSpecialScientificInterest"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "eruptionYear": {
    "title": "eruptionYear",
    "types": [
      "XMLSchema#gYear"
    ],
    "classes": [
      "Volcano"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "routePrevious": {
    "title": "routePrevious",
    "description": "previous stop on a road.",
    "classes": [
      "RouteStop"
    ],
    "types": [
      "RouteStop"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "hasNaturalBust": {
    "title": "hasNaturalBust",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "border": {
    "title": "border",
    "classes": [
      "Island"
    ],
    "subPropertyOf": [
      "DUL.owl#hasCommonBoundary"
    ],
    "types": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "orbitalPeriod": {
    "title": "orbitalPeriod",
    "classes": [
      "Planet",
      "Galaxy",
      "Planet"
    ],
    "types": [
      "day",
      "day",
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "tvShow": {
    "title": "tvShow",
    "classes": [
      "Person"
    ],
    "types": [
      "TelevisionShow"
    ],
    "subPropertyOf": [
      "DUL.owl#isParticipantIn"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "grossDomesticProductPerPeople": {
    "title": "grossDomesticProductPerPeople",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "currentlyUsedFor": {
    "title": "currentlyUsedFor",
    "classes": [
      "ArchitecturalStructure"
    ],
    "description": "Current use of the architectural structure, if it is currently being used as anything other than its original purpose.",
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberBuilt": {
    "title": "numberBuilt",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Aircraft"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "raceTrack": {
    "title": "raceTrack",
    "classes": [
      "SportsEvent"
    ],
    "subPropertyOf": [
      "DUL.owl#hasPart"
    ],
    "types": [
      "RaceTrack"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "championships": {
    "title": "championships",
    "classes": [
      "FormulaOneRacer"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "killedBy": {
    "title": "killedBy",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "arrestDate": {
    "title": "arrestDate",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "maintainedBy": {
    "title": "maintainedBy",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "ArchitecturalStructure"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "mainOrgan": {
    "title": "mainOrgan",
    "classes": [
      "Organisation"
    ],
    "subPropertyOf": [
      "DUL.owl#hasPart"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "presidentRegionalCouncil": {
    "title": "presidentRegionalCouncil",
    "classes": [
      "TermOfOffice"
    ],
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "ccaState": {
    "title": "ccaState",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "kingdom": {
    "title": "kingdom",
    "description": "In biology, kingdom (Latin: regnum, pl. regna) is a taxonomic rank, which is either the highest rank or in the more recent three-domain system, the rank below domain.",
    "subPropertyOf": [
      "DUL.owl#specializes"
    ],
    "classes": [
      "Species"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "causeOfDeath": {
    "title": "causeOfDeath",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "firstAscentYear": {
    "title": "firstAscentYear",
    "types": [
      "XMLSchema#gYear"
    ],
    "classes": [
      "Mountain"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "freeProgScore": {
    "title": "freeProgScore",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "stationEvaDuration": {
    "title": "stationEvaDuration",
    "classes": [
      "SpaceMission",
      "SpaceMission"
    ],
    "types": [
      "hour",
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "nationalTopographicSystemMapNumber": {
    "title": "nationalTopographicSystemMapNumber",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfCountries": {
    "title": "numberOfCountries",
    "classes": [
      "AdministrativeRegion"
    ],
    "types": [
      "XMLSchema#positiveInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "eurobabeIndexId": {
    "title": "eurobabeIndexId",
    "classes": [
      "Film"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "musicType": {
    "title": "musicType",
    "description": "Type is too general. We need to be able to distinguish types of music from types of buildings",
    "subPropertyOf": [
      "DUL.owl#isClassifiedBy"
    ],
    "classes": [
      "MusicalWork"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "premiereDate": {
    "title": "premiereDate",
    "subPropertyOf": [
      "releaseDate"
    ],
    "description": "Date the play was first performed.",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "Play"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "restingPlacePosition": {
    "title": "restingPlacePosition",
    "classes": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "types": [
      "wgs84_pos#SpatialThing"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "district": {
    "title": "district",
    "subPropertyOf": [
      "DUL.owl#isPartOf"
    ],
    "classes": [
      "Place"
    ],
    "types": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "redSkiPisteNumber": {
    "title": "redSkiPisteNumber",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "refgeo": {
    "title": "refgeo",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "soccerTournamentLastChampion": {
    "title": "soccerTournamentLastChampion",
    "classes": [
      "SoccerTournament"
    ],
    "subPropertyOf": [
      "DUL.owl#isSettingFor"
    ],
    "types": [
      "SoccerClub"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "volumeQuote": {
    "title": "volumeQuote",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "inCemetery": {
    "title": "inCemetery",
    "classes": [
      "GraveMonument"
    ],
    "types": [
      "Cemetery"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "departmentPosition": {
    "title": "departmentPosition",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "tie": {
    "title": "tie",
    "classes": [
      "Boxer"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfPiersInWater": {
    "title": "numberOfPiersInWater",
    "description": "Number of piers standing in a river or other water in normal conditions.",
    "classes": [
      "Bridge"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "averageDepthQuote": {
    "title": "averageDepthQuote",
    "description": "Source of the  value.",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "municipalityRenamedTo": {
    "title": "municipalityRenamedTo",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Municipality"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "parentMountainPeak": {
    "title": "parentMountainPeak",
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "types": [
      "Mountain"
    ],
    "classes": [
      "Mountain"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "previousName": {
    "title": "previousName",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "usedInWar": {
    "title": "usedInWar",
    "description": "wars that were typical for the usage of a weapon",
    "subPropertyOf": [
      "DUL.owl#isParticipantIn"
    ],
    "types": [
      "MilitaryConflict"
    ],
    "classes": [
      "Weapon"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "dist_pc": {
    "title": "dist_pc",
    "types": [
      "XMLSchema#integer"
    ],
    "classes": [
      "Openswarm"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "agency": {
    "title": "agency",
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "footedness": {
    "title": "footedness",
    "types": [
      "Person"
    ],
    "classes": [
      "Sport"
    ],
    "description": "a preference to put one's left or right foot forward in surfing, wakeboarding, skateboarding, wakeskating, snowboarding and mountainboarding. The term is sometimes applied to the foot a footballer uses to kick.",
    "ontology": [
      "DBpedia"
    ]
  },
  "setDesigner": {
    "title": "setDesigner",
    "types": [
      "Person"
    ],
    "description": "the person who is responsible for the film set design",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "Film"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "bestWsopRank": {
    "title": "bestWsopRank",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "PokerPlayer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "millsCodeNL": {
    "title": "millsCodeNL",
    "description": "mills code from the central Dutch database on mills",
    "classes": [
      "Mill"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "militaryCommand": {
    "title": "militaryCommand",
    "description": "For persons who are notable as commanding officers, the units they commanded. Dates should be given if multiple notable commands were held.",
    "classes": [
      "MilitaryPerson"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "wptFinalTable": {
    "title": "wptFinalTable",
    "classes": [
      "PokerPlayer"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "classis": {
    "title": "classis",
    "description": "the living thing class (from the Latin \"classis\"), according to the biological taxonomy",
    "classes": [
      "Species"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "enshrinedDeity": {
    "title": "enshrinedDeity",
    "classes": [
      "Shrine"
    ],
    "subPropertyOf": [
      "DUL.owl#isLocationOf"
    ],
    "types": [
      "Deity"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "qatarClassic": {
    "title": "qatarClassic",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Athlete"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "campusSize": {
    "title": "campusSize",
    "types": [
      "XMLSchema#double",
      "squareKilometre"
    ],
    "classes": [
      "School",
      "School"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "continentalTournament": {
    "title": "continentalTournament",
    "types": [
      "Tournament"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "debutWork": {
    "title": "debutWork",
    "description": "First work of a person (may be notableWork or not)",
    "types": [
      "Work"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "ncaaSeason": {
    "title": "ncaaSeason",
    "classes": [
      "Athlete"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "aircraftAttack": {
    "title": "aircraftAttack",
    "classes": [
      "MilitaryUnit"
    ],
    "types": [
      "MeanOfTransportation"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "connectsReferencedTo": {
    "title": "connectsReferencedTo",
    "description": "creates a reference from the referenced object to another object. Especially important for connecting non-extracted resources to the usual resources",
    "classes": [
      "Reference"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "principal": {
    "title": "principal",
    "description": "School principal",
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "EducationalInstitution"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "technique": {
    "title": "technique",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Painting"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "volcanoId": {
    "title": "volcanoId",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Island"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "championInDouble": {
    "title": "championInDouble",
    "classes": [
      "SportsEvent"
    ],
    "description": "winner of a competition in the double session (as in tennis)",
    "types": [
      "Athlete"
    ],
    "subPropertyOf": [
      "champion",
      "DUL.owl#hasParticipant"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "internationally": {
    "title": "internationally",
    "classes": [
      "Company"
    ],
    "types": [
      "XMLSchema#boolean"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "announcedFrom": {
    "title": "announcedFrom",
    "classes": [
      "Person"
    ],
    "types": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "filmVersion": {
    "title": "filmVersion",
    "types": [
      "Film"
    ],
    "classes": [
      "WrittenWork"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "shoreLength": {
    "title": "shoreLength",
    "types": [
      "kilometre",
      "XMLSchema#double"
    ],
    "classes": [
      "Lake",
      "BodyOfWater"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "shipCrew": {
    "title": "shipCrew",
    "classes": [
      "Ship"
    ],
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "codeMunicipalMonument": {
    "title": "codeMunicipalMonument",
    "description": "Code assigned to monuments that are placed under protection at the municipal level",
    "types": [
      "XMLSchema#string"
    ],
    "subPropertyOf": [
      "code"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "reference": {
    "title": "reference",
    "classes": [
      "Reference"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "description": "Structured reference providing info about the subject",
    "ontology": [
      "DBpedia"
    ]
  },
  "visitorsPerDay": {
    "title": "visitorsPerDay",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "ArchitecturalStructure"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "genus": {
    "title": "genus",
    "description": "Taxonomic rank (or taxonomic) which groups together a set of species having several similar characteristics in common.",
    "classes": [
      "Species"
    ],
    "subPropertyOf": [
      "DUL.owl#specializes"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfDeaths": {
    "title": "numberOfDeaths",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "ConcentrationCamp"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "annualTemperature": {
    "title": "annualTemperature",
    "types": [
      "XMLSchema#double"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "majorShrine": {
    "title": "majorShrine",
    "classes": [
      "Saint"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "dfE": {
    "title": "dfE",
    "classes": [
      "School"
    ],
    "description": "Department for Education (UK) number of a school in England or Wales",
    "ontology": [
      "DBpedia"
    ]
  },
  "goalsInNationalTeam": {
    "title": "goalsInNationalTeam",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "SoccerPlayer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "archipelago": {
    "title": "archipelago",
    "subPropertyOf": [
      "DUL.owl#isPartOf"
    ],
    "classes": [
      "Island"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "winsAtOtherTournaments": {
    "title": "winsAtOtherTournaments",
    "classes": [
      "GolfPlayer"
    ],
    "subPropertyOf": [
      "DUL.owl#isParticipantIn"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "mountainRange": {
    "title": "mountainRange",
    "subPropertyOf": [
      "DUL.owl#isPartOf"
    ],
    "types": [
      "MountainRange"
    ],
    "classes": [
      "Mountain"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "amateurTitle": {
    "title": "amateurTitle",
    "classes": [
      "Boxer"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "avifaunaPopulation": {
    "title": "avifaunaPopulation",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "subOrder": {
    "title": "subOrder",
    "classes": [
      "Species"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "dateLastUpdated": {
    "title": "dateLastUpdated",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "Document"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "comitat": {
    "title": "comitat",
    "classes": [
      "HungarySettlement"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "superbowlWin": {
    "title": "superbowlWin",
    "classes": [
      "Athlete"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "aircraftHelicopterUtility": {
    "title": "aircraftHelicopterUtility",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "MilitaryUnit"
    ],
    "types": [
      "MeanOfTransportation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "governmentMountain": {
    "title": "governmentMountain",
    "types": [
      "Mountain"
    ],
    "classes": [
      "Island"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "rightAscension": {
    "title": "rightAscension",
    "classes": [
      "CelestialBody"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "spike": {
    "title": "spike",
    "classes": [
      "VolleyballPlayer"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "wineRegion": {
    "title": "wineRegion",
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "types": [
      "WineRegion"
    ],
    "classes": [
      "Grape"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "mayorFunction": {
    "title": "mayorFunction",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "SwitzerlandSettlement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "prefaceBy": {
    "title": "prefaceBy",
    "types": [
      "Person"
    ],
    "classes": [
      "WrittenWork"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "associateEditor": {
    "title": "associateEditor",
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "Newspaper"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "equipment": {
    "title": "equipment",
    "classes": [
      "Activity"
    ],
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfLines": {
    "title": "numberOfLines",
    "classes": [
      "PublicTransitSystem"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "description": "Number of lines in the transit system.",
    "ontology": [
      "DBpedia"
    ]
  },
  "hof": {
    "title": "hof",
    "classes": [
      "Athlete"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lowestPlace": {
    "title": "lowestPlace",
    "classes": [
      "Place"
    ],
    "subPropertyOf": [
      "DUL.owl#isLocationOf"
    ],
    "types": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "otherSportsExperience": {
    "title": "otherSportsExperience",
    "classes": [
      "Athlete"
    ],
    "types": [
      "Athletics"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "internationalPhonePrefixLabel": {
    "title": "internationalPhonePrefixLabel",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfPostgraduateStudents": {
    "title": "numberOfPostgraduateStudents",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "University"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lowerEarthOrbitPayload": {
    "title": "lowerEarthOrbitPayload",
    "types": [
      "XMLSchema#double",
      "kilogram"
    ],
    "classes": [
      "Rocket",
      "Rocket"
    ],
    "description": "Payload mass in a typical Low Earth orbit",
    "ontology": [
      "DBpedia"
    ]
  },
  "pseudonym": {
    "title": "pseudonym",
    "types": [
      "22-rdf-syntax-ns#langString"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "epoch": {
    "title": "epoch",
    "description": "moment in time used as a referrence point for some time-vaying astronomical quantity",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Planet"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "gymApparatus": {
    "title": "gymApparatus",
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "jointCommunity": {
    "title": "jointCommunity",
    "types": [
      "PopulatedPlace"
    ],
    "classes": [
      "Settlement"
    ],
    "subPropertyOf": [
      "DUL.owl#isPartOf"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "headAlloy": {
    "title": "headAlloy",
    "subPropertyOf": [
      "DUL.owl#hasConstituent"
    ],
    "classes": [
      "AutomobileEngine"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "campusType": {
    "title": "campusType",
    "types": [
      "22-rdf-syntax-ns#langString"
    ],
    "classes": [
      "School"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "taxon": {
    "title": "taxon",
    "types": [
      "Taxon"
    ],
    "classes": [
      "Species"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "latestElection": {
    "title": "latestElection",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "seasonManager": {
    "title": "seasonManager",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfCantons": {
    "title": "numberOfCantons",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "grandsire": {
    "title": "grandsire",
    "types": [
      "Animal"
    ],
    "classes": [
      "Animal"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "christeningDate": {
    "title": "christeningDate",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "Ship"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "hubAirport": {
    "title": "hubAirport",
    "classes": [
      "Airline"
    ],
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "types": [
      "Airport"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "rankAgreement": {
    "title": "rankAgreement",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "proPeriod": {
    "title": "proPeriod",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "notSolubleIn": {
    "title": "notSolubleIn",
    "classes": [
      "ChemicalSubstance"
    ],
    "types": [
      "ChemicalSubstance"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "rankPopulation": {
    "title": "rankPopulation",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "beatifiedPlace": {
    "title": "beatifiedPlace",
    "types": [
      "PopulatedPlace"
    ],
    "classes": [
      "Saint"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "percentageLiteracyMen": {
    "title": "percentageLiteracyMen",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "XMLSchema#float"
    ],
    "subPropertyOf": [
      "percentageLiterate"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "crewSize": {
    "title": "crewSize",
    "classes": [
      "SpaceMission"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "mukhtar": {
    "title": "mukhtar",
    "classes": [
      "LebanonSettlement"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "availableSmartCard": {
    "title": "availableSmartCard",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "description": "Smartcard for fare payment system for public transit systems that are or will be available at the station.",
    "classes": [
      "Station"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "winsAtLPGA": {
    "title": "winsAtLPGA",
    "classes": [
      "GolfPlayer"
    ],
    "subPropertyOf": [
      "DUL.owl#isParticipantIn"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "rolandGarrosSingle": {
    "title": "rolandGarrosSingle",
    "classes": [
      "TennisPlayer"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "licenceLetter": {
    "title": "licenceLetter",
    "classes": [
      "GermanSettlement"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "formerBroadcastNetwork": {
    "title": "formerBroadcastNetwork",
    "types": [
      "BroadcastNetwork"
    ],
    "description": "A former broadcasting group to which the broadcaster belonged.",
    "subPropertyOf": [
      "DUL.owl#isMemberOf"
    ],
    "classes": [
      "Broadcaster"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "principalArea": {
    "title": "principalArea",
    "classes": [
      "PopulatedPlace"
    ],
    "subPropertyOf": [
      "DUL.owl#isLocationOf"
    ],
    "types": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "headLabel": {
    "title": "headLabel",
    "classes": [
      "School"
    ],
    "types": [
      "22-rdf-syntax-ns#langString"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "alpsSection": {
    "title": "alpsSection",
    "types": [
      "MountainRange"
    ],
    "classes": [
      "Mountain"
    ],
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "description": "the Alps section to which the mountain belongs, according to the SOIUSA classification",
    "ontology": [
      "DBpedia"
    ]
  },
  "otherChannel": {
    "title": "otherChannel",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Broadcaster"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "detractor": {
    "title": "detractor",
    "types": [
      "Person"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "decoration": {
    "title": "decoration",
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "laterality": {
    "title": "laterality",
    "classes": [
      "Athlete"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "residence": {
    "title": "residence",
    "classes": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "types": [
      "Place"
    ],
    "description": "Place of residence of a person.",
    "ontology": [
      "DBpedia"
    ]
  },
  "sex": {
    "title": "sex",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "councilArea": {
    "title": "councilArea",
    "subPropertyOf": [
      "DUL.owl#isPartOf"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "crew": {
    "title": "crew",
    "types": [
      "SpaceMission"
    ],
    "classes": [
      "Spacecraft"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "nationalTournament": {
    "title": "nationalTournament",
    "types": [
      "Tournament"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "shareSource": {
    "title": "shareSource",
    "classes": [
      "Broadcaster"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "twinCountry": {
    "title": "twinCountry",
    "types": [
      "Country"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "Country"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "titleLanguage": {
    "title": "titleLanguage",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Film"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfGoals": {
    "title": "numberOfGoals",
    "classes": [
      "CareerStation"
    ],
    "types": [
      "XMLSchema#integer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfLaunches": {
    "title": "numberOfLaunches",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "MeanOfTransportation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "undraftedYear": {
    "title": "undraftedYear",
    "classes": [
      "GridironFootballPlayer"
    ],
    "types": [
      "XMLSchema#gYear"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "bestFinish": {
    "title": "bestFinish",
    "classes": [
      "SnookerPlayer"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "populationMetroDensity": {
    "title": "populationMetroDensity",
    "classes": [
      "PopulatedPlace",
      "PopulatedPlace"
    ],
    "types": [
      "inhabitantsPerSquareKilometre",
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "currentPartner": {
    "title": "currentPartner",
    "types": [
      "Person"
    ],
    "classes": [
      "FigureSkater"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "tu": {
    "title": "tu",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "distanceToDouglas": {
    "title": "distanceToDouglas",
    "classes": [
      "Settlement"
    ],
    "types": [
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "youthWing": {
    "title": "youthWing",
    "subPropertyOf": [
      "DUL.owl#hasPart"
    ],
    "classes": [
      "PoliticalParty"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "peopleName": {
    "title": "peopleName",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "22-rdf-syntax-ns#langString"
    ],
    "description": "Name for the people inhabiting a place, eg Ankara->Ankariotes, Bulgaria->Bulgarians",
    "ontology": [
      "DBpedia"
    ]
  },
  "membershipAsOf": {
    "title": "membershipAsOf",
    "classes": [
      "Organisation,_Parish"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "musicFormat": {
    "title": "musicFormat",
    "classes": [
      "Album"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "description": "The format of the album: EP, Single etc.",
    "ontology": [
      "DBpedia"
    ]
  },
  "millSpan": {
    "title": "millSpan",
    "types": [
      "XMLSchema#double"
    ],
    "classes": [
      "Mill"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "teamPoint": {
    "title": "teamPoint",
    "classes": [
      "Athlete"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "fourthCommander": {
    "title": "fourthCommander",
    "classes": [
      "MilitaryUnit"
    ],
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "thirdDriverCountry": {
    "title": "thirdDriverCountry",
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ],
    "classes": [
      "GrandPrix"
    ],
    "types": [
      "Country"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "youthClub": {
    "title": "youthClub",
    "types": [
      "SportsTeam"
    ],
    "classes": [
      "Athlete"
    ],
    "subPropertyOf": [
      "DUL.owl#isMemberOf"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "addressInRoad": {
    "title": "addressInRoad",
    "subPropertyOf": [
      "DUL.owl#isLocationOf"
    ],
    "description": "A building, organization or something else that is in the way.",
    "classes": [
      "Road"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "subdivisionLink": {
    "title": "subdivisionLink",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "second": {
    "title": "second",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "artificialSnowArea": {
    "title": "artificialSnowArea",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#float"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "aspectRatio": {
    "title": "aspectRatio",
    "subPropertyOf": [
      "DUL.owl#hasQuality"
    ],
    "classes": [
      "Software"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "trackNumber": {
    "title": "trackNumber",
    "types": [
      "XMLSchema#positiveInteger"
    ],
    "classes": [
      "Song"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "rocketStages": {
    "title": "rocketStages",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Rocket"
    ],
    "description": "number of stages, not including boosters",
    "ontology": [
      "DBpedia"
    ]
  },
  "cinematography": {
    "title": "cinematography",
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "Film"
    ],
    "types": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "spacewalkBegin": {
    "title": "spacewalkBegin",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "SpaceMission"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "installedCapacity": {
    "title": "installedCapacity",
    "types": [
      "XMLSchema#double"
    ],
    "classes": [
      "PowerStation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "internationalPhonePrefix": {
    "title": "internationalPhonePrefix",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "missions": {
    "title": "missions",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "SpaceShuttle"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "vonKlitzingConstant": {
    "title": "vonKlitzingConstant",
    "classes": [
      "CelestialBody"
    ],
    "types": [
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "originalMaximumBoatLength": {
    "title": "originalMaximumBoatLength",
    "classes": [
      "Canal",
      "Canal"
    ],
    "types": [
      "metre",
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "employersCelebration": {
    "title": "employersCelebration",
    "classes": [
      "Settlement"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "isoCodeRegion": {
    "title": "isoCodeRegion",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Settlement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "decay": {
    "title": "decay",
    "classes": [
      "Spacecraft"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "freeScoreCompetition": {
    "title": "freeScoreCompetition",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "oclc": {
    "title": "oclc",
    "classes": [
      "WrittenWork"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "description": "Online Computer Library Center number",
    "ontology": [
      "DBpedia"
    ]
  },
  "parentOrganisation": {
    "title": "parentOrganisation",
    "classes": [
      "Organisation"
    ],
    "types": [
      "Organisation"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "topic": {
    "title": "topic",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "northWestPlace": {
    "title": "northWestPlace",
    "subPropertyOf": [
      "closeTo"
    ],
    "classes": [
      "Place"
    ],
    "types": [
      "Place"
    ],
    "description": "indicates another place situated north-west.",
    "ontology": [
      "DBpedia"
    ]
  },
  "compiler": {
    "title": "compiler",
    "description": "For compilation albums: the person or entity responsible for selecting the album's track listing.",
    "types": [
      "Person"
    ],
    "classes": [
      "Album"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "thirdDriver": {
    "title": "thirdDriver",
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ],
    "classes": [
      "GrandPrix"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "sharingOutPopulation": {
    "title": "sharingOutPopulation",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "currencyCode": {
    "title": "currencyCode",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "description": "ISO 4217 currency designators.",
    "ontology": [
      "DBpedia"
    ]
  },
  "lengthReference": {
    "title": "lengthReference",
    "classes": [
      "RouteOfTransportation"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "bronzeMedalMixed": {
    "title": "bronzeMedalMixed",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "TennisPlayer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "rolandGarrosMixed": {
    "title": "rolandGarrosMixed",
    "classes": [
      "TennisPlayer"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "highestBreak": {
    "title": "highestBreak",
    "types": [
      "XMLSchema#integer"
    ],
    "classes": [
      "SnookerPlayer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "winsAtChallenges": {
    "title": "winsAtChallenges",
    "subPropertyOf": [
      "DUL.owl#isParticipantIn"
    ],
    "classes": [
      "GolfPlayer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "spurOf": {
    "title": "spurOf",
    "types": [
      "Road"
    ],
    "classes": [
      "Road"
    ],
    "subPropertyOf": [
      "DUL.owl#hasCommonBoundary"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "staff": {
    "title": "staff",
    "classes": [
      "EducationalInstitution"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "spokenIn": {
    "title": "spokenIn",
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "classes": [
      "Language"
    ],
    "types": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "formula": {
    "title": "formula",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "ChemicalSubstance"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "locatedInArea": {
    "title": "locatedInArea",
    "classes": [
      "Place"
    ],
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "types": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "trackLength": {
    "title": "trackLength",
    "types": [
      "XMLSchema#double"
    ],
    "description": "Length of the track. Wikipedians usually do not differentiate between track length and line lenght.",
    "classes": [
      "RouteOfTransportation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "binomialAuthority": {
    "title": "binomialAuthority",
    "classes": [
      "Species"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "stellarClassification": {
    "title": "stellarClassification",
    "types": [
      "core#OrderedCollection"
    ],
    "classes": [
      "CelestialBody"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "wsopWinYear": {
    "title": "wsopWinYear",
    "classes": [
      "PokerPlayer"
    ],
    "types": [
      "XMLSchema#gYear"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "khlDraftYear": {
    "title": "khlDraftYear",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "IceHockeyPlayer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "raceWins": {
    "title": "raceWins",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfParticipatingAthletes": {
    "title": "numberOfParticipatingAthletes",
    "classes": [
      "Olympics"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "formationYear": {
    "title": "formationYear",
    "types": [
      "XMLSchema#gYear"
    ],
    "classes": [
      "Organisation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "band": {
    "title": "band",
    "classes": [
      "Protein"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "vicePrincipal": {
    "title": "vicePrincipal",
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "School"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "boiler": {
    "title": "boiler",
    "classes": [
      "Locomotive"
    ],
    "subPropertyOf": [
      "DUL.owl#hasComponent"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "roleInEvent": {
    "title": "roleInEvent",
    "classes": [
      "Agent"
    ],
    "types": [
      "Event"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "alpsMajorSector": {
    "title": "alpsMajorSector",
    "types": [
      "MountainRange"
    ],
    "classes": [
      "Mountain"
    ],
    "description": "the Alps major sector to which the mountain belongs, according to the SOIUSA classification",
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "significantProject": {
    "title": "significantProject",
    "classes": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "description": "A siginificant artifact constructed by the person.",
    "ontology": [
      "DBpedia"
    ]
  },
  "legalForm": {
    "title": "legalForm",
    "subPropertyOf": [
      "DUL.owl#isClassifiedBy"
    ],
    "description": "There are many types of business entity defined in the legal systems of various countries. These include corporations, cooperatives, partnerships, sole traders, limited liability company and other specialized types of organization.",
    "classes": [
      "Organisation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "tribus": {
    "title": "tribus",
    "types": [
      "Species"
    ],
    "classes": [
      "Species"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "populationPlace": {
    "title": "populationPlace",
    "types": [
      "PopulatedPlace"
    ],
    "description": "a place were members of an ethnic group are living",
    "classes": [
      "EthnicGroup"
    ],
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "wordBefore": {
    "title": "wordBefore",
    "classes": [
      "Country"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "toll": {
    "title": "toll",
    "types": [
      "XMLSchema#double"
    ],
    "classes": [
      "RouteOfTransportation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "inn": {
    "title": "inn",
    "types": [
      "XMLSchema#string"
    ],
    "description": "International Nonproprietary Name given to a pharmaceutical substance",
    "classes": [
      "ChemicalCompound"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "elevatorCount": {
    "title": "elevatorCount",
    "classes": [
      "Building"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "nobelLaureates": {
    "title": "nobelLaureates",
    "classes": [
      "School"
    ],
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "silverMedalSingle": {
    "title": "silverMedalSingle",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "TennisPlayer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfParticipatingMaleAthletes": {
    "title": "numberOfParticipatingMaleAthletes",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Olympics"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "bowlRecord": {
    "title": "bowlRecord",
    "classes": [
      "CollegeCoach"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "eventDescription": {
    "title": "eventDescription",
    "classes": [
      "HistoricPlace"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "shareDate": {
    "title": "shareDate",
    "classes": [
      "Broadcaster"
    ],
    "types": [
      "XMLSchema#gYearMonth"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "endReign": {
    "title": "endReign",
    "classes": [
      "Person"
    ],
    "types": [
      "core#Concept"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "landArea": {
    "title": "landArea",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "mainIslands": {
    "title": "mainIslands",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Island"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "flagSize": {
    "title": "flagSize",
    "classes": [
      "Flag"
    ],
    "types": [
      "XMLSchema#integer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "fileExtension": {
    "title": "fileExtension",
    "classes": [
      "File"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "copilote": {
    "title": "copilote",
    "classes": [
      "Person"
    ],
    "types": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "landingSite": {
    "title": "landingSite",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "SpaceMission"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lunarSurfaceTime": {
    "title": "lunarSurfaceTime",
    "types": [
      "XMLSchema#double",
      "hour"
    ],
    "classes": [
      "SpaceMission",
      "SpaceMission"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "grayPage": {
    "title": "grayPage",
    "description": "Refers to the famous 1918 edition of Gray's Anatomy.",
    "classes": [
      "AnatomicalStructure"
    ],
    "types": [
      "XMLSchema#positiveInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "sourceConfluencePosition": {
    "title": "sourceConfluencePosition",
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "types": [
      "wgs84_pos#SpatialThing"
    ],
    "classes": [
      "River"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "firstLaunchDate": {
    "title": "firstLaunchDate",
    "classes": [
      "LaunchPad"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "otherFamilyBranch": {
    "title": "otherFamilyBranch",
    "classes": [
      "NobleFamily"
    ],
    "types": [
      "Family"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "ethnicGroup": {
    "title": "ethnicGroup",
    "types": [
      "EthnicGroup"
    ],
    "subPropertyOf": [
      "DUL.owl#isLocationOf"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "areaRank": {
    "title": "areaRank",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "hopmanCup": {
    "title": "hopmanCup",
    "classes": [
      "Athlete"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "sisterCollege": {
    "title": "sisterCollege",
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "types": [
      "College"
    ],
    "classes": [
      "College"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "dutchArtworkCode": {
    "title": "dutchArtworkCode",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Artwork"
    ],
    "subPropertyOf": [
      "code"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "drama": {
    "title": "drama",
    "subPropertyOf": [
      "DUL.owl#isParticipantIn"
    ],
    "types": [
      "Drama"
    ],
    "classes": [
      "FictionalCharacter"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "projectObjective": {
    "title": "projectObjective",
    "description": "A defined objective of the project.",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Project"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "prefect": {
    "title": "prefect",
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "Politician"
    ],
    "types": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "service": {
    "title": "service",
    "classes": [
      "Company"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "education": {
    "title": "education",
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "bestRankSingle": {
    "title": "bestRankSingle",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "TennisPlayer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "ideology": {
    "title": "ideology",
    "subPropertyOf": [
      "DUL.owl#conceptualizes"
    ],
    "types": [
      "Ideology"
    ],
    "classes": [
      "Agent"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "draftTeam": {
    "title": "draftTeam",
    "classes": [
      "Athlete"
    ],
    "subPropertyOf": [
      "DUL.owl#isMemberOf"
    ],
    "types": [
      "SportsTeam"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "capital": {
    "title": "capital",
    "classes": [
      "PopulatedPlace"
    ],
    "subPropertyOf": [
      "administrativeHeadCity",
      "DUL.owl#isLocationOf"
    ],
    "types": [
      "City"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "britishWins": {
    "title": "britishWins",
    "classes": [
      "Person"
    ],
    "types": [
      "core#Concept"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "icaoAirlineCode": {
    "title": "icaoAirlineCode",
    "classes": [
      "Airline"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "description": "ICAO designation for airline companies",
    "ontology": [
      "DBpedia"
    ]
  },
  "vicePrincipalLabel": {
    "title": "vicePrincipalLabel",
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "School"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "amsterdamCode": {
    "title": "amsterdamCode",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Municipality"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "astrologicalSign": {
    "title": "astrologicalSign",
    "subPropertyOf": [
      "DUL.owl#isDescribedBy"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "shoots": {
    "title": "shoots",
    "classes": [
      "IceHockeyPlayer"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "okatoCode": {
    "title": "okatoCode",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "description": "Code used to indentify populated places in Russia",
    "ontology": [
      "DBpedia"
    ]
  },
  "olympicGames": {
    "title": "olympicGames",
    "types": [
      "Tournament"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "rightTributary": {
    "title": "rightTributary",
    "subPropertyOf": [
      "DUL.owl#hasCommonBoundary"
    ],
    "classes": [
      "River"
    ],
    "types": [
      "River"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "asiaChampionship": {
    "title": "asiaChampionship",
    "classes": [
      "Athlete"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "originalDanseCompetition": {
    "title": "originalDanseCompetition",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "majorIsland": {
    "title": "majorIsland",
    "classes": [
      "Island"
    ],
    "types": [
      "Island"
    ],
    "subPropertyOf": [
      "DUL.owl#hasPart"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "militaryUnit": {
    "title": "militaryUnit",
    "types": [
      "MilitaryUnit"
    ],
    "classes": [
      "MilitaryPerson"
    ],
    "subPropertyOf": [
      "DUL.owl#isMemberOf"
    ],
    "description": "For persons who are not notable as commanding officers, the unit (company, battalion, regiment, etc.) in which they served.",
    "ontology": [
      "DBpedia"
    ]
  },
  "firstLaunchRocket": {
    "title": "firstLaunchRocket",
    "classes": [
      "LaunchPad"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "types": [
      "Rocket"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "legalArticle": {
    "title": "legalArticle",
    "classes": [
      "LegalCase"
    ],
    "description": "article in code book or statute book referred to in this legal case",
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "primate": {
    "title": "primate",
    "classes": [
      "ChristianDoctrine"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "functionEndDate": {
    "title": "functionEndDate",
    "classes": [
      "PersonFunction"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "unitCost": {
    "title": "unitCost",
    "types": [
      "XMLSchema#double"
    ],
    "classes": [
      "Aircraft"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "idAllocine": {
    "title": "idAllocine",
    "types": [
      "XMLSchema#string"
    ],
    "description": "ID of a film on Allocine",
    "classes": [
      "Film"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "piercing": {
    "title": "piercing",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "amateurNoContest": {
    "title": "amateurNoContest",
    "classes": [
      "Boxer"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "signature": {
    "title": "signature",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfGraves": {
    "title": "numberOfGraves",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Cemetery"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "topFloorHeight": {
    "title": "topFloorHeight",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Skyscraper"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "style": {
    "title": "style",
    "classes": [
      "Artist"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "coExecutiveProducer": {
    "title": "coExecutiveProducer",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "types": [
      "Person"
    ],
    "classes": [
      "TelevisionShow"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "plays": {
    "title": "plays",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "TennisPlayer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "endYearOfInsertion": {
    "title": "endYearOfInsertion",
    "types": [
      "XMLSchema#gYear"
    ],
    "classes": [
      "AutomobileEngine"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "citySince": {
    "title": "citySince",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "widthQuote": {
    "title": "widthQuote",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "codeBook": {
    "title": "codeBook",
    "description": "code book or statute book referred to in this legal case",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "LegalCase"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lawCountry": {
    "title": "lawCountry",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "pistonStroke": {
    "title": "pistonStroke",
    "classes": [
      "Engine",
      "AutomobileEngine"
    ],
    "types": [
      "millimetre",
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lunarLandingSite": {
    "title": "lunarLandingSite",
    "classes": [
      "SpaceMission"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "ra": {
    "title": "ra",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Openswarm"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "alpsMainPart": {
    "title": "alpsMainPart",
    "description": "the Alps main part to which the mountain belongs, according to the SOIUSA classification",
    "types": [
      "MountainRange"
    ],
    "classes": [
      "Mountain"
    ],
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "routeDirection": {
    "title": "routeDirection",
    "description": "Direction of the traffic route (e.g. North-South).",
    "classes": [
      "RouteOfTransportation"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "captureDate": {
    "title": "captureDate",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "Ship"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfDependency": {
    "title": "numberOfDependency",
    "classes": [
      "Continent"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "millsCodeNLVerdwenen": {
    "title": "millsCodeNLVerdwenen",
    "classes": [
      "Mill"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "goldMedalDouble": {
    "title": "goldMedalDouble",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "TennisPlayer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "mythology": {
    "title": "mythology",
    "classes": [
      "MythologicalFigure"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "unicode": {
    "title": "unicode",
    "types": [
      "XMLSchema#string"
    ],
    "description": "the international Unicode standard aims to encode all writing systems used on the planet.",
    "classes": [
      "Letter"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "managerYears": {
    "title": "managerYears",
    "classes": [
      "SoccerPlayer"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "otherParty": {
    "title": "otherParty",
    "subPropertyOf": [
      "DUL.owl#isMemberOf"
    ],
    "classes": [
      "OfficeHolder"
    ],
    "types": [
      "PoliticalParty"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "academicAdvisor": {
    "title": "academicAdvisor",
    "classes": [
      "Scientist"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "types": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "eventDate": {
    "title": "eventDate",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "iso31661Code": {
    "title": "iso31661Code",
    "classes": [
      "Place"
    ],
    "description": "defines codes for the names of countries, dependent territories, and special areas of geographical interest",
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "targetSpaceStation": {
    "title": "targetSpaceStation",
    "classes": [
      "Spacecraft"
    ],
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "types": [
      "SpaceStation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "landPercentage": {
    "title": "landPercentage",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#float"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "mouthPlace": {
    "title": "mouthPlace",
    "classes": [
      "River"
    ],
    "types": [
      "PopulatedPlace"
    ],
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfParticipatingFemaleAthletes": {
    "title": "numberOfParticipatingFemaleAthletes",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Olympics"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "names": {
    "title": "names",
    "classes": [
      "Openswarm"
    ],
    "types": [
      "22-rdf-syntax-ns#langString"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "meshNumber": {
    "title": "meshNumber",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "AnatomicalStructure"
    ],
    "subPropertyOf": [
      "code"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "localizationThumbnailCaption": {
    "title": "localizationThumbnailCaption",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "movie": {
    "title": "movie",
    "classes": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#isParticipantIn"
    ],
    "types": [
      "Film"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "settingOfPlay": {
    "title": "settingOfPlay",
    "types": [
      "XMLSchema#string"
    ],
    "description": "The places and time where the play takes place.",
    "classes": [
      "Play"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "shipBeam": {
    "title": "shipBeam",
    "types": [
      "XMLSchema#double"
    ],
    "description": "The beam of a ship is its width at the widest point.",
    "classes": [
      "Ship"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "firstPublisher": {
    "title": "firstPublisher",
    "types": [
      "Agent"
    ],
    "classes": [
      "WrittenWork"
    ],
    "subPropertyOf": [
      "publisher"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "co2Emission": {
    "title": "co2Emission",
    "classes": [
      "AutomobileEngine",
      "Engine"
    ],
    "types": [
      "gramPerKilometre",
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lounge": {
    "title": "lounge",
    "classes": [
      "Airline"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "reopeningYear": {
    "title": "reopeningYear",
    "description": "Year of reopening the architectural structure.",
    "classes": [
      "ArchitecturalStructure"
    ],
    "types": [
      "XMLSchema#gYear"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "gun": {
    "title": "gun",
    "classes": [
      "Aircraft"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "crosses": {
    "title": "crosses",
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "types": [
      "River"
    ],
    "classes": [
      "Bridge"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "case": {
    "title": "case",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "amateurTie": {
    "title": "amateurTie",
    "classes": [
      "Boxer"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "sourceConfluencePlace": {
    "title": "sourceConfluencePlace",
    "types": [
      "Place"
    ],
    "classes": [
      "River"
    ],
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "fedCup": {
    "title": "fedCup",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Athlete"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "spokesperson": {
    "title": "spokesperson",
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "types": [
      "Person"
    ],
    "classes": [
      "PoliticalParty"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "blackSkiPisteNumber": {
    "title": "blackSkiPisteNumber",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lowerAge": {
    "title": "lowerAge",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "School"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "sourceConfluenceMountain": {
    "title": "sourceConfluenceMountain",
    "types": [
      "Mountain"
    ],
    "classes": [
      "River"
    ],
    "subPropertyOf": [
      "DUL.owl#nearTo"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "beatifiedBy": {
    "title": "beatifiedBy",
    "types": [
      "Person"
    ],
    "classes": [
      "Saint"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "fareZone": {
    "title": "fareZone",
    "types": [
      "XMLSchema#string"
    ],
    "description": "The fare zone in which station is located.",
    "classes": [
      "Station"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "railwayLineUsingTunnel": {
    "title": "railwayLineUsingTunnel",
    "classes": [
      "RailwayTunnel"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "description": "Railway line that is using the tunnel.",
    "ontology": [
      "DBpedia"
    ]
  },
  "army": {
    "title": "army",
    "description": "An army is the ground armed forces of a nation",
    "classes": [
      "MilitaryPerson"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "ingredient": {
    "title": "ingredient",
    "description": "Main ingredient used to prepare a specific Food or Beverage. For strings use ingredientName, for objects use ingredient.",
    "subPropertyOf": [
      "DUL.owl#hasPart"
    ],
    "classes": [
      "Food"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "latinName": {
    "title": "latinName",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "AnatomicalStructure"
    ],
    "subPropertyOf": [
      "Name"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "issDockings": {
    "title": "issDockings",
    "classes": [
      "SpaceShuttle"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "place": {
    "title": "place",
    "types": [
      "PopulatedPlace"
    ],
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "classes": [
      "MilitaryConflict"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "victoryAsMgr": {
    "title": "victoryAsMgr",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "custodian": {
    "title": "custodian",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "School"
    ],
    "types": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "meetingRoad": {
    "title": "meetingRoad",
    "types": [
      "Road"
    ],
    "description": "A road that crosses another road at the junction.",
    "classes": [
      "RoadJunction"
    ],
    "subPropertyOf": [
      "DUL.owl#hasCommonBoundary"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "computingPlatform": {
    "title": "computingPlatform",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "Software"
    ],
    "description": "some sort of hardware architecture or software framework, that allows this software to run",
    "ontology": [
      "DBpedia"
    ]
  },
  "capitalDistrict": {
    "title": "capitalDistrict",
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "classes": [
      "Island"
    ],
    "types": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "countryWithFirstSpaceflight": {
    "title": "countryWithFirstSpaceflight",
    "types": [
      "Country"
    ],
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ],
    "classes": [
      "YearInSpaceflight"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "coemperor": {
    "title": "coemperor",
    "classes": [
      "Monarch"
    ],
    "types": [
      "Monarch"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "volcanicActivity": {
    "title": "volcanicActivity",
    "classes": [
      "Island"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "distributingCompany": {
    "title": "distributingCompany",
    "types": [
      "Company"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "RecordLabel"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "notableWine": {
    "title": "notableWine",
    "classes": [
      "Grape"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfFilms": {
    "title": "numberOfFilms",
    "classes": [
      "AdultActor"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "programmeFormat": {
    "title": "programmeFormat",
    "description": "The programming format describes the overall content broadcast on a radio or television station.",
    "classes": [
      "Broadcaster"
    ],
    "subPropertyOf": [
      "DUL.owl#isClassifiedBy"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "draftRound": {
    "title": "draftRound",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "GridironFootballPlayer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lastWin": {
    "title": "lastWin",
    "classes": [
      "FormulaOneRacer"
    ],
    "subPropertyOf": [
      "DUL.owl#isParticipantIn"
    ],
    "types": [
      "GrandPrix"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "mainspan": {
    "title": "mainspan",
    "types": [
      "XMLSchema#double"
    ],
    "classes": [
      "Bridge"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "route": {
    "title": "route",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "mouthPosition": {
    "title": "mouthPosition",
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "types": [
      "wgs84_pos#SpatialThing"
    ],
    "classes": [
      "River"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "raceLength": {
    "title": "raceLength",
    "types": [
      "XMLSchema#double"
    ],
    "classes": [
      "FormulaOneRacing"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "ruralMunicipality": {
    "title": "ruralMunicipality",
    "types": [
      "PopulatedPlace"
    ],
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "classes": [
      "Road"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "livingPlace": {
    "title": "livingPlace",
    "classes": [
      "Person"
    ],
    "types": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "ngcName": {
    "title": "ngcName",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "CelestialBody"
    ],
    "subPropertyOf": [
      "name"
    ],
    "description": "Name for NGC objects",
    "ontology": [
      "DBpedia"
    ]
  },
  "landskap": {
    "title": "landskap",
    "classes": [
      "NorwaySettlement"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lchfDraft": {
    "title": "lchfDraft",
    "classes": [
      "IceHockeyPlayer"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "broadcastNetwork": {
    "title": "broadcastNetwork",
    "description": "The parent broadcast network to which the broadcaster belongs.",
    "types": [
      "BroadcastNetwork"
    ],
    "classes": [
      "Broadcaster"
    ],
    "subPropertyOf": [
      "DUL.owl#isMemberOf"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "gaudiAward": {
    "title": "gaudiAward",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "Artist"
    ],
    "types": [
      "Award"
    ],
    "description": "Awards of the Catalan Academy of Cinema",
    "ontology": [
      "DBpedia"
    ]
  },
  "openingFilm": {
    "title": "openingFilm",
    "classes": [
      "FilmFestival"
    ],
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ],
    "types": [
      "Film"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "millsCodeBE": {
    "title": "millsCodeBE",
    "description": "unique code for mills in database www.molenechos.org",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Mill"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfWineries": {
    "title": "numberOfWineries",
    "classes": [
      "WineRegion"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "mouthDistrict": {
    "title": "mouthDistrict",
    "classes": [
      "River"
    ],
    "types": [
      "PopulatedPlace"
    ],
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "carbohydrate": {
    "title": "carbohydrate",
    "classes": [
      "Food"
    ],
    "types": [
      "XMLSchema#double"
    ],
    "description": "Amount of carbohydrates per servingSize of a Food",
    "ontology": [
      "DBpedia"
    ]
  },
  "tuition": {
    "title": "tuition",
    "types": [
      "XMLSchema#double"
    ],
    "classes": [
      "School"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "nationalTournamentSilver": {
    "title": "nationalTournamentSilver",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "dateUnveiled": {
    "title": "dateUnveiled",
    "description": "Designates the unveiling date",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "Monument"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "hairColour": {
    "title": "hairColour",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "reigningPope": {
    "title": "reigningPope",
    "types": [
      "Pope"
    ],
    "classes": [
      "Cleric"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "trainerClub": {
    "title": "trainerClub",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "SoccerPlayer"
    ],
    "types": [
      "SportsTeam"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "winsAtAlpg": {
    "title": "winsAtAlpg",
    "classes": [
      "GolfPlayer"
    ],
    "subPropertyOf": [
      "DUL.owl#isParticipantIn"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "constructionMaterial": {
    "title": "constructionMaterial",
    "description": "Construction material (eg. concrete, steel, iron, stone, brick, wood).",
    "classes": [
      "ArchitecturalStructure"
    ],
    "subPropertyOf": [
      "DUL.owl#hasConstituent"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "americanComedyAward": {
    "title": "americanComedyAward",
    "classes": [
      "Comedian"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "types": [
      "Award"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "weapon": {
    "title": "weapon",
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "manager": {
    "title": "manager",
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "SportsTeam"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "viceLeaderParty": {
    "title": "viceLeaderParty",
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "types": [
      "PoliticalParty"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "landeshauptmann": {
    "title": "landeshauptmann",
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "AdministrativeRegion"
    ],
    "types": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "ithfDate": {
    "title": "ithfDate",
    "classes": [
      "Athlete"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "poleDriver": {
    "title": "poleDriver",
    "classes": [
      "GrandPrix"
    ],
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfLaps": {
    "title": "numberOfLaps",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "FormulaOneRacing"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "ceo": {
    "title": "ceo",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "Organisation"
    ],
    "types": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "certification": {
    "title": "certification",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Single"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "academicDiscipline": {
    "title": "academicDiscipline",
    "description": "An academic discipline, or field of study, is a branch of knowledge that is taught and researched at the college or university level. Disciplines are defined (in part), and recognized by the academic journals in which research is published, and the learned societies and academic departments or faculties to which their practitioners belong.",
    "classes": [
      "AcademicJournal"
    ],
    "subPropertyOf": [
      "DUL.owl#isAbout"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "massif": {
    "title": "massif",
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "types": [
      "Place"
    ],
    "classes": [
      "SkiResort"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "firstFlightStartDate": {
    "title": "firstFlightStartDate",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "SpaceShuttle"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfArrondissement": {
    "title": "numberOfArrondissement",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Department"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "endDateTime": {
    "title": "endDateTime",
    "types": [
      "XMLSchema#dateTime"
    ],
    "description": "The end date and time of the event.",
    "classes": [
      "Event"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "usSales": {
    "title": "usSales",
    "description": "Number of things (eg vehicles) sold in the US",
    "classes": [
      "Sales"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "tournamentOfChampions": {
    "title": "tournamentOfChampions",
    "classes": [
      "Athlete"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "geneLocationEnd": {
    "title": "geneLocationEnd",
    "description": "the end of the gene",
    "types": [
      "XMLSchema#integer"
    ],
    "classes": [
      "GeneLocation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "uciCode": {
    "title": "uciCode",
    "classes": [
      "CyclingTeam"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "description": "Official UCI code for cycling teams",
    "ontology": [
      "DBpedia"
    ]
  },
  "escalafon": {
    "title": "escalafon",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "relief": {
    "title": "relief",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "shoeNumber": {
    "title": "shoeNumber",
    "types": [
      "XMLSchema#positiveInteger"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "editing": {
    "title": "editing",
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "Film"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "waterArea": {
    "title": "waterArea",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "nationalTournamentGold": {
    "title": "nationalTournamentGold",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "winsAtKLPGA": {
    "title": "winsAtKLPGA",
    "classes": [
      "GolfPlayer"
    ],
    "subPropertyOf": [
      "DUL.owl#isParticipantIn"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "sovereignCountry": {
    "title": "sovereignCountry",
    "subPropertyOf": [
      "DUL.owl#isPartOf"
    ],
    "classes": [
      "Place"
    ],
    "types": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "trustee": {
    "title": "trustee",
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "Organisation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "goldMedalMixed": {
    "title": "goldMedalMixed",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "TennisPlayer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "britishOpen": {
    "title": "britishOpen",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Athlete"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "agglomerationDemographics": {
    "title": "agglomerationDemographics",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "Demographics"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "other": {
    "title": "other",
    "classes": [
      "University"
    ],
    "types": [
      "XMLSchema#integer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "bigPoolRecord": {
    "title": "bigPoolRecord",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "firstRace": {
    "title": "firstRace",
    "classes": [
      "FormulaOneRacer"
    ],
    "subPropertyOf": [
      "DUL.owl#isParticipantIn"
    ],
    "types": [
      "GrandPrix"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "dateAgreement": {
    "title": "dateAgreement",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "birthYear": {
    "title": "birthYear",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#gYear"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "analogChannel": {
    "title": "analogChannel",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Broadcaster"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "liberationDate": {
    "title": "liberationDate",
    "classes": [
      "ConcentrationCamp"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "rankArea": {
    "title": "rankArea",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "populationPctMen": {
    "title": "populationPctMen",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "growingGrape": {
    "title": "growingGrape",
    "classes": [
      "WineRegion"
    ],
    "types": [
      "Grape"
    ],
    "subPropertyOf": [
      "DUL.owl#isLocationOf"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "municipalityAbsorbedBy": {
    "title": "municipalityAbsorbedBy",
    "classes": [
      "FormerMunicipality"
    ],
    "types": [
      "Municipality"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "demographics": {
    "title": "demographics",
    "types": [
      "Demographics"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "draftPosition": {
    "title": "draftPosition",
    "classes": [
      "Athlete"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "tattoo": {
    "title": "tattoo",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "fastestDriverCountry": {
    "title": "fastestDriverCountry",
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ],
    "classes": [
      "GrandPrix"
    ],
    "types": [
      "Country"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "yearElevationIntoNobility": {
    "title": "yearElevationIntoNobility",
    "classes": [
      "NobleFamily"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "modelStartYear": {
    "title": "modelStartYear",
    "classes": [
      "MeanOfTransportation"
    ],
    "types": [
      "XMLSchema#gYear"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "ncaaTeam": {
    "title": "ncaaTeam",
    "types": [
      "SportsTeam"
    ],
    "classes": [
      "Athlete"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "chairperson": {
    "title": "chairperson",
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "Organisation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "detectionMethod": {
    "title": "detectionMethod",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Planet"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "twinTown": {
    "title": "twinTown",
    "types": [
      "Settlement"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "Settlement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "proYear": {
    "title": "proYear",
    "classes": [
      "Athlete,_CareerStation"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "patronSaint": {
    "title": "patronSaint",
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "Settlement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "landingDate": {
    "title": "landingDate",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "SpaceMission"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "information": {
    "title": "information",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "crews": {
    "title": "crews",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "SpaceShuttle"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "aggregation": {
    "title": "aggregation",
    "classes": [
      "ChemicalSubstance"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "dateConstruction": {
    "title": "dateConstruction",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "Canal"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "delegation": {
    "title": "delegation",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "licenceNumber": {
    "title": "licenceNumber",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lastProMatch": {
    "title": "lastProMatch",
    "classes": [
      "Athlete"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "geologicPeriod": {
    "title": "geologicPeriod",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "comic": {
    "title": "comic",
    "types": [
      "Comic"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "FictionalCharacter"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "individualisedPnd": {
    "title": "individualisedPnd",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "description": "PND (Personennamendatei) data about a person. PND is published by the German National Library. For each person there is a record with her/his name, birth and occupation connected with a unique identifier, the PND number.",
    "ontology": [
      "DBpedia"
    ]
  },
  "aircraftFighter": {
    "title": "aircraftFighter",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "types": [
      "MeanOfTransportation"
    ],
    "classes": [
      "MilitaryUnit"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "nrhpReferenceNumber": {
    "title": "nrhpReferenceNumber",
    "classes": [
      "HistoricPlace"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "notableCommander": {
    "title": "notableCommander",
    "classes": [
      "MilitaryUnit"
    ],
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "appearancesInNationalTeam": {
    "title": "appearancesInNationalTeam",
    "classes": [
      "SoccerPlayer"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "hometown": {
    "title": "hometown",
    "classes": [
      "Agent"
    ],
    "types": [
      "Settlement"
    ],
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lengthQuote": {
    "title": "lengthQuote",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "capitalCoordinates": {
    "title": "capitalCoordinates",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "leaderParty": {
    "title": "leaderParty",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "gross": {
    "title": "gross",
    "classes": [
      "Film"
    ],
    "types": [
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "schoolPatron": {
    "title": "schoolPatron",
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "School"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "serviceEndDate": {
    "title": "serviceEndDate",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "MilitaryPerson"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "magazine": {
    "title": "magazine",
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "types": [
      "Magazine"
    ],
    "classes": [
      "WrittenWork"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "leaderFunction": {
    "title": "leaderFunction",
    "classes": [
      "Organisation"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "types": [
      "PersonFunction"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "touristicSite": {
    "title": "touristicSite",
    "types": [
      "Place"
    ],
    "subPropertyOf": [
      "DUL.owl#hasPart"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "geneLocation": {
    "title": "geneLocation",
    "types": [
      "GeneLocation"
    ],
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "classes": [
      "Gene"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "towerHeight": {
    "title": "towerHeight",
    "classes": [
      "Building"
    ],
    "types": [
      "XMLSchema#positiveInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lunarRover": {
    "title": "lunarRover",
    "classes": [
      "SpaceMission"
    ],
    "types": [
      "MeanOfTransportation"
    ],
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "principalEngineer": {
    "title": "principalEngineer",
    "classes": [
      "Canal"
    ],
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "isil": {
    "title": "isil",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Library"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "hipSize": {
    "title": "hipSize",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "perifocus": {
    "title": "perifocus",
    "classes": [
      "CelestialBody"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "mainBuilding": {
    "title": "mainBuilding",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Shrine"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "mapCaption": {
    "title": "mapCaption",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "maximumBoatBeam": {
    "title": "maximumBoatBeam",
    "classes": [
      "Canal",
      "Canal"
    ],
    "types": [
      "metre",
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "currentProduction": {
    "title": "currentProduction",
    "description": "The current production running in the theatre.",
    "classes": [
      "Theatre"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "minimumDischarge": {
    "title": "minimumDischarge",
    "types": [
      "XMLSchema#double",
      "cubicMetrePerSecond"
    ],
    "classes": [
      "Stream"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "circulation": {
    "title": "circulation",
    "classes": [
      "WrittenWork"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "ko": {
    "title": "ko",
    "classes": [
      "Boxer"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "layout": {
    "title": "layout",
    "subPropertyOf": [
      "DUL.owl#hasQuality"
    ],
    "classes": [
      "Automobile"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "serviceStartYear": {
    "title": "serviceStartYear",
    "classes": [
      "MilitaryPerson"
    ],
    "types": [
      "XMLSchema#gYear"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "worldTournament": {
    "title": "worldTournament",
    "types": [
      "Tournament"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "mvp": {
    "title": "mvp",
    "classes": [
      "Athlete"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "dutchPPNCode": {
    "title": "dutchPPNCode",
    "subPropertyOf": [
      "code"
    ],
    "description": "Dutch PPN code is a library cataloguing code for collection items (books, journals and the like).",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "WrittenWork"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "runwayWidth": {
    "title": "runwayWidth",
    "types": [
      "XMLSchema#double"
    ],
    "classes": [
      "Airport"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "titleDate": {
    "title": "titleDate",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "believers": {
    "title": "believers",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "ChristianDoctrine"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "otherFunction": {
    "title": "otherFunction",
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "minimumArea": {
    "title": "minimumArea",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "giniCoefficientRanking": {
    "title": "giniCoefficientRanking",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "XMLSchema#positiveInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "leaderName": {
    "title": "leaderName",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "finalFlight": {
    "title": "finalFlight",
    "classes": [
      "Rocket"
    ],
    "description": "date of final flight",
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "filename": {
    "title": "filename",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Work"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "linkedSpace": {
    "title": "linkedSpace",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "missionDuration": {
    "title": "missionDuration",
    "types": [
      "XMLSchema#double",
      "day"
    ],
    "classes": [
      "SpaceMission",
      "SpaceMission"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "features": {
    "title": "features",
    "types": [
      "Work"
    ],
    "classes": [
      "ArchitecturalStructure"
    ],
    "subPropertyOf": [
      "DUL.owl#hasPart"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "grave": {
    "title": "grave",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "internationalAffiliation": {
    "title": "internationalAffiliation",
    "subPropertyOf": [
      "DUL.owl#isMemberOf"
    ],
    "classes": [
      "PoliticalParty"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "building": {
    "title": "building",
    "classes": [
      "Island"
    ],
    "subPropertyOf": [
      "DUL.owl#isLocationOf"
    ],
    "types": [
      "Building"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "subsystem": {
    "title": "subsystem",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfStudioAlbums": {
    "title": "numberOfStudioAlbums",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "description": "the number of studio albums released by the musical artist",
    "classes": [
      "MusicalArtist"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "automobilePlatform": {
    "title": "automobilePlatform",
    "classes": [
      "Automobile"
    ],
    "subPropertyOf": [
      "DUL.owl#hasComponent"
    ],
    "types": [
      "Automobile"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "minority": {
    "title": "minority",
    "types": [
      "Group"
    ],
    "classes": [
      "Settlement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "highestRegion": {
    "title": "highestRegion",
    "types": [
      "PopulatedPlace"
    ],
    "classes": [
      "Island"
    ],
    "subPropertyOf": [
      "DUL.owl#isLocationOf"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "humanDevelopmentIndexAsOf": {
    "title": "humanDevelopmentIndexAsOf",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "worldOpen": {
    "title": "worldOpen",
    "classes": [
      "Athlete"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "layingDown": {
    "title": "layingDown",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "Ship"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "selectionYear": {
    "title": "selectionYear",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Athlete"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "bandMember": {
    "title": "bandMember",
    "description": "A member of the band.",
    "subPropertyOf": [
      "DUL.owl#hasMember"
    ],
    "types": [
      "Person"
    ],
    "classes": [
      "Band"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "distanceToDublin": {
    "title": "distanceToDublin",
    "types": [
      "XMLSchema#double"
    ],
    "classes": [
      "Settlement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "animator": {
    "title": "animator",
    "classes": [
      "Cartoon"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "types": [
      "Agent"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "solventWithMediocreSolubility": {
    "title": "solventWithMediocreSolubility",
    "types": [
      "ChemicalSubstance"
    ],
    "classes": [
      "ChemicalSubstance"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "aircraftType": {
    "title": "aircraftType",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Aircraft"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "blueSkiPisteNumber": {
    "title": "blueSkiPisteNumber",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "identificationSymbol": {
    "title": "identificationSymbol",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "MilitaryUnit"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "programCost": {
    "title": "programCost",
    "types": [
      "XMLSchema#double"
    ],
    "classes": [
      "Aircraft"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "day": {
    "title": "day",
    "classes": [
      "Settlement"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "genomeDB": {
    "title": "genomeDB",
    "types": [
      "XMLSchema#string"
    ],
    "description": "the edition of the database used (i.e. hg19)",
    "classes": [
      "GeneLocation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "ward": {
    "title": "ward",
    "classes": [
      "LiechtensteinSettlement"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "affair": {
    "title": "affair",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lethalOnMice": {
    "title": "lethalOnMice",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "ChemicalSubstance"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "delegateMayor": {
    "title": "delegateMayor",
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "eloRecord": {
    "title": "eloRecord",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "ChessPlayer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "eyeColour": {
    "title": "eyeColour",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "modelStartDate": {
    "title": "modelStartDate",
    "classes": [
      "MeanOfTransportation"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "stylisticOrigin": {
    "title": "stylisticOrigin",
    "classes": [
      "MusicGenre"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "types": [
      "MusicGenre"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "emmyAward": {
    "title": "emmyAward",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "Artist"
    ],
    "types": [
      "Award"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "subsystemLink": {
    "title": "subsystemLink",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "areaOfSearch": {
    "title": "areaOfSearch",
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "classes": [
      "SiteOfSpecialScientificInterest"
    ],
    "types": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "retentionTime": {
    "title": "retentionTime",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "nationalYears": {
    "title": "nationalYears",
    "classes": [
      "SoccerPlayer"
    ],
    "types": [
      "XMLSchema#gYear"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "wimbledonDouble": {
    "title": "wimbledonDouble",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "TennisPlayer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "unesco": {
    "title": "unesco",
    "classes": [
      "Place"
    ],
    "types": [
      "PopulatedPlace"
    ],
    "subPropertyOf": [
      "DUL.owl#hasPart"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "highestState": {
    "title": "highestState",
    "classes": [
      "Island"
    ],
    "subPropertyOf": [
      "DUL.owl#isLocationOf"
    ],
    "types": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lethalOnRats": {
    "title": "lethalOnRats",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "ChemicalSubstance"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "territory": {
    "title": "territory",
    "classes": [
      "MilitaryConflict,_AdministrativeRegion"
    ],
    "types": [
      "PopulatedPlace"
    ],
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "geneReviewsName": {
    "title": "geneReviewsName",
    "classes": [
      "Disease"
    ],
    "types": [
      "22-rdf-syntax-ns#langString"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "dam": {
    "title": "dam",
    "types": [
      "Animal"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "Animal"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "parkingInformation": {
    "title": "parkingInformation",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Station"
    ],
    "description": "Information on station's parking facilities.",
    "ontology": [
      "DBpedia"
    ]
  },
  "chorusCharacterInPlay": {
    "title": "chorusCharacterInPlay",
    "description": "The name of the (Greek) chorus character in play.",
    "subPropertyOf": [
      "characterInPlay"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Play"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "routeStartDirection": {
    "title": "routeStartDirection",
    "description": "Direction of the beginning of the traffic route.",
    "classes": [
      "RouteOfTransportation"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "offeredClasses": {
    "title": "offeredClasses",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "School"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "averageClassSize": {
    "title": "averageClassSize",
    "types": [
      "XMLSchema#float"
    ],
    "classes": [
      "School"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfDoctoralStudents": {
    "title": "numberOfDoctoralStudents",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "University"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "painter": {
    "title": "painter",
    "types": [
      "Person"
    ],
    "classes": [
      "Artwork"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "fansgroup": {
    "title": "fansgroup",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "SoccerClub"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "landtag": {
    "title": "landtag",
    "classes": [
      "AdministrativeRegion"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "derivedWord": {
    "title": "derivedWord",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "collegeHof": {
    "title": "collegeHof",
    "classes": [
      "Athlete"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "chairmanTitle": {
    "title": "chairmanTitle",
    "classes": [
      "SoccerClub"
    ],
    "types": [
      "22-rdf-syntax-ns#langString"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "hairColor": {
    "title": "hairColor",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfNewlyIntroducedSports": {
    "title": "numberOfNewlyIntroducedSports",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Olympics"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "rankingsSingles": {
    "title": "rankingsSingles",
    "classes": [
      "TennisPlayer"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "definition": {
    "title": "definition",
    "classes": [
      "Galaxy"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "designCompany": {
    "title": "designCompany",
    "types": [
      "Company"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "MeanOfTransportation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "subjectOfPlay": {
    "title": "subjectOfPlay",
    "description": "The overall subject matter dealt with by the play.",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Play"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "productShape": {
    "title": "productShape",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Food"
    ],
    "subPropertyOf": [
      "DUL.owl#hasQuality"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "land": {
    "title": "land",
    "classes": [
      "Place"
    ],
    "types": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "currentRecord": {
    "title": "currentRecord",
    "classes": [
      "CollegeCoach"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "openingTheme": {
    "title": "openingTheme",
    "types": [
      "Work"
    ],
    "classes": [
      "TelevisionShow"
    ],
    "subPropertyOf": [
      "DUL.owl#hasPart"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "quote": {
    "title": "quote",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "soccerTournamentMostSuccesfull": {
    "title": "soccerTournamentMostSuccesfull",
    "classes": [
      "SoccerTournament"
    ],
    "subPropertyOf": [
      "DUL.owl#isSettingFor"
    ],
    "types": [
      "SoccerClub"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "presidentGeneralCouncilMandate": {
    "title": "presidentGeneralCouncilMandate",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "continentRank": {
    "title": "continentRank",
    "description": "The building's place in the list of the tallest buildings on the continent",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Skyscraper"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lastFlightEndDate": {
    "title": "lastFlightEndDate",
    "classes": [
      "SpaceShuttle"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfMembersAsOf": {
    "title": "numberOfMembersAsOf",
    "classes": [
      "PoliticalParty"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "polePosition": {
    "title": "polePosition",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "subTribus": {
    "title": "subTribus",
    "subPropertyOf": [
      "Tribus"
    ],
    "classes": [
      "Species"
    ],
    "types": [
      "Species"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "vein": {
    "title": "vein",
    "subPropertyOf": [
      "DUL.owl#hasCommonBoundary"
    ],
    "types": [
      "Vein"
    ],
    "classes": [
      "AnatomicalStructure"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "blockAlloy": {
    "title": "blockAlloy",
    "classes": [
      "AutomobileEngine"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "biggestCity": {
    "title": "biggestCity",
    "classes": [
      "Place"
    ],
    "types": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "stationVisitDuration": {
    "title": "stationVisitDuration",
    "classes": [
      "SpaceMission",
      "SpaceMission"
    ],
    "types": [
      "hour",
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "freeLabel": {
    "title": "freeLabel",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "FictionalCharacter"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "statusYear": {
    "title": "statusYear",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "absoluteMagnitude": {
    "title": "absoluteMagnitude",
    "types": [
      "XMLSchema#double"
    ],
    "classes": [
      "CelestialBody"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "regionalLanguage": {
    "title": "regionalLanguage",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "Language"
    ],
    "subPropertyOf": [
      "DUL.owl#isLocationOf"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "aircraftElectronic": {
    "title": "aircraftElectronic",
    "classes": [
      "MilitaryUnit"
    ],
    "types": [
      "MeanOfTransportation"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "grades": {
    "title": "grades",
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "School"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "winsAtSun": {
    "title": "winsAtSun",
    "classes": [
      "GolfPlayer"
    ],
    "subPropertyOf": [
      "DUL.owl#isParticipantIn"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfOfficials": {
    "title": "numberOfOfficials",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "OlympicResult"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "codeNationalMonument": {
    "title": "codeNationalMonument",
    "types": [
      "XMLSchema#string"
    ],
    "description": "Code assigned to (Dutch) monuments, protected at national level",
    "classes": [
      "Place"
    ],
    "subPropertyOf": [
      "code"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lowestMountain": {
    "title": "lowestMountain",
    "classes": [
      "Place"
    ],
    "subPropertyOf": [
      "DUL.owl#isLocationOf"
    ],
    "types": [
      "Mountain"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lastLaunch": {
    "title": "lastLaunch",
    "classes": [
      "YearInSpaceflight"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lineLength": {
    "title": "lineLength",
    "description": "Length of the line. Wikipedians usually do not differentiate between track length and line lenght.",
    "types": [
      "XMLSchema#double"
    ],
    "classes": [
      "RouteOfTransportation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "college": {
    "title": "college",
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "Person"
    ],
    "types": [
      "EducationalInstitution"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "targetAirport": {
    "title": "targetAirport",
    "classes": [
      "Airline"
    ],
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "types": [
      "Airport"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "reportingMark": {
    "title": "reportingMark",
    "classes": [
      "PublicTransitSystem"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "description": "A reporting mark is a two-, three-, or four-letter alphabetic code used to identify owners or lessees of rolling stock and other equipment used on the North American railroad network.",
    "ontology": [
      "DBpedia"
    ]
  },
  "orientation": {
    "title": "orientation",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "nationalTeam": {
    "title": "nationalTeam",
    "types": [
      "SportsTeam"
    ],
    "classes": [
      "Athlete"
    ],
    "subPropertyOf": [
      "DUL.owl#isMemberOf"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "bgafdId": {
    "title": "bgafdId",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Film"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfClubs": {
    "title": "numberOfClubs",
    "classes": [
      "Activity"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "leaderTitle": {
    "title": "leaderTitle",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "22-rdf-syntax-ns#langString"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "filmAudioType": {
    "title": "filmAudioType",
    "description": "specifies the audio type of the film i.e. 'sound' or 'silent'",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Film"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "serviceEndYear": {
    "title": "serviceEndYear",
    "classes": [
      "MilitaryPerson"
    ],
    "types": [
      "XMLSchema#gYear"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfParticipatingNations": {
    "title": "numberOfParticipatingNations",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Olympics"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "sheading": {
    "title": "sheading",
    "subPropertyOf": [
      "DUL.owl#isPartOf"
    ],
    "types": [
      "PopulatedPlace"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "birthSign": {
    "title": "birthSign",
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "podium": {
    "title": "podium",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "foresterDistrict": {
    "title": "foresterDistrict",
    "subPropertyOf": [
      "DUL.owl#isPartOf"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "finalLost": {
    "title": "finalLost",
    "classes": [
      "TennisPlayer"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "winsAtLET": {
    "title": "winsAtLET",
    "subPropertyOf": [
      "DUL.owl#isParticipantIn"
    ],
    "classes": [
      "GolfPlayer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "cableCar": {
    "title": "cableCar",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "graySubject": {
    "title": "graySubject",
    "description": "Refers to the famous 1918 edition of Gray's Anatomy.",
    "classes": [
      "AnatomicalStructure"
    ],
    "types": [
      "XMLSchema#positiveInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "symbol": {
    "title": "symbol",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Biomolecule"
    ],
    "description": "HUGO Gene Symbol",
    "ontology": [
      "DBpedia"
    ]
  },
  "distributingLabel": {
    "title": "distributingLabel",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "RecordLabel"
    ],
    "types": [
      "RecordLabel"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "ceeb": {
    "title": "ceeb",
    "classes": [
      "School"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "compressionRatio": {
    "title": "compressionRatio",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "AutomobileEngine"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "skiLift": {
    "title": "skiLift",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "heightAgainst": {
    "title": "heightAgainst",
    "classes": [
      "Athlete"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "deadInFightDate": {
    "title": "deadInFightDate",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "geminiAward": {
    "title": "geminiAward",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "Actor"
    ],
    "types": [
      "Award"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "typeOfGrain": {
    "title": "typeOfGrain",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Food"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lahHof": {
    "title": "lahHof",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "musicalArtist": {
    "title": "musicalArtist",
    "types": [
      "MusicalArtist"
    ],
    "classes": [
      "Single"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "uRN": {
    "title": "uRN",
    "subPropertyOf": [
      "DUL.owl#isExpressedBy"
    ],
    "description": "DfE unique reference number of a school in England or Wales",
    "classes": [
      "School"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lastAppearance": {
    "title": "lastAppearance",
    "subPropertyOf": [
      "DUL.owl#isParticipantIn"
    ],
    "classes": [
      "FictionalCharacter"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "frequentlyUpdated": {
    "title": "frequentlyUpdated",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Software"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "computingMedia": {
    "title": "computingMedia",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "Software"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "province": {
    "title": "province",
    "types": [
      "Province"
    ],
    "subPropertyOf": [
      "DUL.owl#isPartOf"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "beltwayCity": {
    "title": "beltwayCity",
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "classes": [
      "Road"
    ],
    "types": [
      "City"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "provinceLink": {
    "title": "provinceLink",
    "subPropertyOf": [
      "DUL.owl#isPartOf"
    ],
    "types": [
      "Province"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "winsAtPGA": {
    "title": "winsAtPGA",
    "subPropertyOf": [
      "DUL.owl#isParticipantIn"
    ],
    "classes": [
      "GolfPlayer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "competition": {
    "title": "competition",
    "classes": [
      "SportCompetitionResult"
    ],
    "types": [
      "Event"
    ],
    "subPropertyOf": [
      "DUL.owl#isParticipantIn"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "aircraftBomber": {
    "title": "aircraftBomber",
    "classes": [
      "MilitaryUnit"
    ],
    "types": [
      "MeanOfTransportation"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "leadTeam": {
    "title": "leadTeam",
    "types": [
      "SportsTeam"
    ],
    "classes": [
      "Athlete,_CareerStation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "discipline": {
    "title": "discipline",
    "subPropertyOf": [
      "DUL.owl#isDescribedBy"
    ],
    "classes": [
      "Agent"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "populationTotalReference": {
    "title": "populationTotalReference",
    "classes": [
      "Settlement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "battleHonours": {
    "title": "battleHonours",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "MilitaryUnit"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "authorityMandate": {
    "title": "authorityMandate",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "illiteracy": {
    "title": "illiteracy",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "XMLSchema#float"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "agencyStationCode": {
    "title": "agencyStationCode",
    "classes": [
      "Station"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "description": "Agency code (used in tickets/reservations, etc.).",
    "ontology": [
      "DBpedia"
    ]
  },
  "entrezgene": {
    "title": "entrezgene",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Biomolecule"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "circuitLength": {
    "title": "circuitLength",
    "classes": [
      "FormulaOneRacing"
    ],
    "types": [
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "schoolBoard": {
    "title": "schoolBoard",
    "classes": [
      "School"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "effectiveRadiatedPower": {
    "title": "effectiveRadiatedPower",
    "classes": [
      "Broadcaster"
    ],
    "types": [
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "penaltiesTeamA": {
    "title": "penaltiesTeamA",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "PenaltyShootOut"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "administrator": {
    "title": "administrator",
    "classes": [
      "School"
    ],
    "types": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "combatant": {
    "title": "combatant",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "MilitaryConflict"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "wineYear": {
    "title": "wineYear",
    "classes": [
      "WineRegion"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "innervates": {
    "title": "innervates",
    "classes": [
      "Nerve"
    ],
    "subPropertyOf": [
      "DUL.owl#hasCommonBoundary"
    ],
    "types": [
      "AnatomicalStructure"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "termOfOffice": {
    "title": "termOfOffice",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "temple": {
    "title": "temple",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "shipLaunch": {
    "title": "shipLaunch",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "Ship"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "superFamily": {
    "title": "superFamily",
    "classes": [
      "Species"
    ],
    "types": [
      "Taxon"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "goldenGlobeAward": {
    "title": "goldenGlobeAward",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "Artist"
    ],
    "types": [
      "Award"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "emblem": {
    "title": "emblem",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "minTime": {
    "title": "minTime",
    "types": [
      "XMLSchema#double"
    ],
    "description": "Minimum preparation time of a recipe / Food",
    "classes": [
      "Food"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "nssdcId": {
    "title": "nssdcId",
    "classes": [
      "SpaceStation"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "populationPctWomen": {
    "title": "populationPctWomen",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "teamManager": {
    "title": "teamManager",
    "types": [
      "SportsTeam"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "escapeVelocity": {
    "title": "escapeVelocity",
    "classes": [
      "Planet"
    ],
    "types": [
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "horseRidingDiscipline": {
    "title": "horseRidingDiscipline",
    "types": [
      "HorseRiding"
    ],
    "classes": [
      "Athlete"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "tessitura": {
    "title": "tessitura",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "secondDriverCountry": {
    "title": "secondDriverCountry",
    "types": [
      "Country"
    ],
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ],
    "classes": [
      "GrandPrix"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "averageAnnualGeneration": {
    "title": "averageAnnualGeneration",
    "types": [
      "XMLSchema#double"
    ],
    "classes": [
      "PowerStation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "perCapitaIncomeRank": {
    "title": "perCapitaIncomeRank",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "codeDistrict": {
    "title": "codeDistrict",
    "classes": [
      "CityDistrict"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "championInSingleFemale": {
    "title": "championInSingleFemale",
    "classes": [
      "SportsEvent"
    ],
    "subPropertyOf": [
      "championInSingle",
      "DUL.owl#hasParticipant"
    ],
    "description": "winner of a competition in the single female session, to distinguish from the double session (as in tennis)",
    "types": [
      "Athlete"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "cmykCoordinateBlack": {
    "title": "cmykCoordinateBlack",
    "classes": [
      "Colour"
    ],
    "types": [
      "XMLSchema#integer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "rgbCoordinateRed": {
    "title": "rgbCoordinateRed",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Colour"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "maxAbsoluteMagnitude": {
    "title": "maxAbsoluteMagnitude",
    "classes": [
      "CelestialBody"
    ],
    "types": [
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "amgid": {
    "title": "amgid",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Film"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "southEastPlace": {
    "title": "southEastPlace",
    "classes": [
      "Place"
    ],
    "description": "indicates another location to the southeast.",
    "subPropertyOf": [
      "closeTo"
    ],
    "types": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "provCode": {
    "title": "provCode",
    "classes": [
      "Settlement"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lieutenancy": {
    "title": "lieutenancy",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "isoCode": {
    "title": "isoCode",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "iihfHof": {
    "title": "iihfHof",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "usurper": {
    "title": "usurper",
    "classes": [
      "Person"
    ],
    "types": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "classes": {
    "title": "classes",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "School"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "relativeAtomicMass": {
    "title": "relativeAtomicMass",
    "description": "the ratio of the average mass of atoms of an element (from a single given sample or source) to 1\u204412 of the mass of an atom of carbon-12",
    "classes": [
      "ChemicalElement"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "generalManager": {
    "title": "generalManager",
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "SportsTeam"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "upperAge": {
    "title": "upperAge",
    "classes": [
      "School"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "namedByLanguage": {
    "title": "namedByLanguage",
    "types": [
      "Place"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "wptItm": {
    "title": "wptItm",
    "classes": [
      "PokerPlayer"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lcc": {
    "title": "lcc",
    "description": "The Library of Congress Classification (LCC) is a system of library classification developed by the Library of Congress.",
    "classes": [
      "WrittenWork"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "branchFrom": {
    "title": "branchFrom",
    "classes": [
      "AnatomicalStructure"
    ],
    "subPropertyOf": [
      "DUL.owl#hasCommonBoundary"
    ],
    "types": [
      "AnatomicalStructure"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfOrbits": {
    "title": "numberOfOrbits",
    "classes": [
      "SpaceMission"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "profession": {
    "title": "profession",
    "subPropertyOf": [
      "DUL.owl#hasRole"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "davisCup": {
    "title": "davisCup",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "TennisPlayer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "modelLineVehicle": {
    "title": "modelLineVehicle",
    "classes": [
      "MeanOfTransportation"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "humanDevelopmentIndexRank": {
    "title": "humanDevelopmentIndexRank",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "endYearOfSales": {
    "title": "endYearOfSales",
    "types": [
      "XMLSchema#gYear"
    ],
    "classes": [
      "Sales"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "commissioningDate": {
    "title": "commissioningDate",
    "classes": [
      "Ship"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "teamTitle": {
    "title": "teamTitle",
    "classes": [
      "Athlete"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "iataLocationIdentifier": {
    "title": "iataLocationIdentifier",
    "classes": [
      "Infrastructure"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "neighbourhood": {
    "title": "neighbourhood",
    "classes": [
      "HungarySettlement"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "amateurVictory": {
    "title": "amateurVictory",
    "classes": [
      "Boxer"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "chiefEditor": {
    "title": "chiefEditor",
    "classes": [
      "Work"
    ],
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "inclination": {
    "title": "inclination",
    "classes": [
      "Spacecraft"
    ],
    "types": [
      "XMLSchema#float"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "student": {
    "title": "student",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "Person"
    ],
    "types": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "reignName": {
    "title": "reignName",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "cmykCoordinateMagenta": {
    "title": "cmykCoordinateMagenta",
    "classes": [
      "Colour"
    ],
    "types": [
      "XMLSchema#integer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "placeOfWorship": {
    "title": "placeOfWorship",
    "classes": [
      "ClericalAdministrativeRegion"
    ],
    "types": [
      "Church"
    ],
    "description": "A religious administrative body needs to know which places of worship it",
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "projectBudgetTotal": {
    "title": "projectBudgetTotal",
    "classes": [
      "ResearchProject"
    ],
    "description": "The total budget of the research project.",
    "types": [
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "danseScore": {
    "title": "danseScore",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "associationOfLocalGovernment": {
    "title": "associationOfLocalGovernment",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "Settlement"
    ],
    "types": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "nearestCity": {
    "title": "nearestCity",
    "subPropertyOf": [
      "DUL.owl#nearTo"
    ],
    "classes": [
      "Place"
    ],
    "types": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "secondDriver": {
    "title": "secondDriver",
    "types": [
      "Person"
    ],
    "classes": [
      "GrandPrix"
    ],
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "decideDate": {
    "title": "decideDate",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "SupremeCourtOfTheUnitedStatesCase"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "provost": {
    "title": "provost",
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "University"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "nonFictionSubject": {
    "title": "nonFictionSubject",
    "subPropertyOf": [
      "DUL.owl#isAbout"
    ],
    "classes": [
      "WrittenWork"
    ],
    "description": "The subject of a non-fiction book (e.g.: History, Biography, Cookbook, Climate change, ...).",
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfClassrooms": {
    "title": "numberOfClassrooms",
    "classes": [
      "School"
    ],
    "subPropertyOf": [
      "DUL.owl#hasRegion"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "maximumDepth": {
    "title": "maximumDepth",
    "subPropertyOf": [
      "depth"
    ],
    "description": "Source of the value can be declare by .",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "firstLaunch": {
    "title": "firstLaunch",
    "classes": [
      "YearInSpaceflight"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "senior": {
    "title": "senior",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "governingBody": {
    "title": "governingBody",
    "types": [
      "Organisation"
    ],
    "classes": [
      "Place"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "description": "Body that owns/operates the Place.",
    "ontology": [
      "DBpedia"
    ]
  },
  "coachClub": {
    "title": "coachClub",
    "classes": [
      "Athlete"
    ],
    "types": [
      "SportsTeam"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "added": {
    "title": "added",
    "classes": [
      "HistoricPlace"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "terytCode": {
    "title": "terytCode",
    "description": "indexing code used by the Polish National Official Register of the Territorial Division of the Country (TERYT) to identify various entities",
    "classes": [
      "PopulatedPlace"
    ],
    "subPropertyOf": [
      "DUL.owl#isClassifiedBy"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "millsCodeNLWindmotoren": {
    "title": "millsCodeNLWindmotoren",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Mill"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "convictionDate": {
    "title": "convictionDate",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "rankInFinalMedalCount": {
    "title": "rankInFinalMedalCount",
    "types": [
      "XMLSchema#positiveInteger"
    ],
    "classes": [
      "OlympicResult"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "winsAtJapan": {
    "title": "winsAtJapan",
    "classes": [
      "GolfPlayer"
    ],
    "subPropertyOf": [
      "DUL.owl#isParticipantIn"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "impactFactor": {
    "title": "impactFactor",
    "classes": [
      "AcademicJournal"
    ],
    "types": [
      "XMLSchema#double"
    ],
    "description": "The impact factor or more precisely the journal impact factor (JIF) of a journal is intended to measure how often other journals cite an article from it in relation to the total number of articles published there. The higher the impact factor, the more prestigious a journal is.",
    "ontology": [
      "DBpedia"
    ]
  },
  "skiPisteKilometre": {
    "title": "skiPisteKilometre",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "bodyDiscovered": {
    "title": "bodyDiscovered",
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "types": [
      "Place"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "distanceLaps": {
    "title": "distanceLaps",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "GrandPrix"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "podiums": {
    "title": "podiums",
    "classes": [
      "FormulaOneRacer"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "passengersPerDay": {
    "title": "passengersPerDay",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "description": "Number of passengers per day.",
    "classes": [
      "Infrastructure"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "ist": {
    "title": "ist",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "hasAnnotation": {
    "title": "hasAnnotation",
    "types": [
      "Annotation"
    ],
    "classes": [
      "Document"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "road": {
    "title": "road",
    "types": [
      "Road"
    ],
    "classes": [
      "Infrastructure"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "kindOfCriminalAction": {
    "title": "kindOfCriminalAction",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Criminal"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "nflSeason": {
    "title": "nflSeason",
    "classes": [
      "Athlete"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "serviceModule": {
    "title": "serviceModule",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "SpaceMission"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "freeDanseScore": {
    "title": "freeDanseScore",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "abbeychurchBlessing": {
    "title": "abbeychurchBlessing",
    "classes": [
      "Cleric"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "draftLeague": {
    "title": "draftLeague",
    "classes": [
      "Athlete"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "catch": {
    "title": "catch",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "committeeInLegislature": {
    "title": "committeeInLegislature",
    "description": "Committee in the legislature (eg.: Committee on Economic and Monetary Affairs of the European Parliament).",
    "classes": [
      "Legislature"
    ],
    "subPropertyOf": [
      "DUL.owl#hasPart"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "locomotive": {
    "title": "locomotive",
    "types": [
      "Locomotive"
    ],
    "classes": [
      "Train"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "basedOn": {
    "title": "basedOn",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "types": [
      "Work"
    ],
    "classes": [
      "Work"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "climate": {
    "title": "climate",
    "subPropertyOf": [
      "DUL.owl#hasQuality"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "grossDomesticProductNominalPerCapita": {
    "title": "grossDomesticProductNominalPerCapita",
    "types": [
      "GrossDomesticProductPerCapita"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "distanceToBelfast": {
    "title": "distanceToBelfast",
    "types": [
      "XMLSchema#double"
    ],
    "classes": [
      "Settlement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfNeighbourhood": {
    "title": "numberOfNeighbourhood",
    "classes": [
      "GermanSettlement"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "matchPoint": {
    "title": "matchPoint",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lastLaunchRocket": {
    "title": "lastLaunchRocket",
    "classes": [
      "LaunchPad"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "types": [
      "Rocket"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "simcCode": {
    "title": "simcCode",
    "description": "indexing code used by the Polish National Official Register of the Territorial Division of the Country (TERYT) to identify various entities",
    "subPropertyOf": [
      "DUL.owl#isClassifiedBy"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "whaDraft": {
    "title": "whaDraft",
    "classes": [
      "IceHockeyPlayer"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "head": {
    "title": "head",
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "EducationalInstitution"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "feat": {
    "title": "feat",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "establishment": {
    "title": "establishment",
    "types": [
      "XMLSchema#integer"
    ],
    "classes": [
      "ChristianDoctrine"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "membership": {
    "title": "membership",
    "types": [
      "22-rdf-syntax-ns#langString"
    ],
    "classes": [
      "Organisation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "equity": {
    "title": "equity",
    "types": [
      "XMLSchema#double"
    ],
    "classes": [
      "Company"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "continentalTournamentGold": {
    "title": "continentalTournamentGold",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfRockets": {
    "title": "numberOfRockets",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Aircraft"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "boxerCategory": {
    "title": "boxerCategory",
    "types": [
      "BoxingCategory"
    ],
    "classes": [
      "Boxer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "coastLength": {
    "title": "coastLength",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#float"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "regime": {
    "title": "regime",
    "classes": [
      "Spacecraft"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "capitalElevation": {
    "title": "capitalElevation",
    "classes": [
      "Island"
    ],
    "types": [
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "parkingLotsTrucks": {
    "title": "parkingLotsTrucks",
    "classes": [
      "RestArea"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "wimbledonSingle": {
    "title": "wimbledonSingle",
    "classes": [
      "TennisPlayer"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "dutchRKDCode": {
    "title": "dutchRKDCode",
    "classes": [
      "Artist"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "areaRural": {
    "title": "areaRural",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lchfDraftYear": {
    "title": "lchfDraftYear",
    "classes": [
      "IceHockeyPlayer"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "maidenFlight": {
    "title": "maidenFlight",
    "classes": [
      "Rocket"
    ],
    "description": "date of maiden flight",
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "flora": {
    "title": "flora",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "torchBearer": {
    "title": "torchBearer",
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ],
    "classes": [
      "Olympics"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "cmpEvaDuration": {
    "title": "cmpEvaDuration",
    "types": [
      "XMLSchema#double",
      "hour"
    ],
    "classes": [
      "SpaceMission",
      "SpaceMission"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "tempPlace": {
    "title": "tempPlace",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "ChartsPlacements"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "notableIdea": {
    "title": "notableIdea",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "meshName": {
    "title": "meshName",
    "classes": [
      "AnatomicalStructure"
    ],
    "types": [
      "22-rdf-syntax-ns#langString"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "gnisCode": {
    "title": "gnisCode",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "originalTitle": {
    "title": "originalTitle",
    "types": [
      "22-rdf-syntax-ns#langString"
    ],
    "description": "The original title of the work, most of the time in the original language as well",
    "classes": [
      "Work"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "seiyu": {
    "title": "seiyu",
    "classes": [
      "Person"
    ],
    "types": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "teachingStaff": {
    "title": "teachingStaff",
    "classes": [
      "School"
    ],
    "subPropertyOf": [
      "DUL.owl#hasMember"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "firstMention": {
    "title": "firstMention",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "muteCharacterInPlay": {
    "title": "muteCharacterInPlay",
    "description": "Name of a mute character in play.",
    "classes": [
      "Play"
    ],
    "subPropertyOf": [
      "characterInPlay"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "hasAbsorbedMunicipality": {
    "title": "hasAbsorbedMunicipality",
    "types": [
      "FormerMunicipality"
    ],
    "classes": [
      "Municipality"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "badGuy": {
    "title": "badGuy",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "longDistancePisteKilometre": {
    "title": "longDistancePisteKilometre",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "soccerLeagueRelegated": {
    "title": "soccerLeagueRelegated",
    "types": [
      "SportsTeam"
    ],
    "classes": [
      "SoccerLeagueSeason"
    ],
    "subPropertyOf": [
      "DUL.owl#isSettingFor"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "creatorOfDish": {
    "title": "creatorOfDish",
    "types": [
      "Person"
    ],
    "classes": [
      "Food"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "description": "The person that creates (invents) the food (eg. Caesar Cardini is the creator of the Caesar salad).",
    "ontology": [
      "DBpedia"
    ]
  },
  "millType": {
    "title": "millType",
    "classes": [
      "Mill"
    ],
    "subPropertyOf": [
      "DUL.owl#isClassifiedBy"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "radius_ly": {
    "title": "radius_ly",
    "types": [
      "XMLSchema#integer"
    ],
    "classes": [
      "Globularswarm"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "defeatAsMgr": {
    "title": "defeatAsMgr",
    "classes": [
      "Coach"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "rotationPeriod": {
    "title": "rotationPeriod",
    "types": [
      "XMLSchema#double"
    ],
    "classes": [
      "Planet"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "leadership": {
    "title": "leadership",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "historicalRegion": {
    "title": "historicalRegion",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "aircraftHelicopterObservation": {
    "title": "aircraftHelicopterObservation",
    "classes": [
      "MilitaryUnit"
    ],
    "types": [
      "MeanOfTransportation"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "agglomeration": {
    "title": "agglomeration",
    "types": [
      "Agglomeration"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfPlatformLevels": {
    "title": "numberOfPlatformLevels",
    "types": [
      "XMLSchema#integer"
    ],
    "description": "Number of levels of platforms at the station.",
    "classes": [
      "Station"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "dateClosed": {
    "title": "dateClosed",
    "classes": [
      "Canal"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "mostDownPoint": {
    "title": "mostDownPoint",
    "types": [
      "Place"
    ],
    "subPropertyOf": [
      "DUL.owl#hasPart"
    ],
    "classes": [
      "NorwaySettlement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "limit": {
    "title": "limit",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "externalOrnament": {
    "title": "externalOrnament",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "opponents": {
    "title": "opponents",
    "classes": [
      "MilitaryConflict"
    ],
    "description": "\"opponent in a military conflict, an organisation, country, or group of countries. \"",
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfIsland": {
    "title": "numberOfIsland",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "projectStartDate": {
    "title": "projectStartDate",
    "types": [
      "XMLSchema#date"
    ],
    "description": "The start date of the project.",
    "classes": [
      "Project"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "training": {
    "title": "training",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "Artist"
    ],
    "types": [
      "EducationalInstitution"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "latestReleaseVersion": {
    "title": "latestReleaseVersion",
    "classes": [
      "Software"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "ground": {
    "title": "ground",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "SoccerClub"
    ],
    "types": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "otherAppearances": {
    "title": "otherAppearances",
    "classes": [
      "OlympicResult"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "types": [
      "OlympicResult"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "endangeredSince": {
    "title": "endangeredSince",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "blueLongDistancePisteNumber": {
    "title": "blueLongDistancePisteNumber",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "testaverage": {
    "title": "testaverage",
    "types": [
      "XMLSchema#float"
    ],
    "classes": [
      "School"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "affiliate": {
    "title": "affiliate",
    "classes": [
      "FictionalCharacter"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "damsire": {
    "title": "damsire",
    "classes": [
      "Animal"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "types": [
      "Animal"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "watercourse": {
    "title": "watercourse",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "maximumArea": {
    "title": "maximumArea",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "municipalityCode": {
    "title": "municipalityCode",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "parliamentType": {
    "title": "parliamentType",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "refseq": {
    "title": "refseq",
    "classes": [
      "Protein"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "areaQuote": {
    "title": "areaQuote",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "world": {
    "title": "world",
    "types": [
      "core#Concept"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "endCareer": {
    "title": "endCareer",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "facilityId": {
    "title": "facilityId",
    "types": [
      "XMLSchema#integer"
    ],
    "classes": [
      "RadioStation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "measurements": {
    "title": "measurements",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "usOpenDouble": {
    "title": "usOpenDouble",
    "classes": [
      "TennisPlayer"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "collaboration": {
    "title": "collaboration",
    "classes": [
      "Person"
    ],
    "types": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "commune": {
    "title": "commune",
    "classes": [
      "Settlement"
    ],
    "subPropertyOf": [
      "DUL.owl#hasPart"
    ],
    "types": [
      "Settlement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "heisman": {
    "title": "heisman",
    "classes": [
      "Athlete"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "particularSign": {
    "title": "particularSign",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "overallRecord": {
    "title": "overallRecord",
    "classes": [
      "CollegeCoach"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "activeYearsEndDateMgr": {
    "title": "activeYearsEndDateMgr",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "handisport": {
    "title": "handisport",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lastFamilyMember": {
    "title": "lastFamilyMember",
    "types": [
      "Person"
    ],
    "classes": [
      "Family"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "otherActivity": {
    "title": "otherActivity",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "subdivisionName": {
    "title": "subdivisionName",
    "classes": [
      "Island"
    ],
    "types": [
      "Place"
    ],
    "subPropertyOf": [
      "DUL.owl#hasPart"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "tree": {
    "title": "tree",
    "classes": [
      "Place"
    ],
    "types": [
      "Species"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "stateOfOriginPoint": {
    "title": "stateOfOriginPoint",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Athlete"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "cyclistGenre": {
    "title": "cyclistGenre",
    "classes": [
      "Athlete,_CareerStation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "executiveHeadteacher": {
    "title": "executiveHeadteacher",
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "School"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "father": {
    "title": "father",
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "goyaAward": {
    "title": "goyaAward",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "Artist"
    ],
    "types": [
      "Award"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "deme": {
    "title": "deme",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "passengersUsedSystem": {
    "title": "passengersUsedSystem",
    "classes": [
      "Station"
    ],
    "description": "System the passengers are using (from which the passenger statistics are).",
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "bridgeCarries": {
    "title": "bridgeCarries",
    "types": [
      "XMLSchema#string"
    ],
    "description": "Type of vehicles the bridge carries.",
    "classes": [
      "Bridge"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "expedition": {
    "title": "expedition",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "soccerTournamentTopScorer": {
    "title": "soccerTournamentTopScorer",
    "classes": [
      "SoccerTournament"
    ],
    "types": [
      "SoccerPlayer"
    ],
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "artisticFunction": {
    "title": "artisticFunction",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "fees": {
    "title": "fees",
    "types": [
      "XMLSchema#double"
    ],
    "classes": [
      "School"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "routeStartLocation": {
    "title": "routeStartLocation",
    "subPropertyOf": [
      "DUL.owl#hasCommonBoundary"
    ],
    "description": "The start location of the route.",
    "classes": [
      "RouteOfTransportation"
    ],
    "types": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "silCode": {
    "title": "silCode",
    "classes": [
      "Language"
    ],
    "subPropertyOf": [
      "LanguageCode",
      "DUL.owl#isClassifiedBy"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "areaDate": {
    "title": "areaDate",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "currentLeague": {
    "title": "currentLeague",
    "types": [
      "SportsLeague"
    ],
    "classes": [
      "Athlete"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "prospectLeague": {
    "title": "prospectLeague",
    "classes": [
      "IceHockeyPlayer"
    ],
    "types": [
      "SportsLeague"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "wsopWristband": {
    "title": "wsopWristband",
    "description": null,
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "PokerPlayer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "licenceNumberLabel": {
    "title": "licenceNumberLabel",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "third": {
    "title": "third",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "soccerTournamentOpeningSeason": {
    "title": "soccerTournamentOpeningSeason",
    "types": [
      "SoccerTournament"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "SoccerTournament"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "dressCode": {
    "title": "dressCode",
    "types": [
      "XMLSchema#string"
    ],
    "description": "The recommended dress code for an establishment or event.",
    "classes": [
      "Restaurant"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "ons": {
    "title": "ons",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Settlement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "conservationStatusSystem": {
    "title": "conservationStatusSystem",
    "classes": [
      "Species"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "phonePrefix": {
    "title": "phonePrefix",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "description": "Don't use this, use areaCode",
    "ontology": [
      "DBpedia"
    ]
  },
  "clubsRecordGoalscorer": {
    "title": "clubsRecordGoalscorer",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "SoccerClub"
    ],
    "types": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "dutchNAIdentifier": {
    "title": "dutchNAIdentifier",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "MemberResistanceMovement"
    ],
    "subPropertyOf": [
      "code"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "mount": {
    "title": "mount",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lowestState": {
    "title": "lowestState",
    "subPropertyOf": [
      "DUL.owl#isPartOf"
    ],
    "types": [
      "PopulatedPlace"
    ],
    "classes": [
      "Island"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "imposedDanseCompetition": {
    "title": "imposedDanseCompetition",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "eptItm": {
    "title": "eptItm",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "PokerPlayer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfVolunteers": {
    "title": "numberOfVolunteers",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Organisation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "capacityFactor": {
    "title": "capacityFactor",
    "types": [
      "XMLSchema#float"
    ],
    "classes": [
      "PowerStation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "freeFlightTime": {
    "title": "freeFlightTime",
    "types": [
      "XMLSchema#double",
      "day"
    ],
    "classes": [
      "Spacecraft",
      "Spacecraft"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "alpsSubsection": {
    "title": "alpsSubsection",
    "types": [
      "MountainRange"
    ],
    "classes": [
      "Mountain"
    ],
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "description": "the Alps subsection to which the mountain belongs, according to the SOIUSA classification",
    "ontology": [
      "DBpedia"
    ]
  },
  "origo": {
    "title": "origo",
    "classes": [
      "Muscle"
    ],
    "types": [
      "AnatomicalStructure"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "breeder": {
    "title": "breeder",
    "classes": [
      "Animal"
    ],
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "power": {
    "title": "power",
    "classes": [
      "FictionalCharacter"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "maidenFlightRocket": {
    "title": "maidenFlightRocket",
    "classes": [
      "YearInSpaceflight"
    ],
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ],
    "types": [
      "Rocket"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "goldMedalSingle": {
    "title": "goldMedalSingle",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "TennisPlayer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfCanton": {
    "title": "numberOfCanton",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Department"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "generalCouncil": {
    "title": "generalCouncil",
    "classes": [
      "Agent"
    ],
    "types": [
      "TermOfOffice"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "subprefecture": {
    "title": "subprefecture",
    "subPropertyOf": [
      "DUL.owl#hasPart"
    ],
    "types": [
      "PopulatedPlace"
    ],
    "classes": [
      "Department"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "officialOpenedBy": {
    "title": "officialOpenedBy",
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ],
    "classes": [
      "Olympics"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "declination": {
    "title": "declination",
    "classes": [
      "Constellation"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfMinistries": {
    "title": "numberOfMinistries",
    "classes": [
      "Country"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "retirementDate": {
    "title": "retirementDate",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "leadYear": {
    "title": "leadYear",
    "classes": [
      "Athlete,_CareerStation"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "sourceConfluenceState": {
    "title": "sourceConfluenceState",
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "classes": [
      "River"
    ],
    "types": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lchfDraftTeam": {
    "title": "lchfDraftTeam",
    "types": [
      "HockeyTeam"
    ],
    "classes": [
      "IceHockeyPlayer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "closed": {
    "title": "closed",
    "classes": [
      "EducationalInstitution"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfSuites": {
    "title": "numberOfSuites",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Hotel"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lastElectionDate": {
    "title": "lastElectionDate",
    "description": "The last election date for the house.",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "Legislature"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "onChromosome": {
    "title": "onChromosome",
    "types": [
      "XMLSchema#integer"
    ],
    "classes": [
      "GeneLocation"
    ],
    "description": "the number corresponding to the chromosome on which the gene is located",
    "ontology": [
      "DBpedia"
    ]
  },
  "unknownOutcomes": {
    "title": "unknownOutcomes",
    "description": "the number of launches with an unknown outcome or the number of launches in progress",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Rocket"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "fuelSystem": {
    "title": "fuelSystem",
    "classes": [
      "AutomobileEngine"
    ],
    "subPropertyOf": [
      "DUL.owl#hasComponent"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "depthQuote": {
    "title": "depthQuote",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "iobdbId": {
    "title": "iobdbId",
    "description": "Lortel Archives Internet Off-Broadway database \"show id\" from lortel.org.",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Play"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "sourceConfluenceCountry": {
    "title": "sourceConfluenceCountry",
    "types": [
      "Country"
    ],
    "classes": [
      "River"
    ],
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "fullScore": {
    "title": "fullScore",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "brainInfoType": {
    "title": "brainInfoType",
    "classes": [
      "Brain"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "radioStation": {
    "title": "radioStation",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "RadioStation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "releaseLocation": {
    "title": "releaseLocation",
    "classes": [
      "Work"
    ],
    "types": [
      "Place"
    ],
    "description": "Usually used with releaseDate, particularly for Films. Often there can be several pairs so our modeling is not precise here...",
    "ontology": [
      "DBpedia"
    ]
  },
  "longtype": {
    "title": "longtype",
    "types": [
      "XMLSchema#string"
    ],
    "description": "can be used to include more informations e.g. the name of the artist that a tribute album is in honor of",
    "classes": [
      "Album"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "note": {
    "title": "note",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "AutomobileEngine"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "superTribus": {
    "title": "superTribus",
    "classes": [
      "Species"
    ],
    "subPropertyOf": [
      "Tribus"
    ],
    "types": [
      "Species"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "functionStartDate": {
    "title": "functionStartDate",
    "classes": [
      "PersonFunction"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "geneReviewsId": {
    "title": "geneReviewsId",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Disease"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "oversight": {
    "title": "oversight",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "School"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "europeanParliamentGroup": {
    "title": "europeanParliamentGroup",
    "subPropertyOf": [
      "DUL.owl#isMemberOf"
    ],
    "classes": [
      "PoliticalParty"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "tournamentRecord": {
    "title": "tournamentRecord",
    "classes": [
      "CollegeCoach"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "nationalTeamMatchPoint": {
    "title": "nationalTeamMatchPoint",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "politicalLeader": {
    "title": "politicalLeader",
    "types": [
      "PersonFunction"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "certificationDate": {
    "title": "certificationDate",
    "classes": [
      "Single"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "startYearOfInsertion": {
    "title": "startYearOfInsertion",
    "types": [
      "XMLSchema#gYear"
    ],
    "classes": [
      "AutomobileEngine"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "alpsGroup": {
    "title": "alpsGroup",
    "types": [
      "MountainRange"
    ],
    "description": "the Alps group to which the mountain belongs, according to the SOIUSA classification",
    "classes": [
      "Mountain"
    ],
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "reffBourgmestre": {
    "title": "reffBourgmestre",
    "classes": [
      "Settlement"
    ],
    "types": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "littlePoolRecord": {
    "title": "littlePoolRecord",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "fate": {
    "title": "fate",
    "types": [
      "22-rdf-syntax-ns#langString"
    ],
    "classes": [
      "Company"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "groundsForLiquidation": {
    "title": "groundsForLiquidation",
    "types": [
      "22-rdf-syntax-ns#langString"
    ],
    "classes": [
      "Company"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "participatingIn": {
    "title": "participatingIn",
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "types": [
      "SocietalEvent"
    ],
    "classes": [
      "MemberResistanceMovement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "mother": {
    "title": "mother",
    "types": [
      "Person"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "mgiid": {
    "title": "mgiid",
    "description": "Mouse Genomic Informatics ID",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Biomolecule"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "eptTitle": {
    "title": "eptTitle",
    "classes": [
      "PokerPlayer"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "regionType": {
    "title": "regionType",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "titleDouble": {
    "title": "titleDouble",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "TennisPlayer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "promotion": {
    "title": "promotion",
    "classes": [
      "WrestlingEvent"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "eastPlace": {
    "title": "eastPlace",
    "description": "indicates another place situated east.",
    "subPropertyOf": [
      "closeTo"
    ],
    "classes": [
      "Place"
    ],
    "types": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "daira": {
    "title": "daira",
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "types": [
      "Place"
    ],
    "classes": [
      "Settlement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "foundation": {
    "title": "foundation",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "winterAppearances": {
    "title": "winterAppearances",
    "classes": [
      "OlympicResult"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "types": [
      "OlympicResult"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "completionDate": {
    "title": "completionDate",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "Work"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "bronzeMedalSingle": {
    "title": "bronzeMedalSingle",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "TennisPlayer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "rolandGarrosDouble": {
    "title": "rolandGarrosDouble",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "TennisPlayer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "sharingOutPopulationYear": {
    "title": "sharingOutPopulationYear",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "municipalityType": {
    "title": "municipalityType",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Municipality"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "mayorMandate": {
    "title": "mayorMandate",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Mayor"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "governmentPlace": {
    "title": "governmentPlace",
    "classes": [
      "Island"
    ],
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "types": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "pgaWins": {
    "title": "pgaWins",
    "types": [
      "core#Concept"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "timeshiftChannel": {
    "title": "timeshiftChannel",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "TelevisionStation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "extinctionYear": {
    "title": "extinctionYear",
    "classes": [
      "Species"
    ],
    "types": [
      "XMLSchema#gYear"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "oldProvince": {
    "title": "oldProvince",
    "subPropertyOf": [
      "DUL.owl#isPartOf"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "zdb": {
    "title": "zdb",
    "description": null,
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "PeriodicalLiterature"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "juniorSeason": {
    "title": "juniorSeason",
    "classes": [
      "Agent"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "mayorArticle": {
    "title": "mayorArticle",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "militaryFunction": {
    "title": "militaryFunction",
    "classes": [
      "MilitaryPerson"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "volcanicType": {
    "title": "volcanicType",
    "classes": [
      "Island"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "topLevelDomain": {
    "title": "topLevelDomain",
    "classes": [
      "Country"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "output": {
    "title": "output",
    "types": [
      "XMLSchema#float"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "domain": {
    "title": "domain",
    "classes": [
      "Species"
    ],
    "subPropertyOf": [
      "DUL.owl#specializes"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "juniorYearsStartYear": {
    "title": "juniorYearsStartYear",
    "types": [
      "XMLSchema#gYear"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfTracks": {
    "title": "numberOfTracks",
    "description": "Number of tracks of a railway or railway station.",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Infrastructure"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "elevationQuote": {
    "title": "elevationQuote",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "juniorYearsEndYear": {
    "title": "juniorYearsEndYear",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#gYear"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "iataAirlineCode": {
    "title": "iataAirlineCode",
    "description": "IATA designation for airline companies",
    "classes": [
      "Airline"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "canonizedDate": {
    "title": "canonizedDate",
    "classes": [
      "Saint"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "blazonCaption": {
    "title": "blazonCaption",
    "classes": [
      "Blazon"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "finalLostDouble": {
    "title": "finalLostDouble",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "TennisPlayer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "usOpenSingle": {
    "title": "usOpenSingle",
    "classes": [
      "TennisPlayer"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "topSpeed": {
    "title": "topSpeed",
    "types": [
      "XMLSchema#double",
      "kilometrePerHour"
    ],
    "classes": [
      "Engine"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfStateDeputies": {
    "title": "numberOfStateDeputies",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "conservationStatus": {
    "title": "conservationStatus",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Species"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "discovery": {
    "title": "discovery",
    "classes": [
      "Island"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "mastersWins": {
    "title": "mastersWins",
    "types": [
      "core#Concept"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "localizationThumbnail": {
    "title": "localizationThumbnail",
    "classes": [
      "PopulatedPlace"
    ],
    "subPropertyOf": [
      "DUL.owl#isExpressedBy"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "broadcastRepeater": {
    "title": "broadcastRepeater",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Broadcaster"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "countryWithFirstSatellite": {
    "title": "countryWithFirstSatellite",
    "classes": [
      "YearInSpaceflight"
    ],
    "types": [
      "Country"
    ],
    "subPropertyOf": [
      "DUL.owl#hasParticipant"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "iftaAward": {
    "title": "iftaAward",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "Actor"
    ],
    "types": [
      "Award"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "island": {
    "title": "island",
    "subPropertyOf": [
      "DUL.owl#isLocationOf"
    ],
    "classes": [
      "BodyOfWater"
    ],
    "types": [
      "Island"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "shareOfAudience": {
    "title": "shareOfAudience",
    "types": [
      "XMLSchema#float"
    ],
    "classes": [
      "Broadcaster"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "mayorTitle": {
    "title": "mayorTitle",
    "classes": [
      "HungarySettlement"
    ],
    "types": [
      "22-rdf-syntax-ns#langString"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "giniCoefficientAsOf": {
    "title": "giniCoefficientAsOf",
    "classes": [
      "PopulatedPlace"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "v_hb": {
    "title": "v_hb",
    "types": [
      "XMLSchema#integer"
    ],
    "classes": [
      "Globularswarm"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "filmColourType": {
    "title": "filmColourType",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Film"
    ],
    "description": "specifies the colour type of the film i.e. 'colour' or 'b/w'",
    "ontology": [
      "DBpedia"
    ]
  },
  "governorate": {
    "title": "governorate",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfRestaurants": {
    "title": "numberOfRestaurants",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Hotel"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "aircraftRecon": {
    "title": "aircraftRecon",
    "classes": [
      "MilitaryUnit"
    ],
    "types": [
      "MeanOfTransportation"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "politicalPartyOfLeader": {
    "title": "politicalPartyOfLeader",
    "types": [
      "PoliticalParty"
    ],
    "classes": [
      "Legislature"
    ],
    "description": "The Political party of leader.",
    "subPropertyOf": [
      "DUL.owl#hasPart"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "depths": {
    "title": "depths",
    "types": [
      "Depth"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "cannonNumber": {
    "title": "cannonNumber",
    "classes": [
      "Place"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "nation": {
    "title": "nation",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "afdbId": {
    "title": "afdbId",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Film"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "largestMetro": {
    "title": "largestMetro",
    "subPropertyOf": [
      "DUL.owl#isLocationOf"
    ],
    "types": [
      "PopulatedPlace"
    ],
    "classes": [
      "Settlement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "spurType": {
    "title": "spurType",
    "subPropertyOf": [
      "DUL.owl#isClassifiedBy"
    ],
    "classes": [
      "Road"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "denomination": {
    "title": "denomination",
    "subPropertyOf": [
      "DUL.owl#isExpressedBy"
    ],
    "classes": [
      "School"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "hgncid": {
    "title": "hgncid",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Biomolecule"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "penaltiesTeamB": {
    "title": "penaltiesTeamB",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "PenaltyShootOut"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lowestRegion": {
    "title": "lowestRegion",
    "types": [
      "PopulatedPlace"
    ],
    "classes": [
      "Island"
    ],
    "subPropertyOf": [
      "DUL.owl#isLocationOf"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "gasChambers": {
    "title": "gasChambers",
    "types": [
      "XMLSchema#string"
    ],
    "description": "Number or description of gas chambers of a ConcentrationCamp",
    "classes": [
      "ConcentrationCamp"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "winsAtAsia": {
    "title": "winsAtAsia",
    "classes": [
      "GolfPlayer"
    ],
    "subPropertyOf": [
      "DUL.owl#isParticipantIn"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "governmentElevation": {
    "title": "governmentElevation",
    "classes": [
      "Island"
    ],
    "types": [
      "XMLSchema#double"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "awardName": {
    "title": "awardName",
    "description": "Award a person has received (literal). Compare to award (ObjectProperty)",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "hasKMLData": {
    "title": "hasKMLData",
    "classes": [
      "File"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "maximumInclination": {
    "title": "maximumInclination",
    "classes": [
      "LaunchPad"
    ],
    "types": [
      "XMLSchema#float"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "torqueOutput": {
    "title": "torqueOutput",
    "types": [
      "newtonMetre",
      "XMLSchema#double"
    ],
    "classes": [
      "Engine",
      "AutomobileEngine"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "landRegistryCode": {
    "title": "landRegistryCode",
    "classes": [
      "Settlement"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "formerChannel": {
    "title": "formerChannel",
    "classes": [
      "Broadcaster"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "religiousHeadLabel": {
    "title": "religiousHeadLabel",
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "School"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "educationPlace": {
    "title": "educationPlace",
    "classes": [
      "Person"
    ],
    "types": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "barPassRate": {
    "title": "barPassRate",
    "types": [
      "XMLSchema#float"
    ],
    "classes": [
      "School"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "continentalTournamentSilver": {
    "title": "continentalTournamentSilver",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "draftPick": {
    "title": "draftPick",
    "classes": [
      "GridironFootballPlayer"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "hsvCoordinateValue": {
    "title": "hsvCoordinateValue",
    "classes": [
      "Colour"
    ],
    "types": [
      "XMLSchema#integer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "statisticLabel": {
    "title": "statisticLabel",
    "classes": [
      "BaseballPlayer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfDistrict": {
    "title": "numberOfDistrict",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Department"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "dec": {
    "title": "dec",
    "classes": [
      "Openswarm"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "selectionPoint": {
    "title": "selectionPoint",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Athlete"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "sportsFunction": {
    "title": "sportsFunction",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "causalties": {
    "title": "causalties",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "MilitaryConflict"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfHoles": {
    "title": "numberOfHoles",
    "classes": [
      "GolfCourse"
    ],
    "types": [
      "XMLSchema#integer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "locusSupplementaryData": {
    "title": "locusSupplementaryData",
    "classes": [
      "Protein"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lethalOnChickens": {
    "title": "lethalOnChickens",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "ChemicalSubstance"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "cityLink": {
    "title": "cityLink",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "construction": {
    "title": "construction",
    "subPropertyOf": [
      "DUL.owl#sameSettingAs"
    ],
    "classes": [
      "ArchitecturalStructure"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lifeExpectancy": {
    "title": "lifeExpectancy",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfSpans": {
    "title": "numberOfSpans",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Bridge"
    ],
    "description": "Number of spans or arches.",
    "ontology": [
      "DBpedia"
    ]
  },
  "numberOfPads": {
    "title": "numberOfPads",
    "classes": [
      "LaunchPad"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "refseqprotein": {
    "title": "refseqprotein",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Biomolecule"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "editorTitle": {
    "title": "editorTitle",
    "classes": [
      "Magazine"
    ],
    "types": [
      "22-rdf-syntax-ns#langString"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "freeProgCompetition": {
    "title": "freeProgCompetition",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "superOrder": {
    "title": "superOrder",
    "classes": [
      "Species"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "commandModule": {
    "title": "commandModule",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "SpaceMission"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "statusManager": {
    "title": "statusManager",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "soccerTournamentMostSteady": {
    "title": "soccerTournamentMostSteady",
    "classes": [
      "SoccerTournament"
    ],
    "types": [
      "SoccerClub"
    ],
    "subPropertyOf": [
      "DUL.owl#isSettingFor"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "mouthRegion": {
    "title": "mouthRegion",
    "classes": [
      "River"
    ],
    "types": [
      "PopulatedPlace"
    ],
    "subPropertyOf": [
      "DUL.owl#hasLocation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "different": {
    "title": "different",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "ibdbId": {
    "title": "ibdbId",
    "description": "The Internet Broadway Database ID (IBDB ID) from ibdb.com.",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Play"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "digitalSubChannel": {
    "title": "digitalSubChannel",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "Broadcaster"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "contractAward": {
    "title": "contractAward",
    "classes": [
      "SpaceShuttle"
    ],
    "types": [
      "XMLSchema#date"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "broadcastTranslator": {
    "title": "broadcastTranslator",
    "classes": [
      "Broadcaster"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "linguisticsTradition": {
    "title": "linguisticsTradition",
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "cites": {
    "title": "cites",
    "description": "A document cited by this work. Like OntologyProperty:dct:references, but as a datatype property.",
    "classes": [
      "Work"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "previousDemographics": {
    "title": "previousDemographics",
    "types": [
      "Demographics"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "musicBand": {
    "title": "musicBand",
    "classes": [
      "MusicalArtist"
    ],
    "types": [
      "Band"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "usOpenMixed": {
    "title": "usOpenMixed",
    "classes": [
      "TennisPlayer"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "supplementalDraftRound": {
    "title": "supplementalDraftRound",
    "classes": [
      "Athlete"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "europeanUnionEntranceDate": {
    "title": "europeanUnionEntranceDate",
    "types": [
      "XMLSchema#date"
    ],
    "classes": [
      "Country"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "nonProfessionalCareer": {
    "title": "nonProfessionalCareer",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "orbitalFlights": {
    "title": "orbitalFlights",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "YearInSpaceflight"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "filmNumber": {
    "title": "filmNumber",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "regionServed": {
    "title": "regionServed",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "Organisation"
    ],
    "types": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "jutsu": {
    "title": "jutsu",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "sixthFormStudents": {
    "title": "sixthFormStudents",
    "classes": [
      "School"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "finalLostSingle": {
    "title": "finalLostSingle",
    "classes": [
      "TennisPlayer"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "australiaOpenMixed": {
    "title": "australiaOpenMixed",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "TennisPlayer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "rebuilder": {
    "title": "rebuilder",
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "classes": [
      "MeanOfTransportation"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "redLongDistancePisteNumber": {
    "title": "redLongDistancePisteNumber",
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "classes": [
      "Place"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "rgbCoordinateBlue": {
    "title": "rgbCoordinateBlue",
    "classes": [
      "Colour"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "tvComId": {
    "title": "tvComId",
    "classes": [
      "TelevisionShow"
    ],
    "types": [
      "XMLSchema#integer"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "project": {
    "title": "project",
    "types": [
      "Project"
    ],
    "classes": [
      "Person"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "center": {
    "title": "center",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "NorwaySettlement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "shoot": {
    "title": "shoot",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "racketCatching": {
    "title": "racketCatching",
    "classes": [
      "TennisPlayer"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "lowestPoint": {
    "title": "lowestPoint",
    "types": [
      "Place"
    ],
    "classes": [
      "Settlement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "launches": {
    "title": "launches",
    "classes": [
      "LaunchPad"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "circumcised": {
    "title": "circumcised",
    "classes": [
      "Person"
    ],
    "types": [
      "XMLSchema#string"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "officialName": {
    "title": "officialName",
    "types": [
      "22-rdf-syntax-ns#langString"
    ],
    "classes": [
      "Settlement"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "rgbCoordinateGreen": {
    "title": "rgbCoordinateGreen",
    "classes": [
      "Colour"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "significantDesign": {
    "title": "significantDesign",
    "classes": [
      "Architect"
    ],
    "subPropertyOf": [
      "DUL.owl#coparticipatesWith"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "catholicPercentage": {
    "title": "catholicPercentage",
    "types": [
      "XMLSchema#string"
    ],
    "classes": [
      "PopulatedPlace"
    ],
    "ontology": [
      "DBpedia"
    ]
  },
  "fcRuns": {
    "title": "fcRuns",
    "classes": [
      "Cricketer"
    ],
    "types": [
      "XMLSchema#nonNegativeInteger"
    ],
    "ontology": [
      "DBpedia"
    ]
  }
}